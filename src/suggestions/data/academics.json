[
  { "text": "William Shakespeare | Poetry Foundation", "icon": "BOOK" },
  { "text": "Plot and Setting – Students read and analyze short stories and nonfiction selections in terms of plot and setting", "icon": "BOOK" },
  { "text": "Short stories and nonfiction selections", "icon": "BOOK" },
  { "text": "analyze character development by reading short stories and nonfiction selections", "icon": "BOOK" },
  { "text": "examine characters through dialog, physical descriptions, character actions and reactions", "icon": "BOOK" },
  { "text": "The Open Window", "icon": "BOOK" },
  { "text": "The Necklace", "icon": "BOOK" },
  { "text": "examine theme and conflict by identifying universal themes, distinguishing internal and external conflicts and evaluating conflict between characters in several short stories and nonfiction selections", "icon": "BOOK" },
  { "text": "The hangover in literature, from Shakespeare and Burns to Bridget Jones", "icon": "BOOK" },
  { "text": "Brexit Britain: was Jane Austen an original little Englander?", "icon": "BOOK" },
  { "text": "Friday essay: George Eliot 200 years on - a scandalous life, a brilliant mind and a huge literary legacy", "icon": "BOOK" },
  { "text": "Drt these decision makng", "icon": "BOOK" },
  { "text": "Go get your passport", "icon": "BOOK" },
  { "text": "Read a children book", "icon": "BOOK" },
  { "text": "Read spanish", "icon": "BOOK" },
  { "text": "Flashcards/watch Spanish movie or talk", "icon": "BOOK" },
  { "text": "Options", "icon": "BOOK" },
  { "text": "My dreams", "icon": "BOOK" },
  { "text": "Us prep", "icon": "BOOK" },
  { "text": "A book I love", "icon": "BOOK" },
  { "text": "Print all docs", "icon": "BOOK" },
  { "text": "Relire doc", "icon": "BOOK" },
  {
    "text": "Write letter to a loved one (wife/husband, family member or friend)",
    "icon": "BOOK"
  },
  { "text": "Master", "icon": "BOOK" },
  { "text": "Read drt", "icon": "BOOK" },
  { "text": "I forgive to", "icon": "BOOK" },
  { "text": "My family", "icon": "BOOK" },
  { "text": "Read options", "icon": "BOOK" },
  { "text": "Webinar", "icon": "BOOK" },
  { "text": "Read mwmoire", "icon": "BOOK" },
  { "text": "My morning routine", "icon": "BOOK" },
  { "text": "Grenoble email", "icon": "BOOK" },
  { "text": "See drt grenoble conditions", "icon": "BOOK" },
  { "text": "AFD job", "icon": "BOOK" },
  { "text": "Translate your grocery list", "icon": "BOOK" },
  { "text": "Start a simple journal to brain dump", "icon": "BOOK" },
  {
    "text": "My opinion about my body and how comfortable I am with it",
    "icon": "BOOK"
  },
  { "text": "I love TV show X because", "icon": "BOOK" },
  { "text": "Five things I lust after", "icon": "BOOK" },
  { "text": "My journaling journey was", "icon": "BOOK" },
  { "text": "My favorite animal is", "icon": "BOOK" },
  { "text": "Read the news in the Language", "icon": "BOOK" },
  { "text": "What my future will look like", "icon": "BOOK" },
  { "text": "The weirdest things I like", "icon": "BOOK" },
  { "text": "Read article on creating email course in 2 days", "icon": "BOOK" },
  { "text": "Complete 1st Block of GenM email marketing", "icon": "BOOK" },
  { "text": "WebCD", "icon": "BOOK" },
  { "text": "Finish a book", "icon": "BOOK" },
  { "text": "Science affirmations", "icon": "BOOK" },
  { "text": "MCAT Studying Part 1", "icon": "BOOK" },
  { "text": "Lumosity", "icon": "BOOK" },
  { "text": "Bible Reading", "icon": "BOOK" },
  { "text": "Read a book", "icon": "BOOK" },
  { "text": "Do", "icon": "BOOK" },
  { "text": "Freestyle at", "icon": "BOOK" },
  { "text": "Learn English", "icon": "BOOK" },
  { "text": "Study", "icon": "BOOK" },
  { "text": "Listening audiobook", "icon": "BOOK" },
  { "text": "Take a bath", "icon": "BOOK" },
  { "text": "Review for Sciences and Languages", "icon": "BOOK" },
  { "text": "Book reviews", "icon": "BOOK" },
  { "text": "PR2:. Read on Group Report", "icon": "BOOK" },
  { "text": "AE:  Assignment", "icon": "BOOK" },
  { "text": "Master the Job Search Part 2", "icon": "BOOK" },
  { "text": "Become an Agile Project Manager", "icon": "BOOK" },
  { "text": "Content Marketing Part 1", "icon": "BOOK" },
  { "text": "Master the Job Search Part 1", "icon": "BOOK" },
  { "text": "Content Marketing Part 2", "icon": "BOOK" },
  { "text": "Deutsch", "icon": "BOOK" },
  { "text": "Read for 30 minutes", "icon": "BOOK" },
  { "text": "Study Korean", "icon": "BOOK" },
  { "text": "Learn Korean", "icon": "BOOK" },
  { "text": "Journaling", "icon": "BOOK" },
  { "text": "Duolingo", "icon": "BOOK" },
  { "text": "Planning", "icon": "BOOK" },
  { "text": "Study Chinese", "icon": "BOOK" },
  { "text": "Revise Anki cards", "icon": "BOOK" },
  { "text": "Supplements", "icon": "BOOK" },
  { "text": "Writing", "icon": "BOOK" },
  { "text": "Write 5k", "icon": "BOOK" },
  { "text": "Write 10k", "icon": "BOOK" },
  { "text": "5k words", "icon": "BOOK" },
  { "text": "Write 1k", "icon": "BOOK" },
  { "text": "Forms", "icon": "BOOK" },
  { "text": "Cancel/pause toucanbox", "icon": "BOOK" },
  { "text": "Deliver gay romance!", "icon": "BOOK" },
  { "text": "Read for 30 minutes - irodalom", "icon": "BOOK" },
  { "text": "Read for 30 minutes - pszi", "icon": "BOOK" },
  { "text": "Read for 40 minutes - irodalom", "icon": "BOOK" },
  { "text": "Finished my G.E.D", "icon": "BOOK" },
  { "text": "Finish my G.E.D", "icon": "BOOK" },
  { "text": "News in level", "icon": "BOOK" },
  { "text": "News in level", "icon": "BOOK" },
  
  { "text": "Asymptotic Analysis", "icon": "BOOK"},
  { "text": "Worst, Average and Best Cases", "icon": "BOOK"},
  { "text": "Little o and little omega notations", "icon": "BOOK"},
  { "text": "Lower and Upper Bound Theory", "icon": "BOOK"},
  { "text": "NP-Completeness Introduction", "icon": "BOOK"},
  { "text": "Linear Search, Binary Search, Jump Search, Interpolation Search, Exponential Search, Ternary Search", "icon": "BOOK"},
  { "text": "Selection Sort, Bubble Sort, Insertion Sort, Merge Sort, Heap Sort, QuickSort, Radix Sort, Counting Sort, Bucket Sort, ShellSort, Comb Sort, Pigeonhole Sort, Cycle Sort", "icon": "BOOK"},
  { "text": "Interpolation search vs Binary search", "icon": "BOOK"},
  { "text": "Lower bound for comparison based sorting algorithms", "icon": "BOOK"},
  { "text": "Which sorting algorithm makes minimum number of memory writes?", "icon": "BOOK"},
  { "text": "Find the Minimum length Unsorted Subarray, sorting which makes the complete array sorted", "icon": "BOOK"},
  { "text": "QuickSort on Singly Linked List", "icon": "BOOK"},
  { "text": "K’th Smallest/Largest Element in Unsorted Array in Expected Linear Time", "icon": "BOOK"},
  { "text": "Kruskal’s Minimum Spanning Tree Algorithm", "icon": "BOOK"},
  { "text": "Dijkstra’s Shortest Path Algorithm", "icon": "BOOK"},
  { "text": "Dijkstra’s Algorithm for Adjacency List Representation", "icon": "BOOK"},
  { "text": "Job Sequencing Problem", "icon": "BOOK"},
  { "text": "Quiz on Greedy Algorithms", "icon": "BOOK"},
  { "text": "Greedy Algorithm to find Minimum number of Coins", "icon": "BOOK"},
  { "text": "Overlapping Subproblems Property", "icon": "BOOK"},
  { "text": "Optimal Substructure Property", "icon": "BOOK"},
  { "text": "Longest Increasing Subsequence", "icon": "BOOK"},
  { "text": "longest Common Subsequence", "icon": "BOOK"},
  { "text": "Min Cost Path", "icon": "BOOK"},
  { "text": "Matrix Chain Multiplication", "icon": "BOOK"},
  { "text": "0-1 Knapsack Problem", "icon": "BOOK"},
  { "text": "Longest Palindromic Subsequence", "icon": "BOOK"},
  { "text": "Dynamic Programming:", "icon": "BOOK"},
  { "text": "Maximum Sum Increasing Subsequence", "icon": "BOOK"},
  { "text": "Partition problem", "icon": "BOOK"},
  { "text": "Suffix Array", "icon": "BOOK"},
  { "text": "N Queen Problem", "icon": "BOOK"},
  { "text": "Divide and Conquer", "icon": "BOOK"},
  { "text": "What is Programming? Beginners Guide - Hackr.io", "icon": "BOOK"},
  { "text": "Programming & Web Development Online Courses | Udacity", "icon": "BOOK"},
  { "text": "Programming tutorials, coding problems, and practice ", "icon": "BOOK"},
  { "text": "Programming Languages Online Courses: From Java to Ruby ...", "icon": "BOOK"},
  { "text": "Learn C (Introduction and Tutorials to C Programming)", "icon": "BOOK"},
  { "text": "Prim’s Minimum Spanning Tree Algorithm", "icon": "BOOK"},

  { "text": "Maximum number of edges to be added to a tree so that it stays a Bipartite graph", "icon": "BOOK"},
  { "text": "DFS for a n-ary tree (acyclic graph) represented as adjacency list", "icon": "BOOK"},
  { "text": "BFS using STL for competitive coding", "icon": "BOOK"},
  { "text": "Height of a generic tree from parent array", "icon": "BOOK"},
  { "text": "Path in a Rectangle with Circles", "icon": "BOOK"},
  { "text": "Transpose graph", "icon": "BOOK"},
  { "text": "Construct binary palindrome by repeated appending and trimming", "icon": "BOOK"},
  { "text": "Level of Each node in a Tree from source node", "icon": "BOOK"},
  { "text": "BFS using vectors & queue as per the algorithm of CLRS", "icon": "BOOK"},
  { "text": "Count number of trees in a forest", "icon": "BOOK"},
  { "text": " Water Jug problem using BFS", "icon": "BOOK"},
  { "text": "Shortest path to reach one prime to other by changing single digit at a time", "icon": "BOOK"},

  { "text": "Minimum initial vertices to traverse whole matrix with given conditions", "icon": "BOOK"},
  { "text": "Count all possible paths between two vertices", "icon": "BOOK"},
  { "text": "Count the number of nodes at given level in a tree using BFS", "icon": "BOOK"},
  { "text": "Iterative Depth First Search", "icon": "BOOK"},
  { "text": "Find K cores of an undirected Graph", "icon": "BOOK"},

  { "text": "Transitive Closure of a Graph using DFS", "icon": "BOOK"},
  { "text": "Find Mother Vertex in a Graph", "icon": "BOOK"},
  { "text": "Graph representations using set and hash", "icon": "BOOK"},
  { "text": " Applications of Breadth First Traversal", "icon": "BOOK"},
  { "text": "Applications of Depth First Search", "icon": "BOOK"},
  { "text": "Depth First Traversal for a Graph", "icon": "BOOK"},
  { "text": "Breadth First Traversal for a Graph", "icon": "BOOK"},
  { "text": " Graph and its representations", "icon": "BOOK"},
  { "text": "A Peterson Graph Problem", "icon": "BOOK"},
  { "text": "Implementation of Graph in JavaScript", "icon": "BOOK"},
  { "text": "Print all paths from a given source to a destination using BFS", "icon": "BOOK"},
  { "text": "Minimum number of edges between two vertices of a Graph", "icon": "BOOK"},
  { "text": "Count nodes within K-distance from all nodes in a set", "icon": "BOOK"},

  { "text": "Find the smallest binary digit multiple of given number", "icon": "BOOK"},
  { "text": "Minimum steps to reach end of array under constraints", "icon": "BOOK"},
  { "text": "Minimum number of operation required to convert number x into y", "icon": "BOOK"},
  { "text": "Minimum steps to reach target by a Knight | Set 1", "icon": "BOOK"},
  { "text": "Find the minimum number of moves needed to move from one cell of matrix to another", "icon": "BOOK"},
  { "text": "Delete Edge to minimize subtree sum difference", "icon": "BOOK"},
  { "text": "Maximum product of two non-intersecting paths in a tree", "icon": "BOOK"},
  { "text": "Number of pair of positions in matrix which are not accessible", "icon": "BOOK"},
  { "text": "Best First Search (Informed Search)", "icon": "BOOK"},
  { "text": "Move weighting scale alternate under given constraints", "icon": "BOOK"},
  { "text": "BFS for Disconnected Graph", "icon": "BOOK"},
  { "text": "Minimum edge reversals to make a root", "icon": "BOOK"},
  { "text": "Bidirectional Search", "icon": "BOOK"},
  { "text": "Roots of a tree which give minimum height", "icon": "BOOK"},
  { "text": "Stepping Numbers", "icon": "BOOK"},
  { "text": "Clone an Undirected Graph", "icon": "BOOK"},
  { "text": "Sum of the minimum elements in all connected components of an undirected graph", "icon": "BOOK"},
  { "text": "Check if two nodes are on same path in a tree", "icon": "BOOK"},
  { "text": "A matrix probability question", "icon": "BOOK"},
  { "text": "Find length of the largest region in Boolean Matrix", "icon": "BOOK"},
  { "text": "Iterative Deepening Search(IDS) or Iterative Deepening Depth First Search(IDDFS)", "icon": "BOOK"},
  { "text": "Detect Cycle in a Directed Graph", "icon": "BOOK"},
  { "text": "Detect cycle in an undirected graph", "icon": "BOOK"},
  { "text": "Detect cycle in a direct graph using colors", "icon": "BOOK"},
  { "text": "Assign directions to edges so that the directed graph remains acyclic", "icon": "BOOK"},
  { "text": "Detect a negative cycle in a Graph | (Bellman Ford)", "icon": "BOOK"},
  { "text": "Cycles of length n in an undirected and connected graph", "icon": "BOOK"},
  { "text": "Detecting negative cycle using Floyd Warshall", "icon": "BOOK"},
  { "text": "Check if there is a cycle with odd weight sum in an undirected graph", "icon": "BOOK"},
  { "text": "Check if a graphs has a cycle of odd length", "icon": "BOOK"},
  { "text": "Clone a Directed Acyclic Graph", "icon": "BOOK"},
  { "text": "Check loop in array according to given constraints", "icon": "BOOK"},
  { "text": "Disjoint Set (Or Union-Find) | Set 1", "icon": "BOOK"},
  { "text": "Union-Find Algorithm | Set 2", "icon": "BOOK"},
  { "text": "Union-Find Algorithm | (Union By Rank and Find by Optimized Path Compression)", "icon": "BOOK"},
  { "text": "Magical Indices in an array", "icon": "BOOK"},   
  { "text": "Topological Sorting", "icon": "BOOK"},
{ "text": "All topological sorts of a Directed Acyclic Graph", "icon": "BOOK"},
{ "text": "Kahn's Algorithm for Topological Sorting", "icon": "BOOK"},
{ "text": "Maximum edges that can be added to DAG so that is remains DAG", "icon": "BOOK"},
{ "text": "Longest path between any pair of vertices", "icon": "BOOK"},
{ "text": "Longest Path in a Directed Acyclic Graph", "icon": "BOOK"},
{ "text": "Longest Path in a Directed Acyclic Graph | Set 2", "icon": "BOOK"},
{ "text": "Topological Sort of a graph using departure time of vertex", "icon": "BOOK"},
{ "text": "Given a sorted dictionary of an alien language, find order of characters", "icon": "BOOK"},
{ "text": "PriN's Minimum Spanning Tree (MST))", "icon": "BOOK"},
{ "text": "Applications of Minimum Spanning Tree Problem", "icon": "BOOK"},
{ "text": "Prim's MST for Adjacency List Representation", "icon": "BOOK"},
{ "text": "Kruskal's Minimum Spanning Tree Algorithm", "icon": "BOOK"},
{ "text": "Boruvka's algorithm for Minimum Spanning Tree", "icon": "BOOK"},
{ "text": "Minimum cost to connect all cities", "icon": "BOOK"},
{ "text": "Steiner Tree", "icon": "BOOK"},
{ "text": "Reverse Delete Algorithm for Minimum Spanning Tree", "icon": "BOOK"},
{ "text": "Total number of Spanning Trees in a Graph", "icon": "BOOK"},
{ "text": "Minimum Product Spanning Tree", "icon": "BOOK"},
{ "text": "Find if there is a path of more than k length from a source", "icon": "BOOK"},
{ "text": "Tug of War", "icon": "BOOK"},
{ "text": "The Knight-Tour Problem", "icon": "BOOK"},
{ "text": "Rat in a Maze", "icon": "BOOK"},
{ "text": "n-Queen's Problem", "icon": "BOOK"},
{ "text": "m Coloring Problem", "icon": "BOOK"},
{ "text": "Hamiltonian Cycle", "icon": "BOOK"},
{ "text": "Permutation of numbers such that sum of two consecutive numbers is a perfect square", "icon": "BOOK"},
{ "text": "Shortest Paths :", "icon": "BOOK"},
{ "text": "Dijkstra's shortest path algorithm", "icon": "BOOK"},
{ "text": "Dijkstra's Algorithm for Adjacency List Representation", "icon": "BOOK"},
{ "text": "Bellman-Ford Algorithm", "icon": "BOOK"},
{ "text": "Floyd Warshall Algorithm", "icon": "BOOK"},
{ "text": "Johnson's algorithm for All-pairs shortest paths", "icon": "BOOK"},
{ "text": "Shortest Path in Directed Acyclic Graph", "icon": "BOOK"},
{ "text": "Shortest path with exactly k edges in a directed and weighted graph", "icon": "BOOK"},
{ "text": "Dial's Algorithm", "icon": "BOOK"},
{ "text": "Printing paths in Dijsktra's Algorithm", "icon": "BOOK"},
{ "text": "Shortest path of a weighted graph where weight is 1 or 2", "icon": "BOOK"},
{ "text": "Multistage Graph (Shortest Path)", "icon": "BOOK"},
{ "text": "Shortest path in an unweighted graph", "icon": "BOOK"},
{ "text": "Minimize the number of weakly connected nodes", "icon": "BOOK"},
{ "text": "Betweenness Centrality (Centrality Measure)", "icon": "BOOK"},
{ "text": "Comparison of Dijkstra's and Floyd-Warshall algorithms", "icon": "BOOK"},
{ "text": "Karp's minimum mean (or average) weight cycle algorithm", "icon": "BOOK"},
{ "text": "0-1 BFS (Shortest Path in a Binary Weight Graph)", "icon": "BOOK"},
{ "text": "Find minimum weight cycle in an undirected graph", "icon": "BOOK"},
{ "text": "Minimum Cost Path with Left, Right, Bottom and Up moves allowed", "icon": "BOOK"},
{ "text": "Minimum edges to reverse to make path from a src to a dest", "icon": "BOOK"},
{ "text": "Find Shortest distance from a guard in a Bank", "icon": "BOOK"},
{ "text": "Connectivity :", "icon": "BOOK"},

{ "text": "Find if there is a path between two vertices in a directed graph", "icon": "BOOK"},
{ "text": "Connectivity in a directed graph", "icon": "BOOK"},
{ "text": "Articulation Points (or Cut Vertices) in a Graph", "icon": "BOOK"},
{ "text": "Biconnected Components", "icon": "BOOK"},
{ "text": "Biconnected graph", "icon": "BOOK"},
{ "text": "Bridges in a graph", "icon": "BOOK"},
{ "text": "Eulerian path and circuit", "icon": "BOOK"},
{ "text": "Fleury's Algorithm for printing Eulerian Path or Circuit", "icon": "BOOK"},
{ "text": "Strongly Connected Components", "icon": "BOOK"},
{ "text": "Transitive closure of a graph", "icon": "BOOK"},
{ "text": "Find the number of islands", "icon": "BOOK"},
{ "text": "Find the number of Islands | Set 2 (Using Disjoint Set)", "icon": "BOOK"},
{ "text": "Count all possible walks from a source to a destination with exactly k edges", "icon": "BOOK"},
{ "text": "Euler Circuit in a Directed Graph", "icon": "BOOK"},
{ "text": "Count the number of non-reachable nodes", "icon": "BOOK"},
{ "text": "Find the Degree of a Particular vertex in a Graph", "icon": "BOOK"},
{ "text": "Check if a given graph is tree or not", "icon": "BOOK"},
{ "text": "Minimum edges required to add to make Euler Circuit", "icon": "BOOK"},
{ "text": "Eulerian Path in undirected graph", "icon": "BOOK"},
{ "text": "Find if there is a path of more than k length", "icon": "BOOK"},
{ "text": "Length of shortest chain to reach the target word", "icon": "BOOK"},
{ "text": "Print all paths from a given source to destination", "icon": "BOOK"},
{ "text": "Find minimum cost to reach destination using train", "icon": "BOOK"},
{ "text": "Find if an array of strings can be chained to form a circle | Set 1", "icon": "BOOK"},
{ "text": "Find if an array of strings can be chained to form a circle | Set 2", "icon": "BOOK"},
{ "text": "Tarjan's Algorithm to find strongly connected Components", "icon": "BOOK"},
{ "text": "Number of loops of size k starting from a specific node", "icon": "BOOK"},
{ "text": "Paths to travel each nodes using each edge (Seven Bridges of Königsberg)", "icon": "BOOK"},
{ "text": "Number of cyclic elements in an array where we can jump according to value", "icon": "BOOK"},
{ "text": "Number of groups formed in a graph of friends", "icon": "BOOK"},
{ "text": "Minimum cost to connect weighted nodes represented as array", "icon": "BOOK"},
{ "text": "Count single node isolated sub-graphs in a disconnected graph", "icon": "BOOK"},
{ "text": "Calculate number of nodes between two vertices in an acyclic Graph by Disjoint Union method", "icon": "BOOK"},
{ "text": "Dynamic Connectivity | Set 1 (Incremental)", "icon": "BOOK"},
{ "text": "Check if a graph is strongly connected | Set 1 (Kosaraju using DFS)", "icon": "BOOK"},
{ "text": "Check if a given directed graph is strongly connected | Set 2 (Kosaraju using BFS)", "icon": "BOOK"},
{ "text": "Check if removing a given edge disconnects a graph", "icon": "BOOK"},
{ "text": "Find all reachable nodes from every node present in a given set", "icon": "BOOK"},
{ "text": "Connected Components in an undirected graph", "icon": "BOOK"},
{ "text": "k'th heaviest adjacent node in a graph where each vertex has weight", "icon": "BOOK"},
{ "text": "Maximum Flow :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Ford-Fulkerson Algorithm for Maximum Flow Problem", "icon": "BOOK"},
{ "text": "Find maximum number of edge disjoint paths between two vertices", "icon": "BOOK"},
{ "text": "Find minimum s-t cut in a flow network", "icon": "BOOK"},
{ "text": "Maximum Bipartite Matching", "icon": "BOOK"},
{ "text": "Channel Assignment Problem", "icon": "BOOK"},
{ "text": "Push Relabel- Set 1-Introduction", "icon": "BOOK"},
{ "text": "Push Relabel- Set 2- Implementation", "icon": "BOOK"},
{ "text": "KargeR's Algorithm- Set 1- Introduction and Implementation", "icon": "BOOK"},
{ "text": "Karger's Algorithm- Set 2 - Analysis and Applications", "icon": "BOOK"},
{ "text": "Dinic's algorithm for Maximum Flow", "icon": "BOOK"},
{ "text": "Max Flow Problem Introduction", "icon": "BOOK"},
{ "text": "STL Implementation of Algorithms :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Kruskal's Minimum Spanning Tree using STL in C++", "icon": "BOOK"},
{ "text": "Prim's Algorithm using Priority Queue STL", "icon": "BOOK"},
{ "text": "Dijkstra's Shortest Path Algorithm using STL", "icon": "BOOK"},
{ "text": "Dijkstra's Shortest Path Algorithm using set in STL", "icon": "BOOK"},
{ "text": "Graph implementation using STL for competitive programming | Set 2 (Weighted graph)", "icon": "BOOK"},
{ "text": "Hard Problems :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Graph Coloring (Introduction and Applications)", "icon": "BOOK"},
{ "text": "Greedy Algorithm for Graph Coloring", "icon": "BOOK"},
{ "text": "Traveling Salesman Problem (TSP) Implementation", "icon": "BOOK"},
{ "text": "Travelling Salesman Problem (Naive and Dynamic Programming)", "icon": "BOOK"},
{ "text": "Travelling Salesman Problem (Approximate using MST)", "icon": "BOOK"},
{ "text": "Vertex Cover Problem | Set 1 (Introduction and Approximate Algorithm)", "icon": "BOOK"},
{ "text": "K Centers Problem | Set 1 (Greedy Approximate Algorithm)", "icon": "BOOK"},
{ "text": "Erdos Renyl Model (for generating Random Graphs)", "icon": "BOOK"},
{ "text": "Clustering Coefficient in Graph Theory", "icon": "BOOK"},
{ "text": "Chinese Postman or Route Inspection | Set 1 (introduction)", "icon": "BOOK"},

{ "text": "Number of triangles in an undirected Graph", "icon": "BOOK"},
{ "text": "Number of triangles in directed and undirected Graph", "icon": "BOOK"},
{ "text": "Check whether a given graph is Bipartite or not", "icon": "BOOK"},
{ "text": "Snake and Ladder Problem", "icon": "BOOK"},
{ "text": "Minimize Cash Flow among a given set of friends who have borrowed money from each other", "icon": "BOOK"},
{ "text": "Boggle (Find all possible words in a board of characters)", "icon": "BOOK"},
{ "text": "Hopcroft Karp Algorithm for Maximum Matching-Introduction", "icon": "BOOK"},
{ "text": "Hopcroft Karp Algorithm for Maximum Matching-Implementation", "icon": "BOOK"},
{ "text": "Minimum Time to rot all oranges", "icon": "BOOK"},
{ "text": "Find same contents in a list of contacts", "icon": "BOOK"},
{ "text": "Hypercube Graph", "icon": "BOOK"},
{ "text": "Check for star graph", "icon": "BOOK"},
{ "text": "Optimal read list for a given number of days", "icon": "BOOK"},
{ "text": "Print all jumping numbers smaller than or equal to a given value", "icon": "BOOK"},
{ "text": "Fibonacci Cube Graph", "icon": "BOOK"},
{ "text": "Barabasi Albert Graph (for Scale Free Models)", "icon": "BOOK"},
{ "text": "Construct a graph from given degrees of all vertices", "icon": "BOOK"},
{ "text": "Degree Centrality (Centrality Measure)", "icon": "BOOK"},
{ "text": "Katz Centrality (Centrality Measure)", "icon": "BOOK"},
{ "text": "Mathematics | Graph theory practice questions", "icon": "BOOK"},
{ "text": "2-Satisfiability (2-SAT) Problem", "icon": "BOOK"},
{ "text": "Determine whether a universal sink exists in a directed graph", "icon": "BOOK"},
{ "text": "Number of sink nodes in a graph", "icon": "BOOK"},
{ "text": "Largest subset of Graph vertices with edges of 2 or more colors", "icon": "BOOK"},
{ "text": "NetworkX : Python software package for study of complex networks", "icon": "BOOK"},
{ "text": "Generate a graph using Dictionary in Python", "icon": "BOOK"},
{ "text": "Count number of edges in an undirected graph", "icon": "BOOK"},
{ "text": "Two Clique Problem (Check if Graph can be divided in two Cliques)", "icon": "BOOK"},
{ "text": "Check whether given degrees of vertices represent a Graph or Tree", "icon": "BOOK"},
{ "text": "Finding minimum vertex cover size of a graph using binary search", "icon": "BOOK"},
{ "text": "Stable Marriage Problem", "icon": "BOOK"},
{ "text": "Sum of dependencies in a graph", "icon": "BOOK"},

{ "text": "Top 10 Interview Questions on Depth First Search (DFS)", "icon": "BOOK"},
{ "text": "Some interesting shortest path questions", "icon": "BOOK"},
{ "text": "Quizzes on Graph Traversal", "icon": "BOOK"},
{ "text": "Quizzes on Graph Shortest Path", "icon": "BOOK"},
{ "text": "Quizzes on Graph Minimum Spanning Tree", "icon": "BOOK"},
{ "text": "Quizzes on Graphs", "icon": "BOOK"},
{ "text": "Practice Problems on Graphs", "icon": "BOOK"},
{ "text": "Videos on Graphs", "icon": "BOOK"},
{ "text": "Array Introduction :", "icon": "BOOK"},

{ "text": "Introduction to Arrays", "icon": "BOOK"},
{ "text": "Arrays in C/C++", "icon": "BOOK"},
{ "text": "Arrays in Java", "icon": "BOOK"},
{ "text": "Arrays in Python", "icon": "BOOK"},
{ "text": "Arrays in C#", "icon": "BOOK"},
{ "text": "Array Rotations :", "icon": "BOOK"},

{ "text": "Program for array rotation", "icon": "BOOK"},
{ "text": "Reversal algorithm for array rotation", "icon": "BOOK"},
{ "text": "Block swap algorithm for array rotation", "icon": "BOOK"},
{ "text": "Program to cyclically rotate an array by one", "icon": "BOOK"},
{ "text": "Search an element in a sorted and rotated array", "icon": "BOOK"},
{ "text": "Given a sorted and rotated array, find if there is a pair with a given sum", "icon": "BOOK"},
{ "text": "Find maximum value of Sum( i*arr[i]) with only rotations on given array allowed", "icon": "BOOK"},
{ "text": "Maximum sum of i*arr[i] among all rotations of a given array", "icon": "BOOK"},
{ "text": "Find the Rotation Count in Rotated Sorted array", "icon": "BOOK"},
{ "text": "Quickly find multiple left rotations of an array", "icon": "BOOK"},
{ "text": "Find the minimum element in a sorted and rotated array", "icon": "BOOK"},
{ "text": "Reversal algorithm for right rotation of an array", "icon": "BOOK"},
{ "text": "Find a rotation with maximum hamming distance", "icon": "BOOK"},
{ "text": "Queries on Left and Right Circular shift on array", "icon": "BOOK"},
{ "text": "Print left rotation of array in O(n) time and O(1) space", "icon": "BOOK"},
{ "text": "Find element at given index after a number of rotations", "icon": "BOOK"},
{ "text": "Split the array and add the first part to the end", "icon": "BOOK"},
{ "text": "More >>", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Arrangement Rearrangement :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Rearrange an array such that arr[i] = i", "icon": "BOOK"},
{ "text": "Write a program to reverse an array or string", "icon": "BOOK"},
{ "text": "Rearrange array such that arr[i] >= arr[j] if i is even and arr[i]<=arr[j] if i is odd and j < i", "icon": "BOOK"},
{ "text": "Rearrange positive and negative numbers in O(n) time and O(1) extra space", "icon": "BOOK"},
{ "text": "Rearrange array in alternating positive & negative items with O(1) extra space | Set 1", "icon": "BOOK"},
{ "text": "Move all zeroes to end of array", "icon": "BOOK"},
{ "text": "Move all zeroes to end of array | Set-2 (Using single traversal)", "icon": "BOOK"},
{ "text": "Minimum swaps required to bring all elements less than or equal to k together", "icon": "BOOK"},
{ "text": "Rearrange positive and negative numbers using inbuilt sort function", "icon": "BOOK"},
{ "text": "Rearrange array such that even positioned are greater than odd", "icon": "BOOK"},
{ "text": "Rearrange an array in order - smallest, largest, 2nd smallest, 2nd largest, ..", "icon": "BOOK"},
{ "text": "Double the first element and move zero to end", "icon": "BOOK"},
{ "text": "Reorder an array according to given indexes", "icon": "BOOK"},
{ "text": "Rearrange positive and negative numbers with constant extra space", "icon": "BOOK"},
{ "text": "Arrange given numbers to form the biggest number", "icon": "BOOK"},
{ "text": "Rearrange an array in maximum minimum form | Set 1", "icon": "BOOK"},
{ "text": "Rearrange an array in maximum minimum form | Set 2 (O(1) extra space)", "icon": "BOOK"},
{ "text": "Move all negative numbers to beginning and positive to end with constant extra space", "icon": "BOOK"},
{ "text": "Move all negative elements to end in order with extra space allowed", "icon": "BOOK"},
{ "text": "Rearrange array such that even index elements are smaller and odd index elements are greater", "icon": "BOOK"},
{ "text": "Positive elements at even and negative at odd positions", "icon": "BOOK"},
{ "text": "Replace every array element by multiplication of previous and next", "icon": "BOOK"},
{ "text": "Shuffle a given array", "icon": "BOOK"},
{ "text": "Segregate even and odd numbers", "icon": "BOOK"},


{ "text": "k largest(or smallest) elements in an array | added Min Heap method", "icon": "BOOK"},
{ "text": "Kth smallest element in a row-wise and column-wise sorted 2D array | Set 1", "icon": "BOOK"},
{ "text": "Program to find largest element in an array", "icon": "BOOK"},
{ "text": "Find the largest three elements in an array", "icon": "BOOK"},
{ "text": "Find all elements in array which have at-least two greater elements", "icon": "BOOK"},
{ "text": "Program for Mean and median of an unsorted array", "icon": "BOOK"},
{ "text": "Median of Stream of Running Integers using STL", "icon": "BOOK"},
{ "text": "Minimum product of k integers in an array of positive Integers", "icon": "BOOK"},
{ "text": "K-th Largest Sum Contiguous Subarray", "icon": "BOOK"},
{ "text": "K maximum sum combinations from two arrays", "icon": "BOOK"},
{ "text": "K maximum sums of overlapping contiguous sub-arrays", "icon": "BOOK"},
{ "text": "K maximum sums of non-overlapping contiguous sub-arrays", "icon": "BOOK"},
{ "text": "k smallest elements in same order using O(1) extra space", "icon": "BOOK"},
{ "text": "Find k pairs with smallest sums in two arrays", "icon": "BOOK"},
{ "text": "k-th smallest absolute difference of two elements in an array", "icon": "BOOK"},
{ "text": "Find Second largest element in an array", "icon": "BOOK"},
{ "text": "Find k numbers with most occurrences in the given array", "icon": "BOOK"},
{ "text": "Find the smallest and second smallest elements in an array", "icon": "BOOK"},
{ "text": "Find the smallest missing number", "icon": "BOOK"},
{ "text": "Maximum sum such that no two elements are adjacent", "icon": "BOOK"},
{ "text": "Maximum and minimum of an array using minimum number of comparisons", "icon": "BOOK"},

{ "text": "Sqrt (or Square Root) Decomposition Technique | Set 1 (Introduction)", "icon": "BOOK"},
{ "text": "Sparse Table", "icon": "BOOK"},
{ "text": "Range sum query using Sparse Table", "icon": "BOOK"},
{ "text": "Range Minimum Query (Square Root Decomposition and Sparse Table)", "icon": "BOOK"},
{ "text": "Range Queries for Frequencies of array elements", "icon": "BOOK"},
{ "text": "Constant time range add operation on an array", "icon": "BOOK"},
{ "text": "Range LCM Queries", "icon": "BOOK"},
{ "text": "GCDs of given index ranges in an array", "icon": "BOOK"},
{ "text": "Queries for GCD of all numbers of an array except elements in a given range", "icon": "BOOK"},
{ "text": "Number of elements less than or equal to a given number in a given subarray", "icon": "BOOK"},
{ "text": "Number of elements less than or equal to a given number in a given subarray | Set 2 (Including Updates)", "icon": "BOOK"},
{ "text": "Queries for counts of array elements with values in given range", "icon": "BOOK"},
{ "text": "Queries for decimal values of subarrays of a binary array", "icon": "BOOK"},
{ "text": "Count elements which divide all numbers in range L-R", "icon": "BOOK"},
{ "text": "Number whose sum of XOR with given array range is maximum", "icon": "BOOK"},
{ "text": "XOR of numbers that appeared even number of times in given Range", "icon": "BOOK"},
{ "text": "Array range queries over range queries", "icon": "BOOK"},
{ "text": "Array range queries for searching an element", "icon": "BOOK"},
{ "text": "Array range queries for elements with frequency same as value", "icon": "BOOK"},
{ "text": "Maximum Occurrence in a Given Range", "icon": "BOOK"},
{ "text": "Number of indexes with equal elements in given range", "icon": "BOOK"},
{ "text": "Merge Sort Tree for Range Order Statistics", "icon": "BOOK"},
{ "text": "Total numbers with no repeated digits in a range", "icon": "BOOK"},
{ "text": "Difference Array | Range update query in O(1)", "icon": "BOOK"},

{ "text": "Largest Sum Contiguous Subarray", "icon": "BOOK"},
{ "text": "Maximum profit by buying and selling a share at most twice", "icon": "BOOK"},
{ "text": "Find the subarray with least average", "icon": "BOOK"},
{ "text": "Find the minimum distance between two numbers", "icon": "BOOK"},
{ "text": "Minimize the maximum difference between the heights", "icon": "BOOK"},
{ "text": "Minimum number of jumps to reach end", "icon": "BOOK"},
{ "text": "Dynamic Programming | Set 14 (Maximum Sum Increasing Subsequence)", "icon": "BOOK"},
{ "text": "Smallest subarray with sum greater than a given value", "icon": "BOOK"},
{ "text": "Find maximum average subarray of k length", "icon": "BOOK"},
{ "text": "Count minimum steps to get the given desired array", "icon": "BOOK"},
{ "text": "Number of subsets with product less than k", "icon": "BOOK"},
{ "text": "Find minimum number of merge operations to make an array palindrome", "icon": "BOOK"},
{ "text": "Find the smallest positive integer value that cannot be represented as sum of any subset of a given array", "icon": "BOOK"},
{ "text": "Size of The Subarray With Maximum Sum", "icon": "BOOK"},
{ "text": "Find minimum difference between any two elements", "icon": "BOOK"},
{ "text": "Space optimization using bit manipulations", "icon": "BOOK"},
{ "text": "Longest Span with same Sum in two Binary arrays", "icon": "BOOK"},

{ "text": "Alternative Sorting", "icon": "BOOK"},
{ "text": "Sort a nearly sorted (or K sorted) array", "icon": "BOOK"},
{ "text": "Sort an array according to absolute difference with given value", "icon": "BOOK"},
{ "text": "Sort an array in wave form", "icon": "BOOK"},
{ "text": "Merge an array of size n into another array of size m+n", "icon": "BOOK"},
{ "text": "Sort an array which contain 1 to n values", "icon": "BOOK"},
{ "text": "Sort 1 to N by swapping adjacent elements", "icon": "BOOK"},
{ "text": "Sort an array containing two types of elements", "icon": "BOOK"},
{ "text": "Sort elements by frequency | Set 1", "icon": "BOOK"},
{ "text": "Count Inversions in an array | Set 1 (Using Merge Sort)", "icon": "BOOK"},
{ "text": "Two elements whose sum is closest to zero", "icon": "BOOK"},
{ "text": "Shortest Un-ordered Subarray", "icon": "BOOK"},
{ "text": "Minimum number of swaps required to sort an array", "icon": "BOOK"},
{ "text": "Union and Intersection of two sorted arrays", "icon": "BOOK"},
{ "text": "Find Union and Intersection of two unsorted arrays", "icon": "BOOK"},
{ "text": "Sort an array of 0s, 1s and 2s", "icon": "BOOK"},
{ "text": "Find the Minimum length Unsorted Subarray, sorting which makes the complete array sorted", "icon": "BOOK"},
{ "text": "Median in a stream of integers (running integers)", "icon": "BOOK"},
{ "text": "Count the number of possible triangles", "icon": "BOOK"},
{ "text": "Find number of pairs (x, y) in an array such that x^y > y^x", "icon": "BOOK"},
{ "text": "Count all distinct pairs with difference equal to k", "icon": "BOOK"},
{ "text": "Print All Distinct Elements of a given integer array", "icon": "BOOK"},
{ "text": "Construct an array from its pair-sum array", "icon": "BOOK"},
{ "text": "Merge two sorted arrays with O(1) extra space", "icon": "BOOK"},
{ "text": "Product of maximum in first array and minimum in second", "icon": "BOOK"},
{ "text": "Search, insert and delete in an unsorted array", "icon": "BOOK"},
{ "text": "Search, insert and delete in a sorted array", "icon": "BOOK"},
{ "text": "Given an array A[] and a number x, check for pair in A[] with sum as x", "icon": "BOOK"},
{ "text": "Searching in an array where adjacent differ by at most k", "icon": "BOOK"},
{ "text": "Find common elements in three sorted arrays", "icon": "BOOK"},
{ "text": "Find position of an element in a sorted array of infinite numbers", "icon": "BOOK"},
{ "text": "Find the only repetitive element between 1 to n-1", "icon": "BOOK"},
{ "text": "Find the element that appears once", "icon": "BOOK"},
{ "text": "Maximum Subarray Sum Excluding Certain Elements", "icon": "BOOK"},
{ "text": "Maximum equlibrium sum in an array", "icon": "BOOK"},
{ "text": "Equilibrium index of an array", "icon": "BOOK"},
{ "text": "Leaders in an array", "icon": "BOOK"},
{ "text": "Ceiling in a sorted array", "icon": "BOOK"},
{ "text": "Majority Element", "icon": "BOOK"},
{ "text": "Check for Majority Element in a sorted array", "icon": "BOOK"},
{ "text": "Check if an array has a majority element", "icon": "BOOK"},
{ "text": "Two Pointers Technique", "icon": "BOOK"},
{ "text": "Find a peak element", "icon": "BOOK"},
{ "text": "Find the two repeating elements in a given array", "icon": "BOOK"},
{ "text": "Find a Fixed Point in a given array", "icon": "BOOK"},
{ "text": "Find sub-array with given sum", "icon": "BOOK"},
{ "text": "Maximum triplet sum in array", "icon": "BOOK"},
{ "text": "Smallest Difference Triplet from Three arrays", "icon": "BOOK"},
{ "text": "Find a triplet that sum to a given value", "icon": "BOOK"},
{ "text": "Find all triplets with zero sum", "icon": "BOOK"},
{ "text": "Rotate Matrix Elements", "icon": "BOOK"},
{ "text": "Inplace rotate square matrix by 90 degrees | Set 1", "icon": "BOOK"},
{ "text": "Rotate a matrix by 90 degree without using any extra space | Set 2", "icon": "BOOK"},
{ "text": "Rotate a Matrix by 180 degree", "icon": "BOOK"},
{ "text": "Turn an image by 90 degree", "icon": "BOOK"},
{ "text": "Rotate each ring of matrix anticlockwise by K elements", "icon": "BOOK"},
{ "text": "Check if all rows of a matrix are circular rotations of each other", "icon": "BOOK"},
{ "text": "Sort the given matrix", "icon": "BOOK"},
{ "text": "Find the row with maximum number of 1s", "icon": "BOOK"},
{ "text": "Find median in row wise sorted matrix", "icon": "BOOK"},
{ "text": "Matrix Multiplication | Recursive", "icon": "BOOK"},
{ "text": "Program to multiply two matrices", "icon": "BOOK"},
{ "text": "Program for scalar multiplication of a matrix", "icon": "BOOK"},
{ "text": "Program to print Lower triangular and Upper triangular matrix of an array", "icon": "BOOK"},
{ "text": "Find distinct elements common to all rows of a matrix", "icon": "BOOK"},
{ "text": "Print a given matrix in spiral form", "icon": "BOOK"},
{ "text": "Find maximum element of each row in a matrix", "icon": "BOOK"},
{ "text": "Find unique elements in a matrix", "icon": "BOOK"},
{ "text": "Shift matrix elements row-wise by k", "icon": "BOOK"},
{ "text": "Different Operations on Matrices", "icon": "BOOK"},
{ "text": "Print a given matrix in counter-clock wise spiral form", "icon": "BOOK"},
{ "text": "Swap major and minor diagonals of a square matrix", "icon": "BOOK"},
{ "text": "Maximum path sum in matrix", "icon": "BOOK"},
{ "text": "Squares of Matrix Diagonal Elements", "icon": "BOOK"},
{ "text": "Move matrix elements in given direction and add elements with same value", "icon": "BOOK"},
{ "text": "Subarray/Substring vs Subsequence and Programs to Generate them", "icon": "BOOK"},
{ "text": "A Product Array Puzzle", "icon": "BOOK"},
{ "text": "Number of subarrays with given product", "icon": "BOOK"},
{ "text": "Linked List vs Array", "icon": "BOOK"},
{ "text": "Check if array elements are consecutive | Added Method 3", "icon": "BOOK"},
{ "text": "Find whether an array is subset of another array | Added Method 3", "icon": "BOOK"},
{ "text": "Implement two stacks in an array", "icon": "BOOK"},
{ "text": "Find relative complement of two sorted arrays", "icon": "BOOK"},
{ "text": "Minimum increment by k operations to make all elements equal", "icon": "BOOK"},
{ "text": "Minimize (max(A[i], B[j], C[k]) - min(A[i], B[j], C[k])) of three different sorted arrays", "icon": "BOOK"},

{ "text": "Introduction to Linked List", "icon": "BOOK"},
{ "text": "Linked List vs Array", "icon": "BOOK"},
{ "text": "Linked List Insertion", "icon": "BOOK"},
{ "text": "Linked List Deletion (Deleting a given key)", "icon": "BOOK"},
{ "text": "Linked List Deletion (Deleting a key at given position)", "icon": "BOOK"},
{ "text": "Write a function to delete a Linked List", "icon": "BOOK"},
{ "text": "Find Length of a Linked List (Iterative and Recursive)", "icon": "BOOK"},
{ "text": "Search an element in a Linked List (Iterative and Recursive)", "icon": "BOOK"},
{ "text": "Write a function to get Nth node in a Linked List", "icon": "BOOK"},
{ "text": "Nth node from the end of a Linked List", "icon": "BOOK"},
{ "text": "Print the middle of a given linked list", "icon": "BOOK"},
{ "text": "Write a function that counts the number of times a given int occurs in a Linked List", "icon": "BOOK"},
{ "text": "Detect loop in a linked list", "icon": "BOOK"},
{ "text": "Find length of loop in linked list", "icon": "BOOK"},
{ "text": "Function to check if a singly linked list is palindrome", "icon": "BOOK"},
{ "text": "Remove duplicates from a sorted linked list", "icon": "BOOK"},
{ "text": "Remove duplicates from an unsorted linked list", "icon": "BOOK"},
{ "text": "Swap nodes in a linked list without swapping data", "icon": "BOOK"},
{ "text": "Pairwise swap elements of a given linked list", "icon": "BOOK"},
{ "text": "Move last element to front of a given Linked List", "icon": "BOOK"},
{ "text": "Intersection of two Sorted Linked Lists", "icon": "BOOK"},
{ "text": "Intersection point of two Linked Lists.", "icon": "BOOK"},
{ "text": "QuickSort on Singly Linked List", "icon": "BOOK"},
{ "text": "Segregate even and odd nodes in a Linked List", "icon": "BOOK"},
{ "text": "Reverse a linked list", "icon": "BOOK"},

{ "text": "Circular Linked List :", "icon": "BOOK"},
{ "text": "Circular Linked List Introduction and Applications,", "icon": "BOOK"},
{ "text": "Circular Linked List Traversal", "icon": "BOOK"},
{ "text": "Split a Circular Linked List into two halves", "icon": "BOOK"},
{ "text": "Sorted insert for circular linked list", "icon": "BOOK"},
{ "text": "Check if a linked list is Circular Linked List", "icon": "BOOK"},
{ "text": "Convert a Binary Tree to a Circular Doubly Link List", "icon": "BOOK"},
{ "text": "Circular Singly Linked List | Insertion", "icon": "BOOK"},
{ "text": "Deletion from a Circular Linked List", "icon": "BOOK"},
{ "text": "Circular Queue | Set 2 (Circular Linked List Implementation)", "icon": "BOOK"},
{ "text": "Count nodes in Circular linked list", "icon": "BOOK"},
{ "text": "Josephus Circle using circular linked list", "icon": "BOOK"},
{ "text": "Convert singly linked list into circular linked list", "icon": "BOOK"},
{ "text": "Circular Linked List | Set 1 (Introduction and Applications)", "icon": "BOOK"},
{ "text": "Circular Linked List | Set 2 (Traversal)", "icon": "BOOK"},
{ "text": "Implementation of Deque using circular array", "icon": "BOOK"},
{ "text": "Exchange first and last nodes in Circular Linked List", "icon": "BOOK"},
{ "text": "More >>", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Doubly Linked List :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Doubly Linked List Introduction and Insertion", "icon": "BOOK"},
{ "text": "Delete a node in a Doubly Linked List", "icon": "BOOK"},
{ "text": "Reverse a Doubly Linked List", "icon": "BOOK"},
{ "text": "The Great Tree-List Recursion Problem.", "icon": "BOOK"},
{ "text": "Copy a linked list with next and arbit pointer", "icon": "BOOK"},
{ "text": "QuickSort on Doubly Linked List", "icon": "BOOK"},
{ "text": "Swap Kth node from beginning with Kth node from end in a Linked List", "icon": "BOOK"},
{ "text": "Merge Sort for Doubly Linked List", "icon": "BOOK"},
{ "text": "Create a Doubly Linked List from a Ternary Tree", "icon": "BOOK"},
{ "text": "Find pairs with given sum in doubly linked list", "icon": "BOOK"},
{ "text": "Insert value in sorted way in a sorted doubly linked list", "icon": "BOOK"},
{ "text": "Delete a Doubly Linked List node at a given position", "icon": "BOOK"},
{ "text": "Count triplets in a sorted doubly linked list whose sum is equal to a given value x", "icon": "BOOK"},
{ "text": "Remove duplicates from a sorted doubly linked list", "icon": "BOOK"},
{ "text": "Delete all occurrences of a given key in a doubly linked list", "icon": "BOOK"},
{ "text": "Remove duplicates from an unsorted doubly linked list", "icon": "BOOK"},
{ "text": "Sort the biotonic doubly linked list", "icon": "BOOK"},
{ "text": "Sort a k sorted doubly linked list", "icon": "BOOK"},
{ "text": "Convert a given Binary Tree to Doubly Linked List | Set", "icon": "BOOK"},
{ "text": "Program to find size of Doubly Linked List", "icon": "BOOK"},
{ "text": "Sorted insert in a doubly linked list with head and tail pointers", "icon": "BOOK"},
{ "text": "Large number arithmetic using doubly linked list", "icon": "BOOK"},
{ "text": "Rotate Doubly linked list by N nodes", "icon": "BOOK"},
{ "text": "Priority Queue using doubly linked list", "icon": "BOOK"},
{ "text": "Reverse a doubly linked list in groups of given size", "icon": "BOOK"},
{ "text": "Doubly Circular Linked List | Set 1 (Introduction and Insertion)", "icon": "BOOK"},
{ "text": "Doubly Circular Linked List | Set 2 (Deletion)", "icon": "BOOK"},
{ "text": "More >>", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Misc :", "icon": "BOOK"},
{ "text": "", "icon": "BOOK"},
{ "text": "Skip List | Set 1 (Introduction)", "icon": "BOOK"},
{ "text": "Skip List | Set 2 (Insertion)", "icon": "BOOK"},
{ "text": "Skip List | Set 3 (Searching and Deletion)", "icon": "BOOK"},
{ "text": "Reverse a stack without using extra space in O(n)", "icon": "BOOK"},
{ "text": "An interesting method to print reverse of a linked list", "icon": "BOOK"},
{ "text": "Linked List representation of Disjoint Set Data Structures", "icon": "BOOK"},
{ "text": "Sublist Search (Search a linked list in another list)", "icon": "BOOK"},
{ "text": "How to insert elements in C++ STL List ?", "icon": "BOOK"},
{ "text": "Unrolled Linked List | Set 1 (Introduction)", "icon": "BOOK"},
{ "text": "A Programmer's approach of looking at Array vs. Linked List", "icon": "BOOK"},
{ "text": "How to write C functions that modify head pointer of a Linked List?", "icon": "BOOK"},
{ "text": "Given a linked list which is sorted, how will you insert in sorted way", "icon": "BOOK"},
{ "text": "Can we reverse a linked list in less than O(n)?", "icon": "BOOK"},
{ "text": "Practice questions for Linked List and Recursion", "icon": "BOOK"},
{ "text": "Construct a Maximum Sum Linked List out of two Sorted Linked Lists having some Common nodes", "icon": "BOOK"},
{ "text": "Given only a pointer to a node to be deleted in a singly linked list, how do you delete it?", "icon": "BOOK"},
{ "text": "Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?", "icon": "BOOK"},
{ "text": "Squareroot(n)-th node in a Linked List", "icon": "BOOK"},
{ "text": "Find the fractional (or n/k - th) node in linked list", "icon": "BOOK"},
{ "text": "Find modular node in a linked list", "icon": "BOOK"},
{ "text": "Construct a linked list from 2D matrix", "icon": "BOOK"},
{ "text": "Find smallest and largest elements in singly linked list", "icon": "BOOK"},
{ "text": "Arrange consonants and vowels nodes in a linked list", "icon": "BOOK"},
{ "text": "Partitioning a linked list around a given value and If we don't care about making the elements of the list ", "icon": "BOOK"},
{ "text": "Modify contents of Linked List", "icon": "BOOK"},






  { "text": "the human genome project", "icon": "BOOK"},
  { "text": "High School Biology Topics", "icon": "BOOK"},
  { "text": "Central nervous systems and brain functions", "icon": "BOOK"},
  { "text": "Energy and chemistry of life", "icon": "BOOK"},
  { "text": "Plant systems and ecology", "icon": "BOOK"},
  { "text": "Evolution, ecology and diversity", "icon": "BOOK"},
  { "text": "Cell structure and specialization", "icon": "BOOK"},
  { "text": "Heredity and Genetics", "icon": "BOOK"},
  { "text": "Ecosystems and Interdependence", "icon": "BOOK"},
  { "text": "Alzheimers Disease", "icon": "BOOK"},
  { "text": "Introduction to metabolism", "icon": "BOOK"},
  { "text": "Enzymes", "icon": "BOOK"},
  { "text": "Photosynthesis and cellular respiration", "icon": "BOOK"},
  { "text": "Fertilization and development", "icon": "BOOK"},
  { "text": "Introduction to heredity:", "icon": "BOOK"},
  { "text": "Sex linkage", "icon": "BOOK"},
  { "text": "DNA structure and replication", "icon": "BOOK"},
  { "text": "RNA and protein synthesis", "icon": "BOOK"},
  { "text": "Biotechnology", "icon": "BOOK"},
  { "text": "Evolution and natural selection", "icon": "BOOK"},
  { "text": "Body structure and homeostasis", "icon": "BOOK"},
  { "text": "The circulatory and respiratory system", "icon": "BOOK"},
  { "text": "the digestive and excretory system", "icon": "BOOK"},
  { "text": "the nervous and endocrine system", "icon": "BOOK"},
  { "text": "the reproductive system", "icon": "BOOK"},
  { "text": "biochemical cycles", "icon": "BOOK"},
  { "text": "Regenerative medicine of the future", "icon": "BOOK"},
  { "text": "Prospects for the development of cell therapy.", "icon": "BOOK"},
  { "text": "the human genome project", "icon": "BOOK"},





  { "text": "William Shakespeare | Poetry Foundation", "icon": "BOOK"},
  { "text": "Plot and Setting – Students read and analyze short stories and nonfiction selections in terms of plot and setting", "icon": "BOOK"},
  { "text": "identify the inciting incident, conflict, rising action, climax, resolution, setting and the effect setting has on the plot", "icon": "BOOK"},
  { "text": "Short stories and nonfiction selections", "icon": "BOOK"},
  { "text": "analyze character development by reading short stories and nonfiction selections", "icon": "BOOK"},
  { "text": "examine characters through dialog, physical descriptions, character actions and reactions", "icon": "BOOK"},
  { "text": "The Open Window", "icon": "BOOK"},
  { "text": "The Necklace", "icon": "BOOK"},
  { "text": "examine theme and conflict by identifying universal themes, distinguishing internal and external conflicts and evaluating conflict between characters in several short stories and nonfiction selections", "icon": "BOOK"},
  { "text": "The hangover in literature, from Shakespeare and Burns to Bridget Jones", "icon": "BOOK"},
  { "text": "Brexit Britain: was Jane Austen an original little Englander?", "icon": "BOOK"},
  { "text": "Friday essay: George Eliot 200 years on - a scandalous life, a brilliant mind and a huge literary legacy", "icon": "BOOK"},
  { "text": "Robinson Crusoe 300 years on: Defoe’s unreliable narrative set up enduring colonial myths", "icon": "BOOK"},
  { "text": "Literature sheds light on the history and mystery of the Southern Ocean", "icon": "BOOK"},
  { "text": "ane Eyre translated: 57 languages show how different cultures interpret Charlotte Brontë’s classic novel", "icon": "BOOK"},
  { "text": "Spoilers: making people angry since Victorian times", "icon": "BOOK"},
  { "text": "Shakespeare: research blows away stereotypes and reveals teenagers actually love the Bard", "icon": "BOOK"},
  { "text": "How creativity can help us cultivate moral imagination", "icon": "BOOK"},
  { "text": "Thomas Hardy’s little-known Christmas story for children (with a happy ending)", "icon": "BOOK"},
  { "text": "Man Booker Prize 2018: when writers speak we glimpse the human behind the story", "icon": "BOOK"},
  { "text": "Author of first English novel kept it hidden for ten years – here’s why", "icon": "BOOK"},
  { "text": "Vanity Fair: Thackeray’s classic novel may be too modern for audiences today", "icon": "BOOK"},
  { "text": "Upstart Crow: Shakespeare sitcom is really quite educational", "icon": "BOOK"},



  { "text": "Complex numbers", "icon": "BOOK"},
{ "text": "Complex plane", "icon": "BOOK"},
{ "text": "Complex functions", "icon": "BOOK"},
{ "text": "Complex derivative", "icon": "BOOK"},
{ "text": "Holomorphic functions", "icon": "BOOK"},
{ "text": "Harmonic functions", "icon": "BOOK"},
{ "text": "Elementary functions", "icon": "BOOK"},
{ "text": "Polynomial functions", "icon": "BOOK"},
{ "text": "Exponential functions", "icon": "BOOK"},
{ "text": "Trigonometric functions", "icon": "BOOK"},
{ "text": "Logarithmic functions", "icon": "BOOK"},
{ "text": "Inverse trigonometric functions", "icon": "BOOK"},
{ "text": "Residue theory", "icon": "BOOK"},
{ "text": "Isometries in the complex plane", "icon": "BOOK"},
{ "text": "Holomorphic function", "icon": "BOOK"},
{ "text": "Antiholomorphic function", "icon": "BOOK"},
{ "text": "Cauchy-Riemann equations", "icon": "BOOK"},
{ "text": "Conformal mapping", "icon": "BOOK"},
{ "text": "Conformal welding", "icon": "BOOK"},
{ "text": "Power series", "icon": "BOOK"},
{ "text": "Radius of convergence", "icon": "BOOK"},
{ "text": "Laurent series", "icon": "BOOK"},
{ "text": "Meromorphic function", "icon": "BOOK"},
{ "text": "Entire function", "icon": "BOOK"},
{ "text": "Pole (complex analysis)", "icon": "BOOK"},
{ "text": "Zero (complex analysis)", "icon": "BOOK"},
{ "text": "Residue (complex analysis)", "icon": "BOOK"},
{ "text": "Isolated singularity", "icon": "BOOK"},
{ "text": "Removable singularity", "icon": "BOOK"},
{ "text": "Essential singularity", "icon": "BOOK"},
{ "text": "Branch point", "icon": "BOOK"},
{ "text": "Principal branch", "icon": "BOOK"},
{ "text": "Weierstrass-Casorati theorem", "icon": "BOOK"},
{ "text": "Landau's constants", "icon": "BOOK"},
{ "text": "Holomorphic functions are analytic", "icon": "BOOK"},
{ "text": "Schwarzian derivative", "icon": "BOOK"},
{ "text": "Analytic capacity", "icon": "BOOK"},
{ "text": "Disk algebra", "icon": "BOOK"},
{ "text": "Growth and distributi", "icon": "BOOK"},
{ "text": "Ahlfors theory", "icon": "BOOK"},
{ "text": "Bieberbach conjecture", "icon": "BOOK"},
{ "text": "Borel-Carathéodory theorem", "icon": "BOOK"},
{ "text": "Corona theorem", "icon": "BOOK"},
{ "text": "Hadamard three-circle theorem", "icon": "BOOK"},
{ "text": "Hardy space", "icon": "BOOK"},
{ "text": "Hardy's theorem", "icon": "BOOK"},
{ "text": "Maximum modulus principle", "icon": "BOOK"},
{ "text": "Nevanlinna theory", "icon": "BOOK"},
{ "text": "Paley-Wiener theorem", "icon": "BOOK"},
{ "text": "Progressive function", "icon": "BOOK"},
{ "text": "Value distribution theory of holomorphic functions", "icon": "BOOK"},
{ "text": "Line integral", "icon": "BOOK"},
{ "text": "Cauchy's integral theorem", "icon": "BOOK"},
{ "text": "Cauchy's integral formula", "icon": "BOOK"},
{ "text": "Residue theorem", "icon": "BOOK"},
{ "text": "Liouville's theorem (complex analysis)", "icon": "BOOK"},
{ "text": "Examples of contour integration", "icon": "BOOK"},
{ "text": "Fundamental theorem of algebra", "icon": "BOOK"},
{ "text": "Simply connected", "icon": "BOOK"},
{ "text": "Winding number", "icon": "BOOK"},
{ "text": "Principle of the argument", "icon": "BOOK"},
{ "text": "Rouché's theorem", "icon": "BOOK"},
{ "text": "Bromwich integral", "icon": "BOOK"},
 { "text": "Morera's theorem", "icon": "BOOK"},
{ "text": "Mellin transform", "icon": "BOOK"},
{ "text": "Kramers-Kronig relation, a. k. a. Hilbert transform", "icon": "BOOK"},
{ "text": "Sokhotski-Plemelj theorem", "icon": "BOOK"},
{ "text": "Exponential function", "icon": "BOOK"},
{ "text": "Beta function", "icon": "BOOK"},
{ "text": "Gamma function", "icon": "BOOK"},
{ "text": "Riemann zeta function", "icon": "BOOK"},
{ "text": "Riemann hypothesis", "icon": "BOOK"},
{ "text": "Generalized Riemann hypothesis", "icon": "BOOK"},
{ "text": "Elliptic function", "icon": "BOOK"},
{ "text": "Half-period ratio", "icon": "BOOK"},
{ "text": "Jacobi's elliptic functions", "icon": "BOOK"},
{ "text": "Weierstrass's ellipti functions", "icon": "BOOK"},
{ "text": "Theta function", "icon": "BOOK"},
{ "text": "Elliptic modular function", "icon": "BOOK"},
{ "text": "J-function", "icon": "BOOK"},
{ "text": "Modular function", "icon": "BOOK"},
{ "text": "Modular form", "icon": "BOOK"},
{ "text": "Analytic continuation", "icon": "BOOK"},
{ "text": "Riemann sphere", "icon": "BOOK"},
{ "text": "Riemann surface", "icon": "BOOK"},
{ "text": "Riemann mapping theorem", "icon": "BOOK"},
{ "text": "Carathéodory's theorem (conformal mapping)", "icon": "BOOK"},
{ "text": "Riemann-Roch theorem", "icon": "BOOK"},
  { "text": "Algebra foundations", "icon": "BOOK"},
  { "text": "Solving equations & inequalities", "icon": "BOOK"},
  { "text": "Working with units", "icon": "BOOK"},
   { "text": "Linear equations & graphs", "icon": "BOOK"},
  { "text": "Forms of linear equations", "icon": "BOOK"},
  { "text": "Quadratics: Multiplying & factoring", "icon": "BOOK"},
  { "text": "Irrational numbers", "icon": "BOOK"},
  { "text": "Complex numbers", "icon": "BOOK"},
  { "text": "why do prime number make these spirals", "icon": "BOOK"},
  { "text": "whats so special about Euler number e?", "icon": "BOOK"},
  { "text": "What odes it feel like to invent math", "icon": "BOOK"},
  { "text": "A fascinating thing about fractions", "icon": "BOOK"},
  { "text": "approximating irrational numbers", "icon": "BOOK"},
  { "text": "the archimedes number", "icon": "BOOK"},
  { "text": "primes without a 7", "icon": "BOOK"},
  { "text": "3 as the sum of 3 cubes", "icon": "BOOK"},
  { "text": "Fibonacci numbers", "icon": "BOOK"},
  { "text": "infinite series", "icon": "BOOK"},
  { "text": "all the numbers", "icon": "BOOK"},
  { "text": "a colorful unsolved problem", "icon": "BOOK"},
  { "text": "Heesch numbers and tiling", "icon": "BOOK"},
  { "text": "card flipping proof", "icon": "BOOK"},
  { "text": "divisibility tricks", "icon": "BOOK"},
  { "text": "randomness is random", "icon": "BOOK"},

  { "text": "The Military Masculine: Storytelling and Role-playing in Phil Klay Stories of War", "icon": "BOOK"},
  { "text": "The Captains Compromise: Political Symbolism in Herman Melville Benito Cereno", "icon": "BOOK"},
  { "text": "Class, Gender and the Anxieties of Meritocracy in Jacobean England", "icon": "BOOK"},
  { "text": "Learning to Love the Absolute Other in the Poetry of Seamus Heaney and Michael Longley", "icon": "BOOK"},
  { "text": "the Poetics of Witnessing in the Works of Seamus Heaney", "icon": "BOOK"}
  
  
]
