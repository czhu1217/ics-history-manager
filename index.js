
var natural = require('natural')
const TrainingSet = require('./trainingdata.json')
    classifier = new natural.BayesClassifier();


    classifier.addDocument('Asymptotic Analysis', 'programming');
    classifier.addDocument('Worst, Average and Best Cases', 'programming');
    classifier.addDocument('Little o and little omega notations', 'programming');
    classifier.addDocument('Lower and Upper Bound Theory', 'programming');
    classifier.addDocument('NP-Completeness Introduction', 'programming');
    classifier.addDocument('Linear Search, Binary Search, Jump Search, Interpolation Search, Exponential Search, Ternary Search', 'programming');
    classifier.addDocument('Selection Sort, Bubble Sort, Insertion Sort, Merge Sort, Heap Sort, QuickSort, Radix Sort, Counting Sort, Bucket Sort, ShellSort, Comb Sort, Pigeonhole Sort, Cycle Sort', 'programming');
    classifier.addDocument('Interpolation search vs Binary search', 'programming');
    classifier.addDocument('Lower bound for comparison based sorting algorithms', 'programming');
    classifier.addDocument('Which sorting algorithm makes minimum number of memory writes?', 'programming');
    classifier.addDocument('Find the Minimum length Unsorted Subarray, sorting which makes the complete array sorted', 'programming');
    classifier.addDocument('QuickSort on Singly Linked List', 'programming');
    classifier.addDocument('K’th Smallest/Largest Element in Unsorted Array in Expected Linear Time', 'programming');
    classifier.addDocument('Kruskal’s Minimum Spanning Tree Algorithm', 'programming');
    classifier.addDocument('Dijkstra’s Shortest Path Algorithm', 'programming');
    classifier.addDocument('Dijkstra’s Algorithm for Adjacency List Representation', 'programming');
    classifier.addDocument('Job Sequencing Problem', 'programming');
    classifier.addDocument('Quiz on Greedy Algorithms', 'programming');
    classifier.addDocument('Greedy Algorithm to find Minimum number of Coins', 'programming');
    classifier.addDocument('Overlapping Subproblems Property', 'programming');
    classifier.addDocument('Optimal Substructure Property', 'programming');
    classifier.addDocument('Longest Increasing Subsequence', 'programming');
    classifier.addDocument('longest Common Subsequence', 'programming');
    classifier.addDocument('Min Cost Path', 'programming');
    classifier.addDocument('Matrix Chain Multiplication', 'programming');
    classifier.addDocument('0-1 Knapsack Problem', 'programming');
    classifier.addDocument('Longest Palindromic Subsequence', 'programming');
    classifier.addDocument('Dynamic Programming:', 'programming');
    classifier.addDocument('Maximum Sum Increasing Subsequence', 'programming');
    classifier.addDocument('Partition problem', 'programming');
    classifier.addDocument('Suffix Array', 'programming');
    classifier.addDocument('N Queen Problem', 'programming');
    classifier.addDocument('Divide and Conquer', 'programming');
    classifier.addDocument('What is Programming? Beginners Guide - Hackr.io', 'programming');
    classifier.addDocument('Programming & Web Development Online Courses | Udacity', 'programming');
    classifier.addDocument('Programming tutorials, coding problems, and practice ', 'programming');
    classifier.addDocument('Programming Languages Online Courses: From Java to Ruby ...', 'programming');
    classifier.addDocument('Learn C (Introduction and Tutorials to C Programming)', 'programming');
    classifier.addDocument('Prim’s Minimum Spanning Tree Algorithm', 'programming');

    classifier.addDocument('Maximum number of edges to be added to a tree so that it stays a Bipartite graph', 'programming');
    classifier.addDocument('DFS for a n-ary tree (acyclic graph) represented as adjacency list', 'programming');
    classifier.addDocument('BFS using STL for competitive coding', 'programming');
    classifier.addDocument('Height of a generic tree from parent array', 'programming');
    classifier.addDocument('Path in a Rectangle with Circles', 'programming');
    classifier.addDocument('Transpose graph', 'programming');
    classifier.addDocument('Construct binary palindrome by repeated appending and trimming', 'programming');
    classifier.addDocument('Level of Each node in a Tree from source node', 'programming');
    classifier.addDocument('BFS using vectors & queue as per the algorithm of CLRS', 'programming');
    classifier.addDocument('Count number of trees in a forest', 'programming');
    classifier.addDocument(' Water Jug problem using BFS', 'programming');
    classifier.addDocument('Shortest path to reach one prime to other by changing single digit at a time', 'programming');

    classifier.addDocument('Minimum initial vertices to traverse whole matrix with given conditions', 'programming');
    classifier.addDocument('Count all possible paths between two vertices', 'programming');
    classifier.addDocument('Count the number of nodes at given level in a tree using BFS', 'programming');
    classifier.addDocument('Iterative Depth First Search', 'programming');
    classifier.addDocument('Find K cores of an undirected Graph', 'programming');

    classifier.addDocument('Transitive Closure of a Graph using DFS', 'programming');
    classifier.addDocument('Find Mother Vertex in a Graph', 'programming');
    classifier.addDocument('Graph representations using set and hash', 'programming');
    classifier.addDocument(' Applications of Breadth First Traversal', 'programming');
    classifier.addDocument('Applications of Depth First Search', 'programming');
    classifier.addDocument('Depth First Traversal for a Graph', 'programming');
    classifier.addDocument('Breadth First Traversal for a Graph', 'programming');
    classifier.addDocument(' Graph and its representations', 'programming');
    classifier.addDocument('A Peterson Graph Problem', 'programming');
    classifier.addDocument('Implementation of Graph in JavaScript', 'programming');
    classifier.addDocument('Print all paths from a given source to a destination using BFS', 'programming');
    classifier.addDocument('Minimum number of edges between two vertices of a Graph', 'programming');
    classifier.addDocument('Count nodes within K-distance from all nodes in a set', 'programming');

    classifier.addDocument('Find the smallest binary digit multiple of given number', 'programming');
    classifier.addDocument('Minimum steps to reach end of array under constraints', 'programming');
    classifier.addDocument('Minimum number of operation required to convert number x into y', 'programming');
    classifier.addDocument('Minimum steps to reach target by a Knight | Set 1', 'programming');
    classifier.addDocument('Find the minimum number of moves needed to move from one cell of matrix to another', 'programming');
    classifier.addDocument('Delete Edge to minimize subtree sum difference', 'programming');
    classifier.addDocument('Maximum product of two non-intersecting paths in a tree', 'programming');
    classifier.addDocument('Number of pair of positions in matrix which are not accessible', 'programming');
    classifier.addDocument('Best First Search (Informed Search)', 'programming');
    classifier.addDocument('Move weighting scale alternate under given constraints', 'programming');
    classifier.addDocument('BFS for Disconnected Graph', 'programming');
    classifier.addDocument('Minimum edge reversals to make a root', 'programming');
    classifier.addDocument('Bidirectional Search', 'programming');
    classifier.addDocument('Roots of a tree which give minimum height', 'programming');
    classifier.addDocument('Stepping Numbers', 'programming');
    classifier.addDocument('Clone an Undirected Graph', 'programming');
    classifier.addDocument('Sum of the minimum elements in all connected components of an undirected graph', 'programming');
    classifier.addDocument('Check if two nodes are on same path in a tree', 'programming');
    classifier.addDocument('A matrix probability question', 'programming');
    classifier.addDocument('Find length of the largest region in Boolean Matrix', 'programming');
    classifier.addDocument('Iterative Deepening Search(IDS) or Iterative Deepening Depth First Search(IDDFS)', 'programming');
    classifier.addDocument('Detect Cycle in a Directed Graph', 'programming');
    classifier.addDocument('Detect cycle in an undirected graph', 'programming');
    classifier.addDocument('Detect cycle in a direct graph using colors', 'programming');
    classifier.addDocument('Assign directions to edges so that the directed graph remains acyclic', 'programming');
    classifier.addDocument('Detect a negative cycle in a Graph | (Bellman Ford)', 'programming');
    classifier.addDocument('Cycles of length n in an undirected and connected graph', 'programming');
    classifier.addDocument('Detecting negative cycle using Floyd Warshall', 'programming');
    classifier.addDocument('Check if there is a cycle with odd weight sum in an undirected graph', 'programming');
    classifier.addDocument('Check if a graphs has a cycle of odd length', 'programming');
    classifier.addDocument('Clone a Directed Acyclic Graph', 'programming');
    classifier.addDocument('Check loop in array according to given constraints', 'programming');
    classifier.addDocument('Disjoint Set (Or Union-Find) | Set 1', 'programming');
    classifier.addDocument('Union-Find Algorithm | Set 2', 'programming');
    classifier.addDocument('Union-Find Algorithm | (Union By Rank and Find by Optimized Path Compression)', 'programming');
    classifier.addDocument('Magical Indices in an array', 'programming');   
    classifier.addDocument('Topological Sorting', 'programming');
classifier.addDocument('All topological sorts of a Directed Acyclic Graph', 'programming');
// classifier.addDocument('Kahn's Algorithm for Topological Sorting', 'programming');
classifier.addDocument('Maximum edges that can be added to DAG so that is remains DAG', 'programming');
classifier.addDocument('Longest path between any pair of vertices', 'programming');
classifier.addDocument('Longest Path in a Directed Acyclic Graph', 'programming');
classifier.addDocument('Longest Path in a Directed Acyclic Graph | Set 2', 'programming');
classifier.addDocument('Topological Sort of a graph using departure time of vertex', 'programming');
classifier.addDocument('Given a sorted dictionary of an alien language, find order of characters', 'programming');
classifier.addDocument('Prim\'s Minimum Spanning Tree (MST))', 'programming');
classifier.addDocument('Applications of Minimum Spanning Tree Problem', 'programming');
classifier.addDocument('Prim\'s MST for Adjacency List Representation', 'programming');
classifier.addDocument('Kruskal\'s Minimum Spanning Tree Algorithm', 'programming');
classifier.addDocument('Boruvka\'s algorithm for Minimum Spanning Tree', 'programming');
classifier.addDocument('Minimum cost to connect all cities', 'programming');
classifier.addDocument('Steiner Tree', 'programming');
classifier.addDocument('Reverse Delete Algorithm for Minimum Spanning Tree', 'programming');
classifier.addDocument('Total number of Spanning Trees in a Graph', 'programming');
classifier.addDocument('Minimum Product Spanning Tree', 'programming');
classifier.addDocument('Find if there is a path of more than k length from a source', 'programming');
classifier.addDocument('Tug of War', 'programming');
classifier.addDocument('The Knight-Tour Problem', 'programming');
classifier.addDocument('Rat in a Maze', 'programming');
classifier.addDocument('n-Queen\'s Problem', 'programming');
classifier.addDocument('m Coloring Problem', 'programming');
classifier.addDocument('Hamiltonian Cycle', 'programming');
classifier.addDocument('Permutation of numbers such that sum of two consecutive numbers is a perfect square', 'programming');
classifier.addDocument('Shortest Paths :', 'programming');
classifier.addDocument('Dijkstra\'s shortest path algorithm', 'programming');
classifier.addDocument('Dijkstra\'s Algorithm for Adjacency List Representation', 'programming');
classifier.addDocument('Bellman-Ford Algorithm', 'programming');
classifier.addDocument('Floyd Warshall Algorithm', 'programming');
classifier.addDocument('Johnson\'s algorithm for All-pairs shortest paths', 'programming');
classifier.addDocument('Shortest Path in Directed Acyclic Graph', 'programming');
classifier.addDocument('Shortest path with exactly k edges in a directed and weighted graph', 'programming');
classifier.addDocument('Dial\'s Algorithm', 'programming');
classifier.addDocument('Printing paths in Dijsktra\'s Algorithm', 'programming');
classifier.addDocument('Shortest path of a weighted graph where weight is 1 or 2', 'programming');
classifier.addDocument('Multistage Graph (Shortest Path)', 'programming');
classifier.addDocument('Shortest path in an unweighted graph', 'programming');
classifier.addDocument('Minimize the number of weakly connected nodes', 'programming');
classifier.addDocument('Betweenness Centrality (Centrality Measure)', 'programming');
classifier.addDocument('Comparison of Dijkstra\'s and Floyd-Warshall algorithms', 'programming');
classifier.addDocument('Karp\'s minimum mean (or average) weight cycle algorithm', 'programming');
classifier.addDocument('0-1 BFS (Shortest Path in a Binary Weight Graph)', 'programming');
classifier.addDocument('Find minimum weight cycle in an undirected graph', 'programming');
classifier.addDocument('Minimum Cost Path with Left, Right, Bottom and Up moves allowed', 'programming');
classifier.addDocument('Minimum edges to reverse to make path from a src to a dest', 'programming');
classifier.addDocument('Find Shortest distance from a guard in a Bank', 'programming');
classifier.addDocument('Connectivity :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Find if there is a path between two vertices in a directed graph', 'programming');
classifier.addDocument('Connectivity in a directed graph', 'programming');
classifier.addDocument('Articulation Points (or Cut Vertices) in a Graph', 'programming');
classifier.addDocument('Biconnected Components', 'programming');
classifier.addDocument('Biconnected graph', 'programming');
classifier.addDocument('Bridges in a graph', 'programming');
classifier.addDocument('Eulerian path and circuit', 'programming');
classifier.addDocument('Fleury\'s Algorithm for printing Eulerian Path or Circuit', 'programming');
classifier.addDocument('Strongly Connected Components', 'programming');
classifier.addDocument('Transitive closure of a graph', 'programming');
classifier.addDocument('Find the number of islands', 'programming');
classifier.addDocument('Find the number of Islands | Set 2 (Using Disjoint Set)', 'programming');
classifier.addDocument('Count all possible walks from a source to a destination with exactly k edges', 'programming');
classifier.addDocument('Euler Circuit in a Directed Graph', 'programming');
classifier.addDocument('Count the number of non-reachable nodes', 'programming');
classifier.addDocument('Find the Degree of a Particular vertex in a Graph', 'programming');
classifier.addDocument('Check if a given graph is tree or not', 'programming');
classifier.addDocument('Minimum edges required to add to make Euler Circuit', 'programming');
classifier.addDocument('Eulerian Path in undirected graph', 'programming');
classifier.addDocument('Find if there is a path of more than k length', 'programming');
classifier.addDocument('Length of shortest chain to reach the target word', 'programming');
classifier.addDocument('Print all paths from a given source to destination', 'programming');
classifier.addDocument('Find minimum cost to reach destination using train', 'programming');
classifier.addDocument('Find if an array of strings can be chained to form a circle | Set 1', 'programming');
classifier.addDocument('Find if an array of strings can be chained to form a circle | Set 2', 'programming');
classifier.addDocument('Tarjan\'s Algorithm to find strongly connected Components', 'programming');
classifier.addDocument('Number of loops of size k starting from a specific node', 'programming');
classifier.addDocument('Paths to travel each nodes using each edge (Seven Bridges of Königsberg)', 'programming');
classifier.addDocument('Number of cyclic elements in an array where we can jump according to value', 'programming');
classifier.addDocument('Number of groups formed in a graph of friends', 'programming');
classifier.addDocument('Minimum cost to connect weighted nodes represented as array', 'programming');
classifier.addDocument('Count single node isolated sub-graphs in a disconnected graph', 'programming');
classifier.addDocument('Calculate number of nodes between two vertices in an acyclic Graph by Disjoint Union method', 'programming');
classifier.addDocument('Dynamic Connectivity | Set 1 (Incremental)', 'programming');
classifier.addDocument('Check if a graph is strongly connected | Set 1 (Kosaraju using DFS)', 'programming');
classifier.addDocument('Check if a given directed graph is strongly connected | Set 2 (Kosaraju using BFS)', 'programming');
classifier.addDocument('Check if removing a given edge disconnects a graph', 'programming');
classifier.addDocument('Find all reachable nodes from every node present in a given set', 'programming');
classifier.addDocument('Connected Components in an undirected graph', 'programming');
classifier.addDocument('k\'th heaviest adjacent node in a graph where each vertex has weight', 'programming');
classifier.addDocument('Maximum Flow :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Ford-Fulkerson Algorithm for Maximum Flow Problem', 'programming');
classifier.addDocument('Find maximum number of edge disjoint paths between two vertices', 'programming');
classifier.addDocument('Find minimum s-t cut in a flow network', 'programming');
classifier.addDocument('Maximum Bipartite Matching', 'programming');
classifier.addDocument('Channel Assignment Problem', 'programming');
classifier.addDocument('Push Relabel- Set 1-Introduction', 'programming');
classifier.addDocument('Push Relabel- Set 2- Implementation', 'programming');
classifier.addDocument('Karger\'s Algorithm- Set 1- Introduction and Implementation', 'programming');
classifier.addDocument('Karger\'s Algorithm- Set 2 - Analysis and Applications', 'programming');
classifier.addDocument('Dinic\'s algorithm for Maximum Flow', 'programming');
classifier.addDocument('Max Flow Problem Introduction', 'programming');
classifier.addDocument('STL Implementation of Algorithms :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Kruskal\'s Minimum Spanning Tree using STL in C++', 'programming');
classifier.addDocument('Prim\'s Algorithm using Priority Queue STL', 'programming');
classifier.addDocument('Dijkstra\'s Shortest Path Algorithm using STL', 'programming');
classifier.addDocument('Dijkstra\'s Shortest Path Algorithm using set in STL', 'programming');
classifier.addDocument('Graph implementation using STL for competitive programming | Set 2 (Weighted graph)', 'programming');
classifier.addDocument('Hard Problems :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Graph Coloring (Introduction and Applications)', 'programming');
classifier.addDocument('Greedy Algorithm for Graph Coloring', 'programming');
classifier.addDocument('Traveling Salesman Problem (TSP) Implementation', 'programming');
classifier.addDocument('Travelling Salesman Problem (Naive and Dynamic Programming)', 'programming');
classifier.addDocument('Travelling Salesman Problem (Approximate using MST)', 'programming');
classifier.addDocument('Vertex Cover Problem | Set 1 (Introduction and Approximate Algorithm)', 'programming');
classifier.addDocument('K Centers Problem | Set 1 (Greedy Approximate Algorithm)', 'programming');
classifier.addDocument('Erdos Renyl Model (for generating Random Graphs)', 'programming');
classifier.addDocument('Clustering Coefficient in Graph Theory', 'programming');
classifier.addDocument('Chinese Postman or Route Inspection | Set 1 (introduction)', 'programming');
classifier.addDocument('Hierholzer\'s Algorithm for directed graph', 'programming');
classifier.addDocument('Misc :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Number of triangles in an undirected Graph', 'programming');
classifier.addDocument('Number of triangles in directed and undirected Graph', 'programming');
classifier.addDocument('Check whether a given graph is Bipartite or not', 'programming');
classifier.addDocument('Snake and Ladder Problem', 'programming');
classifier.addDocument('Minimize Cash Flow among a given set of friends who have borrowed money from each other', 'programming');
classifier.addDocument('Boggle (Find all possible words in a board of characters)', 'programming');
classifier.addDocument('Hopcroft Karp Algorithm for Maximum Matching-Introduction', 'programming');
classifier.addDocument('Hopcroft Karp Algorithm for Maximum Matching-Implementation', 'programming');
classifier.addDocument('Minimum Time to rot all oranges', 'programming');
classifier.addDocument('Find same contents in a list of contacts', 'programming');
classifier.addDocument('Hypercube Graph', 'programming');
classifier.addDocument('Check for star graph', 'programming');
classifier.addDocument('Optimal read list for a given number of days', 'programming');
classifier.addDocument('Print all jumping numbers smaller than or equal to a given value', 'programming');
classifier.addDocument('Fibonacci Cube Graph', 'programming');
classifier.addDocument('Barabasi Albert Graph (for Scale Free Models)', 'programming');
classifier.addDocument('Construct a graph from given degrees of all vertices', 'programming');
classifier.addDocument('Degree Centrality (Centrality Measure)', 'programming');
classifier.addDocument('Katz Centrality (Centrality Measure)', 'programming');
classifier.addDocument('Mathematics | Graph theory practice questions', 'programming');
classifier.addDocument('2-Satisfiability (2-SAT) Problem', 'programming');
classifier.addDocument('Determine whether a universal sink exists in a directed graph', 'programming');
classifier.addDocument('Number of sink nodes in a graph', 'programming');
classifier.addDocument('Largest subset of Graph vertices with edges of 2 or more colors', 'programming');
classifier.addDocument('NetworkX : Python software package for study of complex networks', 'programming');
classifier.addDocument('Generate a graph using Dictionary in Python', 'programming');
classifier.addDocument('Count number of edges in an undirected graph', 'programming');
classifier.addDocument('Two Clique Problem (Check if Graph can be divided in two Cliques)', 'programming');
classifier.addDocument('Check whether given degrees of vertices represent a Graph or Tree', 'programming');
classifier.addDocument('Finding minimum vertex cover size of a graph using binary search', 'programming');
classifier.addDocument('Stable Marriage Problem', 'programming');
classifier.addDocument('Sum of dependencies in a graph', 'programming');
classifier.addDocument('Quick Links :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Top 10 Interview Questions on Depth First Search (DFS)', 'programming');
classifier.addDocument('Some interesting shortest path questions', 'programming');
classifier.addDocument('Quizzes on Graph Traversal', 'programming');
classifier.addDocument('Quizzes on Graph Shortest Path', 'programming');
classifier.addDocument('Quizzes on Graph Minimum Spanning Tree', 'programming');
classifier.addDocument('Quizzes on Graphs', 'programming');
classifier.addDocument('Practice Problems on Graphs', 'programming');
classifier.addDocument('Videos on Graphs', 'programming');
classifier.addDocument('Array Introduction :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Introduction to Arrays', 'programming');
classifier.addDocument('Arrays in C/C++', 'programming');
classifier.addDocument('Arrays in Java', 'programming');
classifier.addDocument('Arrays in Python', 'programming');
classifier.addDocument('Arrays in C#', 'programming');
classifier.addDocument('Array Rotations :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Program for array rotation', 'programming');
classifier.addDocument('Reversal algorithm for array rotation', 'programming');
classifier.addDocument('Block swap algorithm for array rotation', 'programming');
classifier.addDocument('Program to cyclically rotate an array by one', 'programming');
classifier.addDocument('Search an element in a sorted and rotated array', 'programming');
classifier.addDocument('Given a sorted and rotated array, find if there is a pair with a given sum', 'programming');
classifier.addDocument('Find maximum value of Sum( i*arr[i]) with only rotations on given array allowed', 'programming');
classifier.addDocument('Maximum sum of i*arr[i] among all rotations of a given array', 'programming');
classifier.addDocument('Find the Rotation Count in Rotated Sorted array', 'programming');
classifier.addDocument('Quickly find multiple left rotations of an array', 'programming');
classifier.addDocument('Find the minimum element in a sorted and rotated array', 'programming');
classifier.addDocument('Reversal algorithm for right rotation of an array', 'programming');
classifier.addDocument('Find a rotation with maximum hamming distance', 'programming');
classifier.addDocument('Queries on Left and Right Circular shift on array', 'programming');
classifier.addDocument('Print left rotation of array in O(n) time and O(1) space', 'programming');
classifier.addDocument('Find element at given index after a number of rotations', 'programming');
classifier.addDocument('Split the array and add the first part to the end', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Arrangement Rearrangement :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Rearrange an array such that arr[i] = i', 'programming');
classifier.addDocument('Write a program to reverse an array or string', 'programming');
classifier.addDocument('Rearrange array such that arr[i] >= arr[j] if i is even and arr[i]<=arr[j] if i is odd and j < i', 'programming');
classifier.addDocument('Rearrange positive and negative numbers in O(n) time and O(1) extra space', 'programming');
classifier.addDocument('Rearrange array in alternating positive & negative items with O(1) extra space | Set 1', 'programming');
classifier.addDocument('Move all zeroes to end of array', 'programming');
classifier.addDocument('Move all zeroes to end of array | Set-2 (Using single traversal)', 'programming');
classifier.addDocument('Minimum swaps required to bring all elements less than or equal to k together', 'programming');
classifier.addDocument('Rearrange positive and negative numbers using inbuilt sort function', 'programming');
classifier.addDocument('Rearrange array such that even positioned are greater than odd', 'programming');
classifier.addDocument('Rearrange an array in order - smallest, largest, 2nd smallest, 2nd largest, ..', 'programming');
classifier.addDocument('Double the first element and move zero to end', 'programming');
classifier.addDocument('Reorder an array according to given indexes', 'programming');
classifier.addDocument('Rearrange positive and negative numbers with constant extra space', 'programming');
classifier.addDocument('Arrange given numbers to form the biggest number', 'programming');
classifier.addDocument('Rearrange an array in maximum minimum form | Set 1', 'programming');
classifier.addDocument('Rearrange an array in maximum minimum form | Set 2 (O(1) extra space)', 'programming');
classifier.addDocument('Move all negative numbers to beginning and positive to end with constant extra space', 'programming');
classifier.addDocument('Move all negative elements to end in order with extra space allowed', 'programming');
classifier.addDocument('Rearrange array such that even index elements are smaller and odd index elements are greater', 'programming');
classifier.addDocument('Positive elements at even and negative at odd positions', 'programming');
classifier.addDocument('Replace every array element by multiplication of previous and next', 'programming');
classifier.addDocument('Shuffle a given array', 'programming');
classifier.addDocument('Segregate even and odd numbers', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Order Statistics :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('K\'th Smallest/Largest Element in Unsorted Array | Set 1', 'programming');
classifier.addDocument('K\'th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)', 'programming');
classifier.addDocument('K\'th Smallest/Largest Element in Unsorted Array | Set 3 (Worst Case Linear Time)', 'programming');
classifier.addDocument('K\'th Smallest/Largest Element using STL', 'programming');
classifier.addDocument('k largest(or smallest) elements in an array | added Min Heap method', 'programming');
classifier.addDocument('Kth smallest element in a row-wise and column-wise sorted 2D array | Set 1', 'programming');
classifier.addDocument('Program to find largest element in an array', 'programming');
classifier.addDocument('Find the largest three elements in an array', 'programming');
classifier.addDocument('Find all elements in array which have at-least two greater elements', 'programming');
classifier.addDocument('Program for Mean and median of an unsorted array', 'programming');
classifier.addDocument('Median of Stream of Running Integers using STL', 'programming');
classifier.addDocument('Minimum product of k integers in an array of positive Integers', 'programming');
classifier.addDocument('K-th Largest Sum Contiguous Subarray', 'programming');
classifier.addDocument('K maximum sum combinations from two arrays', 'programming');
classifier.addDocument('K maximum sums of overlapping contiguous sub-arrays', 'programming');
classifier.addDocument('K maximum sums of non-overlapping contiguous sub-arrays', 'programming');
classifier.addDocument('k smallest elements in same order using O(1) extra space', 'programming');
classifier.addDocument('Find k pairs with smallest sums in two arrays', 'programming');
classifier.addDocument('k-th smallest absolute difference of two elements in an array', 'programming');
classifier.addDocument('Find Second largest element in an array', 'programming');
classifier.addDocument('Find k numbers with most occurrences in the given array', 'programming');
classifier.addDocument('Find the smallest and second smallest elements in an array', 'programming');
classifier.addDocument('Find the smallest missing number', 'programming');
classifier.addDocument('Maximum sum such that no two elements are adjacent', 'programming');
classifier.addDocument('Maximum and minimum of an array using minimum number of comparisons', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Range Queries :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('MO\'s Algorithm', 'programming');
classifier.addDocument('Sqrt (or Square Root) Decomposition Technique | Set 1 (Introduction)', 'programming');
classifier.addDocument('Sparse Table', 'programming');
classifier.addDocument('Range sum query using Sparse Table', 'programming');
classifier.addDocument('Range Minimum Query (Square Root Decomposition and Sparse Table)', 'programming');
classifier.addDocument('Range Queries for Frequencies of array elements', 'programming');
classifier.addDocument('Constant time range add operation on an array', 'programming');
classifier.addDocument('Range LCM Queries', 'programming');
classifier.addDocument('GCDs of given index ranges in an array', 'programming');
classifier.addDocument('Queries for GCD of all numbers of an array except elements in a given range', 'programming');
classifier.addDocument('Number of elements less than or equal to a given number in a given subarray', 'programming');
classifier.addDocument('Number of elements less than or equal to a given number in a given subarray | Set 2 (Including Updates)', 'programming');
classifier.addDocument('Queries for counts of array elements with values in given range', 'programming');
classifier.addDocument('Queries for decimal values of subarrays of a binary array', 'programming');
classifier.addDocument('Count elements which divide all numbers in range L-R', 'programming');
classifier.addDocument('Number whose sum of XOR with given array range is maximum', 'programming');
classifier.addDocument('XOR of numbers that appeared even number of times in given Range', 'programming');
classifier.addDocument('Array range queries over range queries', 'programming');
classifier.addDocument('Array range queries for searching an element', 'programming');
classifier.addDocument('Array range queries for elements with frequency same as value', 'programming');
classifier.addDocument('Maximum Occurrence in a Given Range', 'programming');
classifier.addDocument('Number of indexes with equal elements in given range', 'programming');
classifier.addDocument('Merge Sort Tree for Range Order Statistics', 'programming');
classifier.addDocument('Total numbers with no repeated digits in a range', 'programming');
classifier.addDocument('Difference Array | Range update query in O(1)', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Optimization Problems :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Largest Sum Contiguous Subarray', 'programming');
classifier.addDocument('Maximum profit by buying and selling a share at most twice', 'programming');
classifier.addDocument('Find the subarray with least average', 'programming');
classifier.addDocument('Find the minimum distance between two numbers', 'programming');
classifier.addDocument('Minimize the maximum difference between the heights', 'programming');
classifier.addDocument('Minimum number of jumps to reach end', 'programming');
classifier.addDocument('Dynamic Programming | Set 14 (Maximum Sum Increasing Subsequence)', 'programming');
classifier.addDocument('Smallest subarray with sum greater than a given value', 'programming');
classifier.addDocument('Find maximum average subarray of k length', 'programming');
classifier.addDocument('Count minimum steps to get the given desired array', 'programming');
classifier.addDocument('Number of subsets with product less than k', 'programming');
classifier.addDocument('Find minimum number of merge operations to make an array palindrome', 'programming');
classifier.addDocument('Find the smallest positive integer value that cannot be represented as sum of any subset of a given array', 'programming');
classifier.addDocument('Size of The Subarray With Maximum Sum', 'programming');
classifier.addDocument('Find minimum difference between any two elements', 'programming');
classifier.addDocument('Space optimization using bit manipulations', 'programming');
classifier.addDocument('Longest Span with same Sum in two Binary arrays', 'programming');
classifier.addDocument('Sorting :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Alternative Sorting', 'programming');
classifier.addDocument('Sort a nearly sorted (or K sorted) array', 'programming');
classifier.addDocument('Sort an array according to absolute difference with given value', 'programming');
classifier.addDocument('Sort an array in wave form', 'programming');
classifier.addDocument('Merge an array of size n into another array of size m+n', 'programming');
classifier.addDocument('Sort an array which contain 1 to n values', 'programming');
classifier.addDocument('Sort 1 to N by swapping adjacent elements', 'programming');
classifier.addDocument('Sort an array containing two types of elements', 'programming');
classifier.addDocument('Sort elements by frequency | Set 1', 'programming');
classifier.addDocument('Count Inversions in an array | Set 1 (Using Merge Sort)', 'programming');
classifier.addDocument('Two elements whose sum is closest to zero', 'programming');
classifier.addDocument('Shortest Un-ordered Subarray', 'programming');
classifier.addDocument('Minimum number of swaps required to sort an array', 'programming');
classifier.addDocument('Union and Intersection of two sorted arrays', 'programming');
classifier.addDocument('Find Union and Intersection of two unsorted arrays', 'programming');
classifier.addDocument('Sort an array of 0s, 1s and 2s', 'programming');
classifier.addDocument('Find the Minimum length Unsorted Subarray, sorting which makes the complete array sorted', 'programming');
classifier.addDocument('Median in a stream of integers (running integers)', 'programming');
classifier.addDocument('Count the number of possible triangles', 'programming');
classifier.addDocument('Find number of pairs (x, y) in an array such that x^y > y^x', 'programming');
classifier.addDocument('Count all distinct pairs with difference equal to k', 'programming');
classifier.addDocument('Print All Distinct Elements of a given integer array', 'programming');
classifier.addDocument('Construct an array from its pair-sum array', 'programming');
classifier.addDocument('Merge two sorted arrays with O(1) extra space', 'programming');
classifier.addDocument('Product of maximum in first array and minimum in second', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Searching :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Search, insert and delete in an unsorted array', 'programming');
classifier.addDocument('Search, insert and delete in a sorted array', 'programming');
classifier.addDocument('Given an array A[] and a number x, check for pair in A[] with sum as x', 'programming');
classifier.addDocument('Searching in an array where adjacent differ by at most k', 'programming');
classifier.addDocument('Find common elements in three sorted arrays', 'programming');
classifier.addDocument('Find position of an element in a sorted array of infinite numbers', 'programming');
classifier.addDocument('Find the only repetitive element between 1 to n-1', 'programming');
classifier.addDocument('Find the element that appears once', 'programming');
classifier.addDocument('Maximum Subarray Sum Excluding Certain Elements', 'programming');
classifier.addDocument('Maximum equlibrium sum in an array', 'programming');
classifier.addDocument('Equilibrium index of an array', 'programming');
classifier.addDocument('Leaders in an array', 'programming');
classifier.addDocument('Ceiling in a sorted array', 'programming');
classifier.addDocument('Majority Element', 'programming');
classifier.addDocument('Check for Majority Element in a sorted array', 'programming');
classifier.addDocument('Check if an array has a majority element', 'programming');
classifier.addDocument('Two Pointers Technique', 'programming');
classifier.addDocument('Find a peak element', 'programming');
classifier.addDocument('Find the two repeating elements in a given array', 'programming');
classifier.addDocument('Find a Fixed Point in a given array', 'programming');
classifier.addDocument('Find sub-array with given sum', 'programming');
classifier.addDocument('Maximum triplet sum in array', 'programming');
classifier.addDocument('Smallest Difference Triplet from Three arrays', 'programming');
classifier.addDocument('Find a triplet that sum to a given value', 'programming');
classifier.addDocument('Find all triplets with zero sum', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Matrix :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Rotate Matrix Elements', 'programming');
classifier.addDocument('Inplace rotate square matrix by 90 degrees | Set 1', 'programming');
classifier.addDocument('Rotate a matrix by 90 degree without using any extra space | Set 2', 'programming');
classifier.addDocument('Rotate a Matrix by 180 degree', 'programming');
classifier.addDocument('Turn an image by 90 degree', 'programming');
classifier.addDocument('Rotate each ring of matrix anticlockwise by K elements', 'programming');
classifier.addDocument('Check if all rows of a matrix are circular rotations of each other', 'programming');
classifier.addDocument('Sort the given matrix', 'programming');
classifier.addDocument('Find the row with maximum number of 1s', 'programming');
classifier.addDocument('Find median in row wise sorted matrix', 'programming');
classifier.addDocument('Matrix Multiplication | Recursive', 'programming');
classifier.addDocument('Program to multiply two matrices', 'programming');
classifier.addDocument('Program for scalar multiplication of a matrix', 'programming');
classifier.addDocument('Program to print Lower triangular and Upper triangular matrix of an array', 'programming');
classifier.addDocument('Find distinct elements common to all rows of a matrix', 'programming');
classifier.addDocument('Print a given matrix in spiral form', 'programming');
classifier.addDocument('Find maximum element of each row in a matrix', 'programming');
classifier.addDocument('Find unique elements in a matrix', 'programming');
classifier.addDocument('Shift matrix elements row-wise by k', 'programming');
classifier.addDocument('Different Operations on Matrices', 'programming');
classifier.addDocument('Print a given matrix in counter-clock wise spiral form', 'programming');
classifier.addDocument('Swap major and minor diagonals of a square matrix', 'programming');
classifier.addDocument('Maximum path sum in matrix', 'programming');
classifier.addDocument('Squares of Matrix Diagonal Elements', 'programming');
classifier.addDocument('Move matrix elements in given direction and add elements with same value', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Misc :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Subarray/Substring vs Subsequence and Programs to Generate them', 'programming');
classifier.addDocument('A Product Array Puzzle', 'programming');
classifier.addDocument('Number of subarrays with given product', 'programming');
classifier.addDocument('Linked List vs Array', 'programming');
classifier.addDocument('Check if array elements are consecutive | Added Method 3', 'programming');
classifier.addDocument('Find whether an array is subset of another array | Added Method 3', 'programming');
classifier.addDocument('Implement two stacks in an array', 'programming');
classifier.addDocument('Find relative complement of two sorted arrays', 'programming');
classifier.addDocument('Minimum increment by k operations to make all elements equal', 'programming');
classifier.addDocument('Minimize (max(A[i], B[j], C[k]) - min(A[i], B[j], C[k])) of three different sorted arrays', 'programming');

classifier.addDocument('Introduction to Linked List', 'programming');
classifier.addDocument('Linked List vs Array', 'programming');
classifier.addDocument('Linked List Insertion', 'programming');
classifier.addDocument('Linked List Deletion (Deleting a given key)', 'programming');
classifier.addDocument('Linked List Deletion (Deleting a key at given position)', 'programming');
classifier.addDocument('Write a function to delete a Linked List', 'programming');
classifier.addDocument('Find Length of a Linked List (Iterative and Recursive)', 'programming');
classifier.addDocument('Search an element in a Linked List (Iterative and Recursive)', 'programming');
classifier.addDocument('Write a function to get Nth node in a Linked List', 'programming');
classifier.addDocument('Nth node from the end of a Linked List', 'programming');
classifier.addDocument('Print the middle of a given linked list', 'programming');
classifier.addDocument('Write a function that counts the number of times a given int occurs in a Linked List', 'programming');
classifier.addDocument('Detect loop in a linked list', 'programming');
classifier.addDocument('Find length of loop in linked list', 'programming');
classifier.addDocument('Function to check if a singly linked list is palindrome', 'programming');
classifier.addDocument('Remove duplicates from a sorted linked list', 'programming');
classifier.addDocument('Remove duplicates from an unsorted linked list', 'programming');
classifier.addDocument('Swap nodes in a linked list without swapping data', 'programming');
classifier.addDocument('Pairwise swap elements of a given linked list', 'programming');
classifier.addDocument('Move last element to front of a given Linked List', 'programming');
classifier.addDocument('Intersection of two Sorted Linked Lists', 'programming');
classifier.addDocument('Intersection point of two Linked Lists.', 'programming');
classifier.addDocument('QuickSort on Singly Linked List', 'programming');
classifier.addDocument('Segregate even and odd nodes in a Linked List', 'programming');
classifier.addDocument('Reverse a linked list', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Circular Linked List :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Circular Linked List Introduction and Applications,', 'programming');
classifier.addDocument('Circular Linked List Traversal', 'programming');
classifier.addDocument('Split a Circular Linked List into two halves', 'programming');
classifier.addDocument('Sorted insert for circular linked list', 'programming');
classifier.addDocument('Check if a linked list is Circular Linked List', 'programming');
classifier.addDocument('Convert a Binary Tree to a Circular Doubly Link List', 'programming');
classifier.addDocument('Circular Singly Linked List | Insertion', 'programming');
classifier.addDocument('Deletion from a Circular Linked List', 'programming');
classifier.addDocument('Circular Queue | Set 2 (Circular Linked List Implementation)', 'programming');
classifier.addDocument('Count nodes in Circular linked list', 'programming');
classifier.addDocument('Josephus Circle using circular linked list', 'programming');
classifier.addDocument('Convert singly linked list into circular linked list', 'programming');
classifier.addDocument('Circular Linked List | Set 1 (Introduction and Applications)', 'programming');
classifier.addDocument('Circular Linked List | Set 2 (Traversal)', 'programming');
classifier.addDocument('Implementation of Deque using circular array', 'programming');
classifier.addDocument('Exchange first and last nodes in Circular Linked List', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Doubly Linked List :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Doubly Linked List Introduction and Insertion', 'programming');
classifier.addDocument('Delete a node in a Doubly Linked List', 'programming');
classifier.addDocument('Reverse a Doubly Linked List', 'programming');
classifier.addDocument('The Great Tree-List Recursion Problem.', 'programming');
classifier.addDocument('Copy a linked list with next and arbit pointer', 'programming');
classifier.addDocument('QuickSort on Doubly Linked List', 'programming');
classifier.addDocument('Swap Kth node from beginning with Kth node from end in a Linked List', 'programming');
classifier.addDocument('Merge Sort for Doubly Linked List', 'programming');
classifier.addDocument('Create a Doubly Linked List from a Ternary Tree', 'programming');
classifier.addDocument('Find pairs with given sum in doubly linked list', 'programming');
classifier.addDocument('Insert value in sorted way in a sorted doubly linked list', 'programming');
classifier.addDocument('Delete a Doubly Linked List node at a given position', 'programming');
classifier.addDocument('Count triplets in a sorted doubly linked list whose sum is equal to a given value x', 'programming');
classifier.addDocument('Remove duplicates from a sorted doubly linked list', 'programming');
classifier.addDocument('Delete all occurrences of a given key in a doubly linked list', 'programming');
classifier.addDocument('Remove duplicates from an unsorted doubly linked list', 'programming');
classifier.addDocument('Sort the biotonic doubly linked list', 'programming');
classifier.addDocument('Sort a k sorted doubly linked list', 'programming');
classifier.addDocument('Convert a given Binary Tree to Doubly Linked List | Set', 'programming');
classifier.addDocument('Program to find size of Doubly Linked List', 'programming');
classifier.addDocument('Sorted insert in a doubly linked list with head and tail pointers', 'programming');
classifier.addDocument('Large number arithmetic using doubly linked list', 'programming');
classifier.addDocument('Rotate Doubly linked list by N nodes', 'programming');
classifier.addDocument('Priority Queue using doubly linked list', 'programming');
classifier.addDocument('Reverse a doubly linked list in groups of given size', 'programming');
classifier.addDocument('Doubly Circular Linked List | Set 1 (Introduction and Insertion)', 'programming');
classifier.addDocument('Doubly Circular Linked List | Set 2 (Deletion)', 'programming');
classifier.addDocument('More >>', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Misc :', 'programming');
classifier.addDocument('', 'programming');
classifier.addDocument('Skip List | Set 1 (Introduction)', 'programming');
classifier.addDocument('Skip List | Set 2 (Insertion)', 'programming');
classifier.addDocument('Skip List | Set 3 (Searching and Deletion)', 'programming');
classifier.addDocument('Reverse a stack without using extra space in O(n)', 'programming');
classifier.addDocument('An interesting method to print reverse of a linked list', 'programming');
classifier.addDocument('Linked List representation of Disjoint Set Data Structures', 'programming');
classifier.addDocument('Sublist Search (Search a linked list in another list)', 'programming');
classifier.addDocument('How to insert elements in C++ STL List ?', 'programming');
classifier.addDocument('Unrolled Linked List | Set 1 (Introduction)', 'programming');
classifier.addDocument('A Programmer\'s approach of looking at Array vs. Linked List', 'programming');
classifier.addDocument('How to write C functions that modify head pointer of a Linked List?', 'programming');
classifier.addDocument('Given a linked list which is sorted, how will you insert in sorted way', 'programming');
classifier.addDocument('Can we reverse a linked list in less than O(n)?', 'programming');
classifier.addDocument('Practice questions for Linked List and Recursion', 'programming');
classifier.addDocument('Construct a Maximum Sum Linked List out of two Sorted Linked Lists having some Common nodes', 'programming');
classifier.addDocument('Given only a pointer to a node to be deleted in a singly linked list, how do you delete it?', 'programming');
classifier.addDocument('Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?', 'programming');
classifier.addDocument('Squareroot(n)-th node in a Linked List', 'programming');
classifier.addDocument('Find the fractional (or n/k - th) node in linked list', 'programming');
classifier.addDocument('Find modular node in a linked list', 'programming');
classifier.addDocument('Construct a linked list from 2D matrix', 'programming');
classifier.addDocument('Find smallest and largest elements in singly linked list', 'programming');
classifier.addDocument('Arrange consonants and vowels nodes in a linked list', 'programming');
classifier.addDocument('Partitioning a linked list around a given value and If we don\'t care about making the elements of the list "stable"', 'programming');
classifier.addDocument('Modify contents of Linked List', 'programming');
    classifier.addDocument('the human genome project', 'biology');
    classifier.addDocument('High School Biology Topics', 'biology');
    classifier.addDocument('Central nervous systems and brain functions', 'biology');
    classifier.addDocument('Energy and chemistry of life', 'biology');
    classifier.addDocument('Plant systems and ecology', 'biology');
    classifier.addDocument('Evolution, ecology and diversity', 'biology');
    classifier.addDocument('Cell structure and specialization', 'biology');
    classifier.addDocument('Heredity and Genetics', 'biology');
    classifier.addDocument('Ecosystems and Interdependence', 'biology');
    classifier.addDocument('Alzheimers Disease', 'biology');
    classifier.addDocument('Introduction to metabolism', 'biology');
    classifier.addDocument('Enzymes', 'biology');
    classifier.addDocument('Photosynthesis and cellular respiration', 'biology');
    classifier.addDocument('Fertilization and development', 'biology');
    classifier.addDocument('Introduction to heredity:', 'biology');
    classifier.addDocument('Sex linkage', 'biology');
    classifier.addDocument('DNA structure and replication', 'biology');
    classifier.addDocument('RNA and protein synthesis', 'biology');
    classifier.addDocument('Biotechnology', 'biology');
    classifier.addDocument('Evolution and natural selection', 'biology');
    classifier.addDocument('Body structure and homeostasis', 'biology');
    classifier.addDocument('The circulatory and respiratory system', 'biology');
    classifier.addDocument('the digestive and excretory system', 'biology');
    classifier.addDocument('the nervous and endocrine system', 'biology');
    classifier.addDocument('the reproductive system', 'biology');
    classifier.addDocument('biochemical cycles', 'biology');
    classifier.addDocument('Regenerative medicine of the future', 'biology');
    classifier.addDocument('Prospects for the development of cell therapy.', 'biology');
    classifier.addDocument('the human genome project', 'biology');
    classifier.addDocument('William Shakespeare | Poetry Foundation', 'english');
    classifier.addDocument('Plot and Setting – Students read and analyze short stories and nonfiction selections in terms of plot and setting', 'english');
    classifier.addDocument('identify the inciting incident, conflict, rising action, climax, resolution, setting and the effect setting has on the plot', 'english');
    classifier.addDocument('Short stories and nonfiction selections', 'english');
    classifier.addDocument('analyze character development by reading short stories and nonfiction selections', 'english');
    classifier.addDocument('examine characters through dialog, physical descriptions, character actions and reactions', 'english');
    classifier.addDocument('The Open Window', 'english');
    classifier.addDocument('The Necklace', 'english');
    classifier.addDocument('examine theme and conflict by identifying universal themes, distinguishing internal and external conflicts and evaluating conflict between characters in several short stories and nonfiction selections', 'english');
    classifier.addDocument('The hangover in literature, from Shakespeare and Burns to Bridget Jones', 'english');
    classifier.addDocument('Brexit Britain: was Jane Austen an original little Englander?', 'english');
    classifier.addDocument('Friday essay: George Eliot 200 years on - a scandalous life, a brilliant mind and a huge literary legacy', 'english');
    classifier.addDocument('Robinson Crusoe 300 years on: Defoe’s unreliable narrative set up enduring colonial myths', 'english');
    classifier.addDocument('Literature sheds light on the history and mystery of the Southern Ocean', 'english');
    classifier.addDocument('ane Eyre translated: 57 languages show how different cultures interpret Charlotte Brontë’s classic novel', 'english');
    classifier.addDocument('Spoilers: making people angry since Victorian times', 'english');
    classifier.addDocument('Shakespeare: research blows away stereotypes and reveals teenagers actually love the Bard', 'english');
    classifier.addDocument('How creativity can help us cultivate moral imagination', 'english');
    classifier.addDocument('Thomas Hardy’s little-known Christmas story for children (with a happy ending)', 'english');
    classifier.addDocument('Man Booker Prize 2018: when writers speak we glimpse the human behind the story', 'english');
    classifier.addDocument('Author of first English novel kept it hidden for ten years – here’s why', 'english');
    classifier.addDocument('Vanity Fair: Thackeray’s classic novel may be too modern for audiences today', 'english');
    classifier.addDocument('Upstart Crow: Shakespeare sitcom is really quite educational', 'english');
    classifier.addDocument('Algebra foundations','math');
    classifier.addDocument('Solving equations & inequalities','math');
    classifier.addDocument('Working with units','math');
    classifier.addDocument('Linear equations & graphs','math');
    classifier.addDocument('Forms of linear equations','math');
    classifier.addDocument('Quadratics: Multiplying & factoring','math');
    classifier.addDocument('Irrational numbers','math');
    classifier.addDocument('Complex numbers','math');
    classifier.addDocument('why do prime number make these spirals','math');
    classifier.addDocument('whats so special about Euler number e?','math');
    classifier.addDocument('What odes it feel like to invent math','math');
    classifier.addDocument('A fascinating thing about fractions','math');
    classifier.addDocument('approximating irrational numbers','math');
    classifier.addDocument('the archimedes number','math');
    classifier.addDocument('primes without a 7','math');
    classifier.addDocument('3 as the sum of 3 cubes','math');
    classifier.addDocument('Fibonacci numbers','math');
    classifier.addDocument('infinite series','math');
    classifier.addDocument('all the numbers','math');
    classifier.addDocument('a colorful unsolved problem','math');
    classifier.addDocument('Heesch numbers and tiling','math');
    classifier.addDocument('card flipping proof','math');
    classifier.addDocument('divisibility tricks','math');
    classifier.addDocument('randomness is random','math');
    classifier.addDocument('Trauma and Silence in No-No Boy: An Interdisciplinary Reading','english');
    classifier.addDocument('The Military Masculine: Storytelling and Role-playing in Phil Klay Stories of War', 'english');
    classifier.addDocument('The Search for Nationhood in Older Scots Literature: A Study of The Flyting of Dunbar and Kennedy and The Tale of Ralph the Collier','english');
    classifier.addDocument('The Captains Compromise: Political Symbolism in Herman Melville Benito Cereno', 'english');
    classifier.addDocument('Class, Gender and the Anxieties of Meritocracy in Jacobean England', 'english');
    classifier.addDocument('Learning to Love the Absolute Other in the Poetry of Seamus Heaney and Michael Longley', 'english');
    classifier.addDocument('the Poetics of Witnessing in the Works of Seamus Heaney', 'english');
    classifier.addDocument('The Birth of the Creative Consciousness: Childhood Spaces, Memory, and Psychoanalytic Play in the Memoirs of Vladimir Nabokov and Virginia Woolf','english');
    classifier.addDocument('Globalization of Chinese Online Literature: Understanding Transnational Reading of Chinese Xuanhuan Novels Among English Readers','english');
    
    


classifier.train();
classifier.save('classifier.json', function(err, classfier){

 });
 natural.BayesClassifier.load('classifier.json', null, function(err, classifier) {
    console.log(classifier.classify('the human genome project and its next steps'));
    console.log(classifier.classify('linear search and binary search'));
});


