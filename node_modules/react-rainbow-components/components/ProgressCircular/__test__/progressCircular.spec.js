"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("./../index"));

describe('<ProgressCircular/>', function () {
  it('should be accesible', function () {
    var component = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      value: 25
    }));
    expect(component.find('div[role="progressbar"]').exists()).toBe(true);
    expect(component.find('div[aria-valuemax="100"]').exists()).toBe(true);
    expect(component.find('div[aria-valuemin="0"]').exists()).toBe(true);
    expect(component.find('div[aria-valuenow=25]').exists()).toBe(true);
  });
  it('should has set the value passed', function () {
    var component = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      value: 25
    }));
    expect(component.find('ProgressRing').prop('percent')).toBe(25);
    expect(component.find('.rainbow-progress-circular_percent-text').text()).toBe('25%');
  });
  it('should have the right class names when variant success', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      variant: "success"
    }));
    var container = component.find('div.rainbow-progress-circular.rainbow-progress-circular--success');
    expect(container.exists()).toBe(true);
  });
  it('should have the right class names when variant warning', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      variant: "warning"
    }));
    var container = component.find('div.rainbow-progress-circular.rainbow-progress-circular--warning');
    expect(container.exists()).toBe(true);
  });
  it('should have the right class names when variant error', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      variant: "error"
    }));
    var container = component.find('div.rainbow-progress-circular.rainbow-progress-circular--error');
    expect(container.exists()).toBe(true);
  });
});