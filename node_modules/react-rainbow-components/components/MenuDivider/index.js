"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = MenuDivider;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

require("./styles.css");

/**
 * The MenuDivider are used for separate content inside the ButtonMenu.
 */
function MenuDivider(props) {
  var variant = props.variant,
      className = props.className,
      style = props.style;

  var getVariantClassNames = function getVariantClassNames() {
    if (variant === 'default') {
      return 'rainbow-divider';
    }

    return 'rainbow-divider_space';
  };

  var getClassNames = function getClassNames() {
    return (0, _classnames["default"])(getVariantClassNames(), className);
  };

  return _react["default"].createElement("li", {
    className: getClassNames(),
    style: style,
    role: "separator"
  });
}

MenuDivider.propTypes = {
  /** The variant changes the margin of the divider. Valid values are default, and space.
   * This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'space']),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object
};
MenuDivider.defaultProps = {
  variant: 'default',
  className: undefined,
  style: undefined
};