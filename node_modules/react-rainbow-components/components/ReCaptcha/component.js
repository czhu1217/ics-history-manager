"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _RenderIf = _interopRequireDefault(require("../RenderIf"));

require("./styles.css");

var _utils = require("../../libs/utils");

var ReCaptchaComponent =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(ReCaptchaComponent, _Component);

  function ReCaptchaComponent(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReCaptchaComponent);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ReCaptchaComponent).call(this, props));
    _this.recaptchaID = (0, _utils.uniqueId)('recaptcha-container');
    return _this;
  }

  (0, _createClass2["default"])(ReCaptchaComponent, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      window.grecaptcha.ready(function () {
        return _this2.renderReCaptcha();
      });
    }
  }, {
    key: "getContainerClassNames",
    value: function getContainerClassNames() {
      var className = this.props.className;
      return (0, _classnames["default"])('rainbow-recaptcha-container', className);
    }
  }, {
    key: "renderReCaptcha",
    value: function renderReCaptcha() {
      var _this$props = this.props,
          siteKey = _this$props.siteKey,
          theme = _this$props.theme,
          size = _this$props.size,
          tabIndex = _this$props.tabIndex,
          onChange = _this$props.onChange;
      window.grecaptcha.render(this.recaptchaID, {
        sitekey: siteKey,
        theme: theme,
        size: size,
        tabIndex: tabIndex,
        callback: onChange,
        'expired-callback': onChange,
        'error-callback': onChange
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          error = _this$props2.error,
          style = _this$props2.style;
      return _react["default"].createElement("div", {
        className: this.getContainerClassNames(),
        style: style
      }, _react["default"].createElement("div", {
        id: this.recaptchaID
      }), _react["default"].createElement(_RenderIf["default"], {
        isTrue: !!error
      }, _react["default"].createElement("div", {
        className: "rainbow-recaptcha_error"
      }, error)));
    }
  }]);
  return ReCaptchaComponent;
}(_react.Component);

exports["default"] = ReCaptchaComponent;
ReCaptchaComponent.propTypes = {
  siteKey: _propTypes["default"].string.isRequired,
  theme: _propTypes["default"].oneOf(['light', 'dark']).isRequired,
  size: _propTypes["default"].oneOf(['normal', 'compact']).isRequired,
  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]).isRequired,
  error: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].string]),
  onChange: _propTypes["default"].func.isRequired,
  className: _propTypes["default"].string,
  style: _propTypes["default"].object
};
ReCaptchaComponent.defaultProps = {
  error: undefined,
  onChange: function onChange() {},
  className: undefined,
  style: undefined
};