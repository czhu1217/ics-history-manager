"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("./../index"));

describe('<ProgressBar/>', function () {
  it('should has set the value passed', function () {
    var component = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      value: 25
    }));
    expect(component.find('span.rainbow-progress-bar_value').prop('style').width).toBe('25%');
  });
  it('should be accesible', function () {
    var component = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      value: 25
    }));
    expect(component.find('div[role="progressbar"]').exists()).toBe(true);
    expect(component.find('div[aria-valuemax="100"]').exists()).toBe(true);
    expect(component.find('div[aria-valuemin="0"]').exists()).toBe(true);
    expect(component.find('div[aria-valuenow=25]').exists()).toBe(true);
  });
  it('should have the right class names when variant, color and size default and have a custom class', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      className: "custom-class"
    }));
    var container = component.find('div.rainbow-progress-bar.rainbow-progress-bar--medium.custom-class');
    var progressBar = component.find('span.rainbow-progress-bar_value');
    expect(container.exists()).toBe(true);
    expect(progressBar.exists()).toBe(true);
  });
  it('should have the right class names when size large', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      size: "large"
    }));
    expect(component.find('div.rainbow-progress-bar.rainbow-progress-bar--large').exists()).toBe(true);
  });
  it('should have the right class names when size medium', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      size: "medium"
    }));
    expect(component.find('div.rainbow-progress-bar.rainbow-progress-bar--medium').exists()).toBe(true);
  });
  it('should have the right class names when size small', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      size: "small"
    }));
    expect(component.find('div.rainbow-progress-bar.rainbow-progress-bar--small').exists()).toBe(true);
  });
  it('should have the right class names when size x-small', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      size: "x-small"
    }));
    expect(component.find('div.rainbow-progress-bar.rainbow-progress-bar--x-small').exists()).toBe(true);
  });
  it('should have the right class names when varaint success', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      variant: "success"
    }));
    var container = component.find('div.rainbow-progress-bar.rainbow-progress-bar--medium.rainbow-progress-bar--success');
    var progressBar = component.find('span.rainbow-progress-bar_value.rainbow-progress-bar_value--success');
    expect(container.exists()).toBe(true);
    expect(progressBar.exists()).toBe(true);
  });
});