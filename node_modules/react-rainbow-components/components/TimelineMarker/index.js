"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TimelineMarker;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _calendarIcon = _interopRequireDefault(require("./calendarIcon"));

require("./styles.css");

/**
 * The TimelineMarker displays one event of an item timeline.
 * @category Layout
 */
function TimelineMarker(props) {
  var icon = props.icon,
      label = props.label,
      description = props.description,
      datetime = props.datetime,
      children = props.children,
      className = props.className,
      style = props.style;

  var getContainerClassName = function getContainerClassName() {
    return (0, _classnames["default"])('rainbow-timeline-marker_container', className);
  };

  return _react["default"].createElement("li", {
    className: getContainerClassName(),
    style: style
  }, _react["default"].createElement("div", {
    className: "rainbow-timeline-marker_column-left"
  }, _react["default"].createElement("span", {
    className: "rainbow-timeline-marker_icon-container"
  }, icon)), _react["default"].createElement("div", {
    className: "rainbow-timeline-marker_content"
  }, _react["default"].createElement("div", {
    className: "rainbow-timeline-marker_content-header"
  }, _react["default"].createElement("div", {
    className: "rainbow-timeline-marker_content-header-title"
  }, _react["default"].createElement("h1", {
    className: "rainbow-timeline-marker_label"
  }, label), _react["default"].createElement("p", {
    className: "rainbow-timeline-marker_datetime"
  }, datetime)), _react["default"].createElement("p", {
    className: "rainbow-timeline-marker_description"
  }, description)), _react["default"].createElement("div", {
    className: "rainbow-timeline-marker_body"
  }, children)));
}

TimelineMarker.propTypes = {
  /** The text to be displayed as the TimelineMarker's label. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The text to be displayed as the TimelineMarker's description. */
  description: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The text with the formatted datetime of the event. */
  datetime: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The icon to show at the left of the TimelineMarker.
   * If not passed by default a calendar icon will be showed.  */
  icon: _propTypes["default"].node,

  /**
   * This prop that should not be visible in the documentation.
   * @ignore
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object
};
TimelineMarker.defaultProps = {
  label: null,
  description: null,
  datetime: null,
  icon: _react["default"].createElement(_calendarIcon["default"], null),
  children: null,
  className: undefined,
  style: undefined
};