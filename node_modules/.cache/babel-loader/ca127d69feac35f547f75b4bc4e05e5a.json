{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _menuContent = _interopRequireDefault(require(\"./menuContent\"));\n\nvar _context = require(\"./context\");\n\nvar _utils = require(\"./utils\");\n\nvar _constants = require(\"./../../libs/constants\");\n\nrequire(\"./styles.css\");\n\nvar PrimitiveMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(PrimitiveMenu, _Component);\n\n  function PrimitiveMenu(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, PrimitiveMenu);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(PrimitiveMenu).call(this, props));\n    _this.containerRef = _react[\"default\"].createRef();\n    _this.triggerRef = _react[\"default\"].createRef();\n    _this.toggleMenu = _this.toggleMenu.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyEscapePressed = _this.handleKeyEscapePressed.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyPressed = _this.handleKeyPressed.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyDownPressed = _this.handleKeyDownPressed.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyUpPressed = _this.handleKeyUpPressed.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyEnterPressed = _this.handleKeyEnterPressed.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.closeMenu = _this.closeMenu.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.hoverChild = _this.hoverChild.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.registerChild = _this.registerChild.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.unregisterChild = _this.unregisterChild.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.state = {\n      isOpen: false,\n      childrenRefs: [],\n      childFocusedIndex: -1,\n      context: {\n        privateOnClose: _this.closeMenu,\n        privateRegisterChild: _this.registerChild,\n        privateUnregisterChild: _this.unregisterChild,\n        privateOnHover: _this.hoverChild\n      }\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(PrimitiveMenu, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('click', this.handleClick);\n      window.removeEventListener('touchstart', this.handleClick);\n    }\n  }, {\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var isOpen = this.state.isOpen;\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-primitive-menu', {\n        'rainbow-primitive-menu--open': isOpen\n      }, className);\n    }\n  }, {\n    key: \"getDropdownClassNames\",\n    value: function getDropdownClassNames() {\n      var _this$props = this.props,\n          menuAlignment = _this$props.menuAlignment,\n          menuSize = _this$props.menuSize,\n          isLoading = _this$props.isLoading;\n      return (0, _classnames[\"default\"])('rainbow-primitive-menu_dropdown', \"rainbow-primitive-menu_dropdown--\".concat(menuAlignment), \"rainbow-primitive-menu_dropdown--\".concat(menuSize), {\n        'rainbow-primitive-menu_dropdown--loading-box': isLoading\n      });\n    }\n  }, {\n    key: \"focusChild\",\n    value: function focusChild(index) {\n      var isLoading = this.props.isLoading;\n      var childrenRefs = this.state.childrenRefs;\n\n      if (isLoading || !childrenRefs[index]) {\n        return null;\n      }\n\n      this.setState({\n        childFocusedIndex: index\n      });\n      return childrenRefs[index].focus();\n    }\n  }, {\n    key: \"handleKeyEscapePressed\",\n    value: function handleKeyEscapePressed() {\n      this.toggleMenu();\n      return this.triggerRef.current.focus();\n    }\n  }, {\n    key: \"handleKeyDownPressed\",\n    value: function handleKeyDownPressed() {\n      var _this$state = this.state,\n          childrenRefs = _this$state.childrenRefs,\n          childFocusedIndex = _this$state.childFocusedIndex;\n      var lastChild = childrenRefs.length - 1;\n      var isLastChild = childFocusedIndex === lastChild;\n      var isBetweenFirstAndLast = childFocusedIndex >= 0 && !isLastChild;\n      var isInvalidIndexOrLast = childFocusedIndex === -1 || isLastChild;\n\n      if (isBetweenFirstAndLast) {\n        return this.focusChild(childFocusedIndex + 1);\n      }\n\n      if (isInvalidIndexOrLast) {\n        return this.focusChild(0);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleKeyUpPressed\",\n    value: function handleKeyUpPressed() {\n      var _this$state2 = this.state,\n          childrenRefs = _this$state2.childrenRefs,\n          childFocusedIndex = _this$state2.childFocusedIndex;\n      var isFirstChild = childFocusedIndex === 0;\n      var isValidIndexGreaterThanFirst = childFocusedIndex >= 0 && !isFirstChild;\n      var isInvalidIndexOrFirst = childFocusedIndex === -1 || isFirstChild;\n      var lastChild = childrenRefs.length - 1;\n\n      if (isValidIndexGreaterThanFirst) {\n        return this.focusChild(childFocusedIndex - 1);\n      }\n\n      if (isInvalidIndexOrFirst) {\n        return this.focusChild(lastChild);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleKeyEnterPressed\",\n    value: function handleKeyEnterPressed() {\n      var _this$state3 = this.state,\n          childrenRefs = _this$state3.childrenRefs,\n          childFocusedIndex = _this$state3.childFocusedIndex;\n      var isValidIndex = childFocusedIndex >= 0;\n\n      if (isValidIndex) {\n        return childrenRefs[childFocusedIndex].click();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"focusMatchedItem\",\n    value: function focusMatchedItem(matchedItem) {\n      var childrenRefs = this.state.childrenRefs;\n      var itemIndex = (0, _utils.findItemIndex)(childrenRefs, matchedItem);\n      return this.focusChild(itemIndex);\n    }\n  }, {\n    key: \"findItemByKeyPressed\",\n    value: function findItemByKeyPressed(key) {\n      var _this$state4 = this.state,\n          childrenRefs = _this$state4.childrenRefs,\n          childFocusedIndex = _this$state4.childFocusedIndex,\n          matchedKeyPressed = _this$state4.matchedKeyPressed;\n\n      if (matchedKeyPressed) {\n        var _newChildrenRefs = childrenRefs.slice(childFocusedIndex + 1);\n\n        var _matchedItem = (0, _utils.findItemByKey)(key, _newChildrenRefs);\n\n        if (_matchedItem) {\n          return this.focusMatchedItem(_matchedItem);\n        }\n\n        var newMatchedItem = (0, _utils.findItemByKey)(key, childrenRefs);\n        if (newMatchedItem) this.focusChild((0, _utils.findItemIndex)(childrenRefs, newMatchedItem));\n        return null;\n      }\n\n      var newChildrenRefs = childrenRefs.slice(childFocusedIndex + 1);\n      var matchedItem = (0, _utils.findItemByKey)(key, newChildrenRefs);\n\n      if (matchedItem) {\n        this.setState({\n          matchedKeyPressed: key\n        });\n        return this.focusMatchedItem(matchedItem);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleKeyPressed\",\n    value: function handleKeyPressed(event) {\n      var isOpen = this.state.isOpen;\n\n      if (isOpen) {\n        var _keyHandlerMap;\n\n        if (event.keyCode !== _constants.TAB_KEY) event.preventDefault();\n        var keyHandlerMap = (_keyHandlerMap = {}, (0, _defineProperty2[\"default\"])(_keyHandlerMap, _constants.DOWN_KEY, this.handleKeyDownPressed), (0, _defineProperty2[\"default\"])(_keyHandlerMap, _constants.UP_KEY, this.handleKeyUpPressed), (0, _defineProperty2[\"default\"])(_keyHandlerMap, _constants.ESCAPE_KEY, this.handleKeyEscapePressed), (0, _defineProperty2[\"default\"])(_keyHandlerMap, _constants.TAB_KEY, this.toggleMenu), (0, _defineProperty2[\"default\"])(_keyHandlerMap, _constants.ENTER_KEY, this.handleKeyEnterPressed), _keyHandlerMap);\n\n        if (keyHandlerMap[event.keyCode]) {\n          return keyHandlerMap[event.keyCode]();\n        }\n\n        return this.findItemByKeyPressed(event.key);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"registerChild\",\n    value: function registerChild(childRef) {\n      var childrenRefs = this.state.childrenRefs;\n\n      var _getChildMenuItemNode = (0, _utils.getChildMenuItemNodes)(this.containerRef.current),\n          _getChildMenuItemNode2 = (0, _toArray2[\"default\"])(_getChildMenuItemNode),\n          nodes = _getChildMenuItemNode2.slice(0);\n\n      var newChildrenRefs = (0, _utils.insertChildOrderly)(childrenRefs, childRef, nodes);\n      this.setState({\n        childrenRefs: newChildrenRefs\n      });\n    }\n  }, {\n    key: \"unregisterChild\",\n    value: function unregisterChild(childRef) {\n      var childrenRefs = this.state.childrenRefs;\n      var newChildrenRefs = childrenRefs.filter(function (child) {\n        return child !== childRef;\n      });\n      this.setState({\n        childrenRefs: newChildrenRefs\n      });\n    }\n  }, {\n    key: \"hoverChild\",\n    value: function hoverChild(event, childRef) {\n      return this.focusMatchedItem(childRef);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var isClickInsidePrimitiveMenu = this.containerRef.current.contains(event.target);\n\n      if (isClickInsidePrimitiveMenu) {\n        return null;\n      }\n\n      return this.closeMenu();\n    }\n  }, {\n    key: \"openMenu\",\n    value: function openMenu() {\n      var _this2 = this;\n\n      window.addEventListener('click', this.handleClick);\n      window.addEventListener('touchstart', this.handleClick);\n      setTimeout(function () {\n        return _this2.focusChild(0);\n      }, 0);\n      return this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      window.removeEventListener('click', this.handleClick);\n      window.removeEventListener('touchstart', this.handleClick);\n      return this.setState({\n        isOpen: false,\n        childFocusedIndex: -1\n      });\n    }\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      var isOpen = this.state.isOpen;\n\n      if (isOpen) {\n        return this.closeMenu();\n      }\n\n      return this.openMenu();\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.triggerRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.triggerRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.triggerRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          title = _this$props2.title,\n          assistiveText = _this$props2.assistiveText,\n          isLoading = _this$props2.isLoading,\n          children = _this$props2.children,\n          id = _this$props2.id,\n          className = _this$props2.className,\n          menuAlignment = _this$props2.menuAlignment,\n          menuSize = _this$props2.menuSize,\n          Trigger = _this$props2.trigger,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props2, [\"style\", \"title\", \"assistiveText\", \"isLoading\", \"children\", \"id\", \"className\", \"menuAlignment\", \"menuSize\", \"trigger\"]);\n      var _this$state5 = this.state,\n          context = _this$state5.context,\n          isOpen = _this$state5.isOpen;\n      var ariaLabel = title || assistiveText;\n      return _react[\"default\"].createElement(\"div\", {\n        id: id,\n        role: \"presentation\",\n        className: this.getContainerClassNames(),\n        style: style,\n        onKeyDown: this.handleKeyPressed,\n        ref: this.containerRef\n      }, _react[\"default\"].createElement(Trigger, (0, _extends2[\"default\"])({}, rest, {\n        isOpen: isOpen,\n        title: title,\n        ariaExpanded: isOpen,\n        ariaHaspopup: true,\n        assistiveText: assistiveText,\n        onClick: this.toggleMenu,\n        ref: this.triggerRef\n      })), _react[\"default\"].createElement(\"div\", {\n        className: this.getDropdownClassNames()\n      }, _react[\"default\"].createElement(\"ul\", {\n        role: \"menu\",\n        \"aria-label\": ariaLabel\n      }, _react[\"default\"].createElement(_menuContent[\"default\"], {\n        isLoading: isLoading\n      }, _react[\"default\"].createElement(_context.Provider, {\n        value: context\n      }, children)))));\n    }\n  }]);\n  return PrimitiveMenu;\n}(_react.Component);\n\nexports[\"default\"] = PrimitiveMenu;\nPrimitiveMenu.propTypes = {\n  /** The content of the PrimitiveMenu. Used to render the menuItem elements\n   * when the PrimitiveMenu is open. */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** The size of the menu. Options include xx-small, x-small, medium, or large.\n   * This value defaults to xx-small. */\n  menuSize: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\n  /** Determines the alignment of the menu relative to the trigger element.\n   * Available options are: left, center, right, bottom, bottom-left, bottom-right.\n   * This value defaults to left. */\n  menuAlignment: _propTypes[\"default\"].oneOf(['left', 'right', 'bottom', 'center', 'bottom-right', 'bottom-left']),\n\n  /** If is set to true, then is showed a loading symbol. */\n  isLoading: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** The trigger element. */\n  trigger: _propTypes[\"default\"].func.isRequired\n};\nPrimitiveMenu.defaultProps = {\n  children: null,\n  menuSize: 'xx-small',\n  menuAlignment: 'left',\n  isLoading: false,\n  title: undefined,\n  assistiveText: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined\n};","map":null,"metadata":{},"sourceType":"script"}