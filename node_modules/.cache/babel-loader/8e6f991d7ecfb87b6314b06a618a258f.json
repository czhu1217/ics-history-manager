{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Cell;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _columns = require(\"../helpers/columns\");\n\nvar _selectableCell = _interopRequireDefault(require(\"./selectableCell\"));\n\nvar _actionsCell = _interopRequireDefault(require(\"./actionsCell\"));\n\nfunction CellValue(props) {\n  var CellComponent = props.component,\n      value = props.value,\n      rowData = props.rowData,\n      restColumnProps = props.restColumnProps;\n\n  if (CellComponent) {\n    return _react[\"default\"].createElement(CellComponent, (0, _extends2[\"default\"])({}, restColumnProps, {\n      value: value,\n      row: rowData\n    }));\n  }\n\n  return _react[\"default\"].createElement(\"span\", {\n    title: value\n  }, value);\n}\n\nCellValue.propTypes = {\n  component: _propTypes[\"default\"].func,\n  value: _propTypes[\"default\"].any,\n  rowData: _propTypes[\"default\"].object,\n  restColumnProps: _propTypes[\"default\"].object.isRequired\n};\nCellValue.defaultProps = {\n  component: undefined,\n  value: undefined,\n  rowData: {}\n};\n\nfunction Cell(props) {\n  var header = props.header,\n      component = props.component,\n      value = props.value,\n      columnType = props.columnType,\n      isFirst = props.isFirst,\n      columnChildren = props.columnChildren,\n      rowIndex = props.rowIndex,\n      rowsLength = props.rowsLength,\n      rowData = props.rowData,\n      isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      tableId = props.tableId,\n      onSelectRow = props.onSelectRow,\n      onDeselectRow = props.onDeselectRow,\n      inputType = props.inputType,\n      restColumnProps = props.restColumnProps;\n\n  var getHeaderLabel = function getHeaderLabel() {\n    if (typeof header === 'string') {\n      return header;\n    }\n\n    return undefined;\n  };\n\n  if (columnType === 'action') {\n    return _react[\"default\"].createElement(_actionsCell[\"default\"], {\n      columnChildren: columnChildren,\n      rowIndex: rowIndex,\n      rowsLength: rowsLength,\n      rowData: rowData\n    });\n  }\n\n  if (columnType === _columns.SELECTABLE_CHECKBOX) {\n    return _react[\"default\"].createElement(_selectableCell[\"default\"], {\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      tableId: tableId,\n      onSelectRow: onSelectRow,\n      onDeselectRow: onDeselectRow,\n      inputType: inputType\n    });\n  }\n\n  if (isFirst) {\n    return _react[\"default\"].createElement(\"th\", {\n      className: \"rainbow-table_cell-container\",\n      scope: \"row\",\n      tabIndex: -1,\n      \"data-label\": getHeaderLabel()\n    }, _react[\"default\"].createElement(\"div\", {\n      className: \"rainbow-table_cell-content\"\n    }, _react[\"default\"].createElement(CellValue, {\n      component: component,\n      value: value,\n      rowData: rowData,\n      restColumnProps: restColumnProps\n    })));\n  }\n\n  return _react[\"default\"].createElement(\"td\", {\n    className: \"rainbow-table_cell-container\",\n    role: \"gridcell\",\n    tabIndex: -1,\n    \"data-label\": getHeaderLabel()\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"rainbow-table_cell-content\"\n  }, _react[\"default\"].createElement(CellValue, {\n    component: component,\n    value: value,\n    rowData: rowData,\n    restColumnProps: restColumnProps\n  })));\n}\n\nCell.propTypes = {\n  header: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].string]),\n  component: _propTypes[\"default\"].func,\n  value: _propTypes[\"default\"].any,\n  isFirst: _propTypes[\"default\"].bool,\n  columnType: _propTypes[\"default\"].string,\n  isSelected: _propTypes[\"default\"].bool,\n  isDisabled: _propTypes[\"default\"].bool,\n  tableId: _propTypes[\"default\"].string.isRequired,\n  onSelectRow: _propTypes[\"default\"].func,\n  onDeselectRow: _propTypes[\"default\"].func,\n  inputType: _propTypes[\"default\"].string,\n  columnChildren: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n  rowsLength: _propTypes[\"default\"].number,\n  rowIndex: _propTypes[\"default\"].number,\n  rowData: _propTypes[\"default\"].object,\n  restColumnProps: _propTypes[\"default\"].object.isRequired\n};\nCell.defaultProps = {\n  header: undefined,\n  component: undefined,\n  value: undefined,\n  isFirst: false,\n  columnType: undefined,\n  isSelected: false,\n  isDisabled: false,\n  onSelectRow: function onSelectRow() {},\n  onDeselectRow: function onDeselectRow() {},\n  inputType: 'checkbox',\n  columnChildren: undefined,\n  rowsLength: undefined,\n  rowIndex: undefined,\n  rowData: {}\n};","map":null,"metadata":{},"sourceType":"script"}