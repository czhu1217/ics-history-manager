{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _menuItem = _interopRequireDefault(require(\"./menuItem\"));\n\nvar _searchIcon = _interopRequireDefault(require(\"../icons/searchIcon\"));\n\nrequire(\"./styles.css\");\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nfunction MenuItems(props) {\n  var items = props.items,\n      _onClick = props.onClick,\n      focusedItemIndex = props.focusedItemIndex,\n      onHover = props.onHover;\n  return items.map(function (item, index) {\n    var label = item.label,\n        description = item.description,\n        icon = item.icon,\n        type = item.type;\n    var isActive = index === focusedItemIndex;\n    var key = \"lookup-item-\".concat(index);\n\n    if (type === 'header') {\n      return _react[\"default\"].createElement(\"li\", {\n        key: key,\n        className: \"rainbow-lookup_menu-item_header\",\n        role: \"separator\"\n      }, _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-lookup_menu-item_header-label\"\n      }, label));\n    }\n\n    return _react[\"default\"].createElement(_menuItem[\"default\"], {\n      key: key,\n      label: label,\n      description: description,\n      icon: icon,\n      isActive: isActive,\n      index: index,\n      onHover: onHover,\n      onClick: function onClick() {\n        return _onClick(item);\n      }\n    });\n  });\n}\n\nvar sizeMap = {\n  small: 160,\n  medium: 256,\n  large: 400\n};\n\nvar Options =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Options, _React$PureComponent);\n\n  function Options(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Options);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Options).call(this, props));\n    _this.containerRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Options, [{\n    key: \"getMaxHeight\",\n    value: function getMaxHeight() {\n      var size = this.props.size;\n      return sizeMap[size] || sizeMap.medium;\n    }\n  }, {\n    key: \"getRef\",\n    value: function getRef() {\n      return this.containerRef.current;\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(offset) {\n      this.containerRef.current.scrollTo(0, offset);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          value = _this$props.value,\n          onSelectOption = _this$props.onSelectOption,\n          onHoverOption = _this$props.onHoverOption,\n          focusedItemIndex = _this$props.focusedItemIndex,\n          itemHeight = _this$props.itemHeight;\n\n      if (items.length === 0) {\n        return _react[\"default\"].createElement(\"div\", {\n          className: \"rainbow-lookup_options-container rainbow-lookup_options-container--empty\"\n        }, _react[\"default\"].createElement(_searchIcon[\"default\"], {\n          className: \"rainbow-lookup_options-empty-message_search-icon\"\n        }), _react[\"default\"].createElement(\"span\", {\n          className: \"rainbow-lookup_options-empty-message\"\n        }, \"Our robots did not find any match for\", _react[\"default\"].createElement(\"span\", {\n          className: \"rainbow-lookup_options-empty-message_match-value\"\n        }, \" \\\"\".concat(value, \"\\\"\"))));\n      }\n\n      var resultContainerStyles = {\n        height: itemHeight * items.length + 17,\n        maxHeight: this.getMaxHeight()\n      };\n      return _react[\"default\"].createElement(\"ul\", {\n        className: \"rainbow-lookup_options-container\",\n        style: resultContainerStyles,\n        ref: this.containerRef,\n        role: \"presentation\",\n        onMouseDown: preventDefault\n      }, _react[\"default\"].createElement(MenuItems, {\n        items: items,\n        focusedItemIndex: focusedItemIndex,\n        onClick: onSelectOption,\n        onHover: onHoverOption\n      }));\n    }\n  }]);\n  return Options;\n}(_react[\"default\"].PureComponent);\n\nexports[\"default\"] = Options;\nOptions.propTypes = {\n  items: _propTypes[\"default\"].array,\n  value: _propTypes[\"default\"].string,\n  onSelectOption: _propTypes[\"default\"].func,\n  onHoverOption: _propTypes[\"default\"].func,\n  focusedItemIndex: _propTypes[\"default\"].number,\n  itemHeight: _propTypes[\"default\"].number.isRequired,\n  size: _propTypes[\"default\"].oneOf(['small', 'medium', 'large'])\n};\nOptions.defaultProps = {\n  items: [],\n  value: undefined,\n  onSelectOption: function onSelectOption() {},\n  onHoverOption: function onHoverOption() {},\n  focusedItemIndex: undefined,\n  size: 'medium'\n};","map":null,"metadata":{},"sourceType":"script"}