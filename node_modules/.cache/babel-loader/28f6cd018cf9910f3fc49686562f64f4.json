{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = GoogleAddressLookup;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactAsyncScriptLoader = _interopRequireDefault(require(\"react-async-script-loader\"));\n\nvar _component = _interopRequireDefault(require(\"./component\"));\n\nvar CustomPropTypes = _interopRequireWildcard(require(\"./proptypes\"));\n/**\n * The GoogleAddressLookup component is used to find a location.\n * @category Form\n */\n\n\nfunction GoogleAddressLookup(props) {\n  var apiKey = props.apiKey,\n      rest = (0, _objectWithoutProperties2[\"default\"])(props, [\"apiKey\"]);\n  var Component = (0, _reactAsyncScriptLoader[\"default\"])(\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey, \"&libraries=places\"))(_component[\"default\"]);\n  return _react[\"default\"].createElement(Component, rest);\n}\n\nGoogleAddressLookup.propTypes = {\n  /** The application's API key. To use the Google Maps JavaScript API,\n   * you must get an API Key. See https://console.cloud.google.com/google/maps-apis/overview\n   * to get an API Key. */\n  apiKey: _propTypes[\"default\"].string.isRequired,\n\n  /** Text label for the component. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n\n  /** A boolean to hide the component label. */\n  hideLabel: _propTypes[\"default\"].bool,\n\n  /** Specifies the selected value of the component. */\n  value: _propTypes[\"default\"].oneOfType([CustomPropTypes.predictionShape, CustomPropTypes.placeDetailsShape, _propTypes[\"default\"].string]),\n\n  /** The name of the component. */\n  name: _propTypes[\"default\"].string,\n\n  /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */\n  placeholder: _propTypes[\"default\"].string,\n\n  /** Specifies that the component must be filled out before submitting the form.\n   * This value defaults to false. */\n  required: _propTypes[\"default\"].bool,\n\n  /** Specifies that the component is read-only. This value defaults to false. */\n  readOnly: _propTypes[\"default\"].bool,\n\n  /** Specifies that the component must be filled out before submitting the form. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that the component element should be disabled. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /**  The action triggered when click/select an option. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /**\n   * An object with custom search options,\n   * for example:\n   *  searchOptions: {\n   *      location: {\n   *          latitude: -33.941264,\n   *          longitude: 151.2042969,\n   *      },\n   *      country: 'us',\n   *      radius: 150000,\n   *      types: ['address'],\n   *  }\n   */\n  searchOptions: CustomPropTypes.searchOptionsShape\n};\nGoogleAddressLookup.defaultProps = {\n  apiKey: undefined,\n  value: undefined,\n  name: undefined,\n  placeholder: null,\n  required: false,\n  error: null,\n  disabled: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  tabIndex: undefined,\n  label: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  hideLabel: false,\n  searchOptions: {}\n};","map":null,"metadata":{},"sourceType":"script"}