{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Notification;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _closeIcon = _interopRequireDefault(require(\"./closeIcon\"));\n\nvar _ButtonIcon = _interopRequireDefault(require(\"./../ButtonIcon\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _icons = _interopRequireDefault(require(\"./icons\"));\n\nvar _title = _interopRequireDefault(require(\"./title\"));\n\nvar _description = _interopRequireDefault(require(\"./description\"));\n\nrequire(\"./styles.css\");\n/**\n * Notifications serve as a confirmation mechanism & feedback that comes into the page at the top.\n */\n\n\nfunction Notification(props) {\n  var className = props.className,\n      style = props.style,\n      icon = props.icon,\n      title = props.title,\n      description = props.description,\n      onRequestClose = props.onRequestClose,\n      hideCloseButton = props.hideCloseButton;\n\n  function getClassName() {\n    return (0, _classnames[\"default\"])('rainbow-notification', className);\n  }\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: getClassName(),\n    style: style\n  }, _react[\"default\"].createElement(\"a\", {\n    className: \"rainbow-notification_anchor\"\n  }, _react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: !!icon\n  }, _react[\"default\"].createElement(_icons[\"default\"], {\n    icon: icon\n  })), _react[\"default\"].createElement(\"span\", null, _react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: !!title\n  }, _react[\"default\"].createElement(_title[\"default\"], {\n    text: title\n  })), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: !!description\n  }, _react[\"default\"].createElement(_description[\"default\"], {\n    text: description\n  })))), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: !hideCloseButton\n  }, _react[\"default\"].createElement(_ButtonIcon[\"default\"], {\n    className: \"rainbow-notification_close\",\n    icon: _react[\"default\"].createElement(_closeIcon[\"default\"], null),\n    size: \"small\",\n    title: \"Close\",\n    onClick: onRequestClose\n  })));\n}\n\nNotification.propTypes = {\n  /** The icon to show if it is passed. It is displayed in the left of the component.\n   * It must be one of this values info, success, warning, error,\n   * or any svg icon. */\n  icon: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].oneOf(['info', 'success', 'warning', 'error'])]),\n\n  /** The title that appears in the notification. */\n  title: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The description that appears in the notification. */\n  description: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The action triggered when the close button is clicked. */\n  onRequestClose: _propTypes[\"default\"].func,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** If true, hide the close button in the notification */\n  hideCloseButton: _propTypes[\"default\"].bool\n};\nNotification.defaultProps = {\n  icon: null,\n  title: null,\n  description: null,\n  onRequestClose: function onRequestClose() {},\n  className: undefined,\n  style: undefined,\n  hideCloseButton: false\n};","map":null,"metadata":{},"sourceType":"script"}