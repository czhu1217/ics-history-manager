{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ProgressBar;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _AssistiveText = _interopRequireDefault(require(\"./../AssistiveText\"));\n\nvar _normalizeValue = _interopRequireDefault(require(\"./normalizeValue\"));\n\nrequire(\"./styles.css\");\n/**\n * Progress bar component communicates to the user the progress of a particular process.\n */\n\n\nfunction ProgressBar(props) {\n  var className = props.className,\n      style = props.style,\n      assistiveText = props.assistiveText,\n      value = props.value,\n      size = props.size,\n      variant = props.variant;\n\n  var getContainerClassNames = function getContainerClassNames() {\n    return (0, _classnames[\"default\"])('rainbow-progress-bar', \"rainbow-progress-bar--\".concat(size), {\n      'rainbow-progress-bar--success': variant === 'success'\n    }, className);\n  };\n\n  var getProgressBarClassNames = function getProgressBarClassNames() {\n    return (0, _classnames[\"default\"])('rainbow-progress-bar_value', {\n      'rainbow-progress-bar_value--success': variant === 'success'\n    });\n  };\n\n  var normalizedValue = (0, _normalizeValue[\"default\"])(value);\n  var WIDTH = {\n    width: \"\".concat(normalizedValue, \"%\")\n  };\n  return _react[\"default\"].createElement(\"div\", {\n    className: getContainerClassNames(),\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": normalizedValue,\n    role: \"progressbar\",\n    style: style\n  }, _react[\"default\"].createElement(\"span\", {\n    className: getProgressBarClassNames(),\n    style: WIDTH\n  }, _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n    text: assistiveText\n  })));\n}\n\nProgressBar.propTypes = {\n  /** The percentage value of the progress bar. It must be between 0 and 100. */\n  value: _propTypes[\"default\"].number,\n\n  /** The size of the progress bar. Valid values are x-small, small, medium, and large.\n   * The default value is medium. */\n  size: _propTypes[\"default\"].oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /** The variant of the progress bar. Valid values are brand and success. */\n  variant: _propTypes[\"default\"].oneOf(['brand', 'success']),\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nProgressBar.defaultProps = {\n  value: 0,\n  size: 'medium',\n  variant: 'brand',\n  assistiveText: '',\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}