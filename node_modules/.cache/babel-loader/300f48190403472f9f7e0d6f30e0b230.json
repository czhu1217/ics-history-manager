{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ButtonGroup;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nrequire(\"./styles.css\");\n/**\n * Button groups are used to bunch together buttons with similar actions\n */\n\n\nfunction ButtonGroup(props) {\n  var className = props.className,\n      style = props.style,\n      children = props.children;\n\n  var getContainerClassName = function getContainerClassName() {\n    return (0, _classnames[\"default\"])('rainbow-button-group', className);\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: getContainerClassName(),\n    style: style,\n    role: \"group\"\n  }, children);\n}\n\nButtonGroup.propTypes = {\n  /** The content of the ButtonGroup.\n   * Accepted childrens include Button, ButtonIcon and ButtonMenu. */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nButtonGroup.defaultProps = {\n  children: null,\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}