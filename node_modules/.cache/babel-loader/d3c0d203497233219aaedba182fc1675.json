{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _AssistiveText = _interopRequireDefault(require(\"../../AssistiveText\"));\n/* eslint-disable no-script-url */\n\n\nfunction getAssistiveText(header) {\n  if (typeof header === 'string') {\n    return \"\".concat(header, \" Tab\");\n  }\n\n  return undefined;\n}\n\nvar Indicator =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Indicator, _Component);\n\n  function Indicator(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Indicator);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Indicator).call(this, props));\n    _this.indicatorRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Indicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          onCreate = _this$props.onCreate,\n          indicatorID = _this$props.indicatorID;\n      onCreate({\n        indicatorID: indicatorID,\n        ref: this.indicatorRef\n      });\n    }\n  }, {\n    key: \"getIndicatorClassName\",\n    value: function getIndicatorClassName(id) {\n      return (0, _classnames[\"default\"])('rainbow-carousel_indicator', {\n        'rainbow-carousel_indicator--active': this.isSelected(id)\n      });\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex(id) {\n      if (this.isSelected(id)) {\n        return 0;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(id) {\n      var selectedItem = this.props.selectedItem;\n      return selectedItem === id;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          indicatorID = _this$props2.indicatorID,\n          containerID = _this$props2.containerID,\n          header = _this$props2.header,\n          onSelect = _this$props2.onSelect;\n      var assistiveText = getAssistiveText(header);\n      return _react[\"default\"].createElement(\"li\", {\n        className: \"rainbow-carousel_indicators-container\",\n        role: \"presentation\",\n        key: indicatorID\n      }, _react[\"default\"].createElement(\"a\", {\n        id: indicatorID,\n        className: this.getIndicatorClassName(indicatorID),\n        href: \"javascript:void(0);\",\n        role: \"tab\",\n        tabIndex: this.getTabIndex(indicatorID),\n        \"aria-selected\": this.isSelected(indicatorID),\n        \"aria-controls\": containerID,\n        title: assistiveText,\n        onClick: function onClick() {\n          return onSelect(indicatorID);\n        },\n        ref: this.indicatorRef\n      }, _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n        text: assistiveText\n      })));\n    }\n  }]);\n  return Indicator;\n}(_react.Component);\n\nexports[\"default\"] = Indicator;\nIndicator.propTypes = {\n  indicatorID: _propTypes[\"default\"].string,\n  containerID: _propTypes[\"default\"].string,\n  header: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n  onSelect: _propTypes[\"default\"].func,\n  onCreate: _propTypes[\"default\"].func,\n  selectedItem: _propTypes[\"default\"].string\n};\nIndicator.defaultProps = {\n  indicatorID: undefined,\n  containerID: undefined,\n  header: undefined,\n  onSelect: function onSelect() {},\n  onCreate: function onCreate() {},\n  selectedItem: undefined\n};","map":null,"metadata":{},"sourceType":"script"}