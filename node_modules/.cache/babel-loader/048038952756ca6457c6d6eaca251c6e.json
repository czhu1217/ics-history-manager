{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./../../libs/utils\");\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _label = _interopRequireDefault(require(\"./label\"));\n\nrequire(\"./style.css\");\n/**\n * An input range slider lets the user specify a numeric value which must be between\n * two specified values.\n * @category Form\n */\n\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Slider);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Slider).call(this, props));\n    _this.sliderId = (0, _utils.uniqueId)('slider-id');\n    _this.errorMessageId = (0, _utils.uniqueId)('error-message');\n    _this.sliderRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Slider, [{\n    key: \"getAriaDescribedBy\",\n    value: function getAriaDescribedBy() {\n      var error = this.props.error;\n\n      if (error) {\n        return this.errorMessageId;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getContainerClassName\",\n    value: function getContainerClassName() {\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-slider_container', className);\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.sliderRef.current.click();\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.sliderRef.current.focus();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.sliderRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          value = _this$props.value,\n          name = _this$props.name,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step,\n          error = _this$props.error,\n          disabled = _this$props.disabled,\n          onBlur = _this$props.onBlur,\n          onChange = _this$props.onChange,\n          onClick = _this$props.onClick,\n          onFocus = _this$props.onFocus,\n          style = _this$props.style,\n          hideLabel = _this$props.hideLabel;\n      return _react[\"default\"].createElement(\"div\", {\n        className: this.getContainerClassName(),\n        style: style\n      }, _react[\"default\"].createElement(_label[\"default\"], {\n        label: label,\n        hideLabel: hideLabel,\n        sliderId: this.sliderId\n      }), _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-slider\"\n      }, _react[\"default\"].createElement(\"input\", {\n        id: this.sliderId,\n        className: \"rainbow-slider_range\",\n        type: \"range\",\n        name: name,\n        value: value,\n        min: min,\n        max: max,\n        step: step,\n        \"aria-describedby\": this.getAriaDescribedBy(),\n        disabled: disabled,\n        onClick: onClick,\n        onChange: onChange,\n        onBlur: onBlur,\n        onFocus: onFocus,\n        ref: this.sliderRef\n      }), _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-slider_value\",\n        \"aria-hidden\": true\n      }, value)), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!error\n      }, _react[\"default\"].createElement(\"div\", {\n        id: this.errorMessageId,\n        className: \"rainbow-slider_error\"\n      }, error)));\n    }\n  }]);\n  return Slider;\n}(_react.Component);\n\nexports[\"default\"] = Slider;\nSlider.propTypes = {\n  /** The text label for the slider. Provide your own label to describe the slider.\n   * Otherwise, no label is displayed. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n\n  /** A boolean to hide the slider label */\n  hideLabel: _propTypes[\"default\"].bool,\n\n  /** The numerical value of the slider. This value defaults to 0. */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  name: _propTypes[\"default\"].string,\n\n  /** The min value of the slider. This value defaults to 0. */\n  min: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /** The max value of the slider. This value defaults to 100. */\n  max: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /** The step increment value of the slider. Example steps include 0.1, 1, or 10.\n   * This value defaults to 1. */\n  step: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /** Specifies that the slider element must have a value selected before submitting the form. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that the slider element should be disabled. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The action triggered when a value attribute changes. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nSlider.defaultProps = {\n  label: null,\n  value: undefined,\n  name: undefined,\n  min: 0,\n  max: 100,\n  step: 1,\n  error: undefined,\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  className: undefined,\n  style: null,\n  hideLabel: false\n};","map":null,"metadata":{},"sourceType":"script"}