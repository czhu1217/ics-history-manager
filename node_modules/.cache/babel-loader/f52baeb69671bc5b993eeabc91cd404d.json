{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Day;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction Day(props) {\n  var date = props.date,\n      firstDayMonth = props.firstDayMonth,\n      isSelected = props.isSelected,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      onChange = props.onChange;\n  var day = date.getDate();\n  var isAdjacentDate = date.getMonth() !== firstDayMonth.getMonth();\n  var isDisabled = date > maxDate || date < minDate;\n\n  if (isAdjacentDate || isDisabled) {\n    return _react[\"default\"].createElement(\"td\", {\n      className: \"rainbow-calendar_day\",\n      role: \"gridcell\",\n      \"aria-selected\": \"false\"\n    }, _react[\"default\"].createElement(\"span\", {\n      className: \"rainbow-calendar_day-adjacent\"\n    }, day));\n  }\n\n  var buttonClassNames = (0, _classnames[\"default\"])('rainbow-calendar_day-button', {\n    'rainbow-calendar_day-button--selected': isSelected\n  });\n  return _react[\"default\"].createElement(\"td\", {\n    className: \"rainbow-calendar_day\",\n    role: \"gridcell\"\n  }, _react[\"default\"].createElement(\"button\", {\n    onClick: function onClick() {\n      return onChange(new Date(date));\n    },\n    className: buttonClassNames\n  }, day));\n}\n\nDay.propTypes = {\n  date: _propTypes[\"default\"].instanceOf(Date),\n  firstDayMonth: _propTypes[\"default\"].instanceOf(Date),\n  minDate: _propTypes[\"default\"].instanceOf(Date),\n  maxDate: _propTypes[\"default\"].instanceOf(Date),\n  isSelected: _propTypes[\"default\"].bool,\n  onChange: _propTypes[\"default\"].func\n};\nDay.defaultProps = {\n  date: undefined,\n  firstDayMonth: undefined,\n  minDate: undefined,\n  maxDate: undefined,\n  isSelected: false,\n  onChange: function onChange() {}\n};","map":null,"metadata":{},"sourceType":"script"}