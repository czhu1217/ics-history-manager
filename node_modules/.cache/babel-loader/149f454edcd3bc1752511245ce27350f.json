{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Pagination = _interopRequireDefault(require(\"../Pagination\"));\n\nvar _Table = _interopRequireDefault(require(\"../Table\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _options = _interopRequireDefault(require(\"./options\"));\n\nvar _getPageItems = _interopRequireDefault(require(\"./helpers/getPageItems\"));\n\nrequire(\"./styles.css\");\n/**\n * It implement a client side pagination experience. It basically wire up the Table and\n * the Pagination component in a compose manner and keep the internal state of the active page\n * based on a new prop `pageSize`.\n * @category DataView\n */\n\n\nvar TableWithBrowserPagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(TableWithBrowserPagination, _React$Component);\n\n  function TableWithBrowserPagination(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, TableWithBrowserPagination);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(TableWithBrowserPagination).call(this, props));\n    var data = props.data,\n        pageSize = props.pageSize;\n    _this.state = {\n      activePage: 1,\n      pageItems: (0, _getPageItems[\"default\"])({\n        data: data,\n        activePage: 1,\n        pageSize: pageSize\n      })\n    };\n    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleSelectChange = _this.handleSelectChange.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.table = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(TableWithBrowserPagination, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          data = _this$props.data,\n          pageSize = _this$props.pageSize;\n\n      if (prevProps.data !== data || prevProps.pageSize !== pageSize) {\n        this.updateData();\n      }\n    }\n  }, {\n    key: \"getPaginationContainerClassNames\",\n    value: function getPaginationContainerClassNames() {\n      var paginationAlignment = this.props.paginationAlignment;\n      return (0, _classnames[\"default\"])('rainbow-table-with-browser-pagination_pagination-container', \"rainbow-table-with-browser-pagination_pagination--\".concat(paginationAlignment));\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          pageSize = _this$props2.pageSize;\n      var activePage = this.state.activePage;\n      var totalPages = Math.ceil(data.length / pageSize);\n      var nextActivePage = activePage <= totalPages ? activePage : 1;\n      this.setState({\n        activePage: nextActivePage,\n        pageItems: (0, _getPageItems[\"default\"])({\n          data: data,\n          activePage: nextActivePage,\n          pageSize: pageSize\n        })\n      });\n    }\n  }, {\n    key: \"moveToPage\",\n    value: function moveToPage(page) {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          pageSize = _this$props3.pageSize;\n      this.setState({\n        activePage: page,\n        pageItems: (0, _getPageItems[\"default\"])({\n          data: data,\n          activePage: page,\n          pageSize: pageSize\n        })\n      });\n      this.table.current.scrollTop();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, page) {\n      this.moveToPage(page);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(event) {\n      var page = Number(event.target.value);\n      this.moveToPage(page);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          style = _this$props4.style,\n          className = _this$props4.className,\n          paginationAlignment = _this$props4.paginationAlignment,\n          pageSize = _this$props4.pageSize,\n          data = _this$props4.data,\n          children = _this$props4.children,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props4, [\"style\", \"className\", \"paginationAlignment\", \"pageSize\", \"data\", \"children\"]);\n      var _this$state = this.state,\n          activePage = _this$state.activePage,\n          pageItems = _this$state.pageItems;\n      var pages = Math.ceil(data.length / pageSize);\n      var showPagination = pages > 1;\n      return _react[\"default\"].createElement(\"div\", {\n        className: className,\n        style: style\n      }, _react[\"default\"].createElement(_Table[\"default\"], (0, _extends2[\"default\"])({\n        className: \"rainbow-table-with-browser-pagination_table\",\n        data: pageItems\n      }, rest, {\n        ref: this.table\n      }), children), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: showPagination\n      }, _react[\"default\"].createElement(\"div\", {\n        className: this.getPaginationContainerClassNames()\n      }, _react[\"default\"].createElement(_Pagination[\"default\"], {\n        pages: pages,\n        activePage: activePage,\n        onChange: this.handleChange\n      }), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: pages > 6\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-table-with-browser-pagination_select-container\"\n      }, _react[\"default\"].createElement(\"select\", {\n        className: \"rainbow-table-with-browser-pagination_select\",\n        onChange: this.handleSelectChange,\n        value: activePage\n      }, _react[\"default\"].createElement(_options[\"default\"], {\n        pages: pages\n      })))))));\n    }\n  }]);\n  return TableWithBrowserPagination;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = TableWithBrowserPagination;\nTableWithBrowserPagination.propTypes = {\n  /** Determines the alignment of the pagination relative to the container.\n   * Available options are: center, left, and right.\n   * This value defaults to center. */\n  paginationAlignment: _propTypes[\"default\"].oneOf(['center', 'left', 'right']),\n\n  /** Indicates the amount of data that will be showed per page. */\n  pageSize: _propTypes[\"default\"].number,\n\n  /** An array containing the objects(rows) to be displayed. */\n  data: _propTypes[\"default\"].array,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nTableWithBrowserPagination.defaultProps = {\n  paginationAlignment: 'center',\n  className: undefined,\n  style: undefined,\n  pageSize: Infinity,\n  data: []\n};","map":null,"metadata":{},"sourceType":"script"}