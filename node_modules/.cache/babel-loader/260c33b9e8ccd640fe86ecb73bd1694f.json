{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = AssignFieldModal;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Modal = _interopRequireDefault(require(\"../../Modal\"));\n\nvar _Select = _interopRequireDefault(require(\"../../Select\"));\n\nvar _getFileFieldsOptions = _interopRequireDefault(require(\"../helpers/getFileFieldsOptions\"));\n\nvar _assignFieldModalFooter = _interopRequireDefault(require(\"./assignFieldModalFooter\"));\n\nvar _selectedFieldsToAssign = _interopRequireDefault(require(\"./selectedFieldsToAssign\"));\n\nvar _preview = _interopRequireDefault(require(\"./preview\"));\n\nfunction AssignFieldModal(props) {\n  var isAssignFieldModalOpen = props.isAssignFieldModalOpen,\n      onRequestClose = props.onRequestClose,\n      columns = props.columns,\n      databaseFieldToAssign = props.databaseFieldToAssign,\n      onAssignField = props.onAssignField,\n      fieldsMap = props.fieldsMap,\n      data = props.data,\n      attributes = props.attributes;\n  var modalTitle = \"Assign to the field: \".concat(databaseFieldToAssign);\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      fileFieldsOptions = _useState2[0],\n      setFileFieldsOptions = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    if (fieldsMap[databaseFieldToAssign]) {\n      var options = columns.filter(function (item) {\n        return !fieldsMap[databaseFieldToAssign].split(',').includes(item);\n      });\n      return setFileFieldsOptions((0, _getFileFieldsOptions[\"default\"])(options));\n    }\n\n    return setFileFieldsOptions((0, _getFileFieldsOptions[\"default\"])(columns));\n  }, [columns, databaseFieldToAssign, fieldsMap, isAssignFieldModalOpen]);\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      fileFieldsToAssign = _useState4[0],\n      setFileFieldsToAssign = _useState4[1];\n\n  var isAssignButtonDisabled = fileFieldsToAssign.length === 0;\n  (0, _react.useEffect)(function () {\n    if (fieldsMap[databaseFieldToAssign]) {\n      return setFileFieldsToAssign(fieldsMap[databaseFieldToAssign].split(','));\n    }\n\n    return setFileFieldsToAssign([]);\n  }, [fieldsMap, databaseFieldToAssign, isAssignFieldModalOpen]);\n\n  var handleAssign = function handleAssign() {\n    onRequestClose();\n    onAssignField(databaseFieldToAssign, fileFieldsToAssign);\n  };\n\n  var selectFileField = function selectFileField(event) {\n    var value = event.target.value;\n    setFileFieldsOptions(fileFieldsOptions.filter(function (field) {\n      return field.value !== value;\n    }));\n    setFileFieldsToAssign([].concat((0, _toConsumableArray2[\"default\"])(fileFieldsToAssign), [value]));\n  };\n\n  var deleteFileField = function deleteFileField(value) {\n    setFileFieldsOptions([].concat((0, _toConsumableArray2[\"default\"])(fileFieldsOptions), [{\n      label: value,\n      value: value\n    }]));\n    setFileFieldsToAssign(fileFieldsToAssign.filter(function (field) {\n      return field !== value;\n    }));\n  };\n\n  var getModalContainerClassNames = function getModalContainerClassNames() {\n    return (0, _classnames[\"default\"])({\n      'rainbow-import-records-flow_step-three-assign-field-modal-content': !fileFieldsToAssign.length\n    });\n  };\n\n  return _react[\"default\"].createElement(_Modal[\"default\"], {\n    title: modalTitle,\n    isOpen: isAssignFieldModalOpen,\n    size: \"small\",\n    onRequestClose: onRequestClose,\n    footer: _react[\"default\"].createElement(_assignFieldModalFooter[\"default\"], {\n      onCancel: onRequestClose,\n      onAssign: handleAssign,\n      isAssignButtonDisabled: isAssignButtonDisabled\n    })\n  }, _react[\"default\"].createElement(\"div\", {\n    className: getModalContainerClassNames()\n  }, _react[\"default\"].createElement(_Select[\"default\"], {\n    className: \"rainbow-import-records-flow_step-three-field-select\",\n    label: \"Select Field To Assign\",\n    options: fileFieldsOptions,\n    onChange: selectFileField,\n    value: \"default\"\n  }), _react[\"default\"].createElement(_selectedFieldsToAssign[\"default\"], {\n    values: fileFieldsToAssign,\n    onDelete: deleteFileField\n  }), _react[\"default\"].createElement(_preview[\"default\"], {\n    field: databaseFieldToAssign,\n    fileFields: fileFieldsToAssign,\n    data: data,\n    attributes: attributes\n  })));\n}\n\nAssignFieldModal.propTypes = {\n  isAssignFieldModalOpen: _propTypes[\"default\"].bool,\n  onRequestClose: _propTypes[\"default\"].func,\n  columns: _propTypes[\"default\"].array,\n  databaseFieldToAssign: _propTypes[\"default\"].string,\n  onAssignField: _propTypes[\"default\"].func,\n  fieldsMap: _propTypes[\"default\"].object,\n  data: _propTypes[\"default\"].array,\n  attributes: _propTypes[\"default\"].object.isRequired\n};\nAssignFieldModal.defaultProps = {\n  isAssignFieldModalOpen: false,\n  onRequestClose: function onRequestClose() {},\n  columns: [],\n  databaseFieldToAssign: '',\n  onAssignField: function onAssignField() {},\n  fieldsMap: {},\n  data: []\n};","map":null,"metadata":{},"sourceType":"script"}