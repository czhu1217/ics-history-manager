{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withReduxForm = _interopRequireDefault(require(\"./../../libs/hocs/withReduxForm\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _RequiredAsterisk = _interopRequireDefault(require(\"../RequiredAsterisk\"));\n\nvar _utils = require(\"./../../libs/utils\");\n\nvar _context = require(\"./context\");\n\nrequire(\"./styles.css\");\n/**\n * A VisualPicker can be either radio buttons, checkboxes, or links that are visually enhanced.\n * @category Form\n */\n\n\nvar VisualPicker =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(VisualPicker, _Component);\n\n  function VisualPicker(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, VisualPicker);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(VisualPicker).call(this, props));\n    _this.errorId = (0, _utils.uniqueId)('error-message');\n    _this.groupNameId = props.name || (0, _utils.uniqueId)('visual-picker');\n    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(VisualPicker, [{\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-visual-picker_container', className);\n    }\n  }, {\n    key: \"getErrorMessageId\",\n    value: function getErrorMessageId() {\n      var error = this.props.error;\n\n      if (error) {\n        return this.errorId;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(optionName, optionChecked) {\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          multiple = _this$props.multiple,\n          value = _this$props.value;\n      var currentValue = optionName;\n\n      if (multiple) {\n        if (!Array.isArray(value)) {\n          currentValue = optionChecked ? [optionName] : [];\n        } else {\n          currentValue = optionChecked ? [].concat((0, _toConsumableArray2[\"default\"])(value), [optionName]) : value.filter(function (item) {\n            return item !== optionName;\n          });\n        }\n      }\n\n      onChange(currentValue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          label = _this$props2.label,\n          required = _this$props2.required,\n          error = _this$props2.error,\n          id = _this$props2.id,\n          children = _this$props2.children,\n          value = _this$props2.value,\n          multiple = _this$props2.multiple;\n      var context = {\n        ariaDescribedby: this.getErrorMessageId(),\n        groupName: this.groupNameId,\n        privateOnChange: this.handleChange,\n        value: value,\n        multiple: multiple\n      };\n      return _react[\"default\"].createElement(\"fieldset\", {\n        id: id,\n        className: this.getContainerClassNames(),\n        style: style\n      }, _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!label\n      }, _react[\"default\"].createElement(\"legend\", {\n        className: \"rainbow-visual-picker_label\"\n      }, _react[\"default\"].createElement(_RequiredAsterisk[\"default\"], {\n        required: required\n      }), label)), _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-visual-picker_options-container\"\n      }, _react[\"default\"].createElement(_context.Provider, {\n        value: context\n      }, children)), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!error\n      }, _react[\"default\"].createElement(\"div\", {\n        id: this.getErrorMessageId(),\n        className: \"rainbow-visual-picker_text-error\"\n      }, error)));\n    }\n  }]);\n  return VisualPicker;\n}(_react.Component);\n\nVisualPicker.propTypes = {\n  /** The name of VisualPicker. */\n  name: _propTypes[\"default\"].string,\n\n  /** The value of the element. */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** The action triggered when a value attribute changes. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** If is set to true the VisualPicker is required. This value defaults to false. */\n  required: _propTypes[\"default\"].bool,\n\n  /** The title at the top of the VisualPicker component. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an VisualPicker must be filled out before submitting the form. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The class name of the root element. */\n  className: _propTypes[\"default\"].string,\n\n  /** It is an object with custom style applied to the root element. */\n  style: _propTypes[\"default\"].object,\n\n  /**\n   * This prop that should not be visible in the documentation.\n   * @ignore\n   */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** If true then a multiple selection is allowed */\n  multiple: _propTypes[\"default\"].bool\n};\nVisualPicker.defaultProps = {\n  name: null,\n  value: undefined,\n  id: undefined,\n  onChange: function onChange() {},\n  required: false,\n  label: '',\n  error: null,\n  className: undefined,\n  style: undefined,\n  children: [],\n  multiple: false\n};\n\nvar _default = (0, _withReduxForm[\"default\"])(VisualPicker);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}