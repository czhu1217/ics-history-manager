{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames2 = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./../../../libs/utils\");\n\nvar _label = _interopRequireDefault(require(\"./label\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../../RenderIf\"));\n\nrequire(\"./styles.css\");\n\nvar InputBase =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(InputBase, _Component);\n\n  function InputBase(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, InputBase);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(InputBase).call(this, props));\n    _this.inputId = (0, _utils.uniqueId)('input');\n    _this.inlineTextLabelId = (0, _utils.uniqueId)('inline-text-label');\n    _this.errorMessageId = (0, _utils.uniqueId)('error-message');\n    _this.inputRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(InputBase, [{\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          error = _this$props.error,\n          readOnly = _this$props.readOnly;\n      return (0, _classnames2[\"default\"])('rainbow-input_container', {\n        'rainbow-input--read-only': readOnly,\n        'rainbow-input--error': error\n      }, className);\n    }\n  }, {\n    key: \"getIconPositionClassNames\",\n    value: function getIconPositionClassNames() {\n      var _this$props2 = this.props,\n          icon = _this$props2.icon,\n          iconPosition = _this$props2.iconPosition;\n      return (0, _classnames2[\"default\"])((0, _defineProperty2[\"default\"])({\n        'rainbow-input_icon-container': icon\n      }, \"rainbow-input_icon--\".concat(iconPosition), icon));\n    }\n  }, {\n    key: \"getInputClassNames\",\n    value: function getInputClassNames() {\n      var _this$props3 = this.props,\n          isBare = _this$props3.isBare,\n          isCentered = _this$props3.isCentered;\n      return (0, _classnames2[\"default\"])('rainbow-input', {\n        'rainbow-input_bare': isBare,\n        'rainbow-input_counter': isCentered\n      });\n    }\n  }, {\n    key: \"getInlineTextLabelId\",\n    value: function getInlineTextLabelId() {\n      var bottomHelpText = this.props.bottomHelpText;\n\n      if (bottomHelpText) {\n        return this.inlineTextLabelId;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getErrorMessageId\",\n    value: function getErrorMessageId() {\n      var error = this.props.error;\n\n      if (error) {\n        return this.errorMessageId;\n      }\n\n      return undefined;\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.inputRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.inputRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          style = _this$props4.style,\n          value = _this$props4.value,\n          label = _this$props4.label,\n          error = _this$props4.error,\n          placeholder = _this$props4.placeholder,\n          onChange = _this$props4.onChange,\n          disabled = _this$props4.disabled,\n          readOnly = _this$props4.readOnly,\n          tabIndex = _this$props4.tabIndex,\n          onFocus = _this$props4.onFocus,\n          onBlur = _this$props4.onBlur,\n          onClick = _this$props4.onClick,\n          onKeyDown = _this$props4.onKeyDown,\n          type = _this$props4.type,\n          maxLength = _this$props4.maxLength,\n          minLength = _this$props4.minLength,\n          pattern = _this$props4.pattern,\n          icon = _this$props4.icon,\n          bottomHelpText = _this$props4.bottomHelpText,\n          required = _this$props4.required,\n          id = _this$props4.id,\n          autoComplete = _this$props4.autoComplete,\n          name = _this$props4.name,\n          hideLabel = _this$props4.hideLabel;\n      return _react[\"default\"].createElement(\"div\", {\n        id: id,\n        className: this.getContainerClassNames(),\n        style: style\n      }, _react[\"default\"].createElement(_label[\"default\"], {\n        label: label,\n        hideLabel: hideLabel,\n        required: required,\n        inputId: this.inputId,\n        readOnly: readOnly,\n        id: this.getInlineTextLabelId()\n      }), _react[\"default\"].createElement(\"div\", {\n        className: this.getIconPositionClassNames()\n      }, _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!icon\n      }, _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-input_icon\"\n      }, icon)), _react[\"default\"].createElement(\"input\", {\n        id: this.inputId,\n        name: name,\n        type: type,\n        className: this.getInputClassNames(),\n        value: value,\n        placeholder: placeholder,\n        onChange: onChange,\n        tabIndex: tabIndex,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        onKeyDown: onKeyDown,\n        disabled: disabled,\n        readOnly: readOnly,\n        required: required,\n        maxLength: maxLength,\n        minLength: minLength,\n        pattern: pattern,\n        autoComplete: autoComplete,\n        \"aria-labelledby\": this.getInlineTextLabelId(),\n        \"aria-describedby\": this.getErrorMessageId(),\n        ref: this.inputRef\n      })), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!bottomHelpText\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-input_help\"\n      }, bottomHelpText)), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!error\n      }, _react[\"default\"].createElement(\"div\", {\n        id: this.getErrorMessageId(),\n        className: \"rainbow-input_error\"\n      }, error)));\n    }\n  }]);\n  return InputBase;\n}(_react.Component);\n\nexports[\"default\"] = InputBase;\nInputBase.propTypes = {\n  value: _propTypes[\"default\"].string,\n  name: _propTypes[\"default\"].string,\n  type: _propTypes[\"default\"].oneOf(['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color']),\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n  placeholder: _propTypes[\"default\"].string,\n  icon: _propTypes[\"default\"].node,\n  iconPosition: _propTypes[\"default\"].oneOf(['left', 'right']),\n  maxLength: _propTypes[\"default\"].number,\n  minLength: _propTypes[\"default\"].number,\n  bottomHelpText: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n  required: _propTypes[\"default\"].bool,\n  pattern: _propTypes[\"default\"].string,\n  isCentered: _propTypes[\"default\"].bool,\n  isBare: _propTypes[\"default\"].bool,\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n  disabled: _propTypes[\"default\"].bool,\n  readOnly: _propTypes[\"default\"].bool,\n  onChange: _propTypes[\"default\"].func,\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  onClick: _propTypes[\"default\"].func,\n  onFocus: _propTypes[\"default\"].func,\n  onBlur: _propTypes[\"default\"].func,\n  onKeyDown: _propTypes[\"default\"].func,\n  className: _propTypes[\"default\"].string,\n  style: _propTypes[\"default\"].object,\n  id: _propTypes[\"default\"].string,\n  autoComplete: _propTypes[\"default\"].string,\n  hideLabel: _propTypes[\"default\"].bool\n};\nInputBase.defaultProps = {\n  value: undefined,\n  name: undefined,\n  type: 'text',\n  placeholder: null,\n  icon: undefined,\n  iconPosition: 'left',\n  maxLength: undefined,\n  minLength: undefined,\n  bottomHelpText: null,\n  required: false,\n  pattern: undefined,\n  isCentered: false,\n  isBare: false,\n  error: null,\n  disabled: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onKeyDown: function onKeyDown() {},\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  autoComplete: 'on',\n  hideLabel: false\n};","map":null,"metadata":{},"sourceType":"script"}