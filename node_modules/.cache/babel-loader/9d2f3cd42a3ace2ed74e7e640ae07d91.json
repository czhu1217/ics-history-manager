{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Tab;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _context = require(\"../Tabset/context\");\n\nrequire(\"./styles.css\");\n/* eslint-disable no-script-url, react/prop-types */\n\n\nvar TabItem =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(TabItem, _Component);\n\n  function TabItem(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, TabItem);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(TabItem).call(this, props));\n    _this.tabRef = _react[\"default\"].createRef();\n    _this.handleSelect = _this.handleSelect.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(TabItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          privateRegisterTab = _this$props.privateRegisterTab,\n          name = _this$props.name,\n          disabled = _this$props.disabled;\n\n      if (!disabled) {\n        setTimeout(function () {\n          return privateRegisterTab({\n            name: name,\n            ref: _this2.tabRef.current\n          });\n        }, 0);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var prevName = _ref.name;\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          privateUpdateTab = _this$props2.privateUpdateTab;\n\n      if (name !== prevName) {\n        privateUpdateTab({\n          name: name,\n          ref: this.tabRef.current\n        }, prevName);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props3 = this.props,\n          privateUnRegisterTab = _this$props3.privateUnRegisterTab,\n          name = _this$props3.name;\n      privateUnRegisterTab(name);\n    }\n  }, {\n    key: \"getContainerClassName\",\n    value: function getContainerClassName() {\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          fullWidth = _this$props4.fullWidth;\n      return (0, _classnames[\"default\"])('rainbow-tab', {\n        'rainbow-tab--full-width': fullWidth,\n        'rainbow-tab--active': this.isSelected()\n      }, className);\n    }\n  }, {\n    key: \"getTabClassName\",\n    value: function getTabClassName() {\n      var _this$props5 = this.props,\n          disabled = _this$props5.disabled,\n          fullWidth = _this$props5.fullWidth;\n      return (0, _classnames[\"default\"])('rainbow-tab_anchor', {\n        'rainbow-tab--active': this.isSelected(),\n        'rainbow-tab--disabled': disabled,\n        'rainbow-tab--full-width': fullWidth\n      });\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex() {\n      if (this.isSelected()) {\n        return 0;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(e) {\n      var _this$props6 = this.props,\n          disabled = _this$props6.disabled,\n          onSelect = _this$props6.onSelect,\n          name = _this$props6.name;\n\n      if (!disabled) {\n        onSelect(e, name);\n      }\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      var _this$props7 = this.props,\n          activeTabName = _this$props7.activeTabName,\n          name = _this$props7.name;\n      return activeTabName === name;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          label = _this$props8.label,\n          style = _this$props8.style,\n          title = _this$props8.title,\n          id = _this$props8.id,\n          ariaControls = _this$props8.ariaControls;\n      return _react[\"default\"].createElement(\"li\", {\n        className: this.getContainerClassName(),\n        style: style,\n        title: title,\n        role: \"presentation\"\n      }, _react[\"default\"].createElement(\"a\", {\n        href: \"javascript:void(0);\",\n        role: \"tab\",\n        className: this.getTabClassName(),\n        \"aria-selected\": this.isSelected(),\n        onClick: this.handleSelect,\n        tabIndex: this.getTabIndex(),\n        id: id,\n        \"aria-controls\": ariaControls,\n        ref: this.tabRef\n      }, _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-tab_anchor-inner-text\"\n      }, label)));\n    }\n  }]);\n  return TabItem;\n}(_react.Component);\n/** @category Layout */\n\n\nfunction Tab(props) {\n  return _react[\"default\"].createElement(_context.Consumer, null, function (context) {\n    return _react[\"default\"].createElement(TabItem, (0, _extends2[\"default\"])({}, props, context));\n  });\n}\n\nTab.propTypes = {\n  /** The text displayed for the tab item. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].string]),\n\n  /** The name is used during tabset's onSelect\n   * event to determine which tab was clicked. */\n  name: _propTypes[\"default\"].string.isRequired,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** Specifies whether this tab should be displayed in a disabled state.\n   * Disabled tabs can't be clicked. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** This ID is to be associated with the aria-labelledby attribute of the container\n   * that show the content of this tab. */\n  id: _propTypes[\"default\"].string,\n\n  /** This prop is associated with the id attribute of the container\n   * that show the content of this tab. */\n  ariaControls: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied for the outer element. */\n  style: _propTypes[\"default\"].object\n};\nTab.defaultProps = {\n  label: null,\n  name: undefined,\n  title: undefined,\n  disabled: false,\n  id: undefined,\n  ariaControls: undefined,\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}