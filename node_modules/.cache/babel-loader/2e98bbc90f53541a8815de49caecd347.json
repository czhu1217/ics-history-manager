{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = MenuItem;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _context = require(\"./../PrimitiveMenu/context\");\n\nvar _icon = _interopRequireDefault(require(\"./icon\"));\n\nrequire(\"./styles.css\");\n/* eslint-disable no-script-url, react/prop-types */\n\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Item, _Component);\n\n  function Item(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Item);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Item).call(this, props));\n    _this.itemRef = _react[\"default\"].createRef();\n    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleHover = _this.handleHover.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Item, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          privateRegisterChild = _this$props.privateRegisterChild,\n          disabled = _this$props.disabled,\n          variant = _this$props.variant;\n      var isHeader = variant === 'header';\n\n      if (disabled || isHeader) {\n        return null;\n      }\n\n      return setTimeout(function () {\n        return privateRegisterChild(_this2.itemRef.current);\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var privateUnregisterChild = this.props.privateUnregisterChild;\n      return privateUnregisterChild(this.itemRef.current);\n    }\n  }, {\n    key: \"getHeaderClassNames\",\n    value: function getHeaderClassNames() {\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-menu-item_header', className);\n    }\n  }, {\n    key: \"getItemClassNames\",\n    value: function getItemClassNames() {\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-menu-item', className);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          onClick = _this$props2.onClick,\n          privateOnClose = _this$props2.privateOnClose;\n\n      if (disabled) {\n        return null;\n      }\n\n      onClick(event);\n      return privateOnClose();\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(event) {\n      var _this$props3 = this.props,\n          privateOnHover = _this$props3.privateOnHover,\n          disabled = _this$props3.disabled;\n\n      if (disabled) {\n        return null;\n      }\n\n      return privateOnHover(event, this.itemRef.current);\n    }\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.itemRef.current.click();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          style = _this$props4.style,\n          label = _this$props4.label,\n          title = _this$props4.title,\n          variant = _this$props4.variant,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          disabled = _this$props4.disabled;\n\n      if (variant === 'header') {\n        return _react[\"default\"].createElement(\"li\", {\n          className: this.getHeaderClassNames(),\n          style: style,\n          title: title,\n          role: \"separator\"\n        }, _react[\"default\"].createElement(\"span\", {\n          className: \"rainbow-menu-item_header-label\"\n        }, label));\n      }\n\n      var hasLeftIcon = !!(icon && iconPosition === 'left');\n      var hasRightIcon = !!(icon && iconPosition === 'right');\n      return _react[\"default\"].createElement(\"li\", {\n        className: this.getItemClassNames(),\n        style: style,\n        role: \"presentation\",\n        onClick: this.handleClick,\n        onMouseEnter: this.handleHover\n      }, _react[\"default\"].createElement(\"a\", {\n        href: \"javascript:void(0);\",\n        role: \"menuitem\",\n        \"aria-disabled\": disabled,\n        ref: this.itemRef\n      }, _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-menu-item_icon-container\",\n        title: title\n      }, _react[\"default\"].createElement(_icon[\"default\"], {\n        \"data-id\": \"menu-item-left-icon\",\n        icon: icon,\n        isVisible: hasLeftIcon,\n        position: iconPosition\n      }), label), _react[\"default\"].createElement(_icon[\"default\"], {\n        \"data-id\": \"menu-item-right-icon\",\n        icon: icon,\n        isVisible: hasRightIcon,\n        position: iconPosition\n      })));\n    }\n  }]);\n  return Item;\n}(_react.Component);\n/**\n * Represents a list item in a menu.\n */\n\n\nfunction MenuItem(props) {\n  return _react[\"default\"].createElement(_context.Consumer, null, function (values) {\n    return _react[\"default\"].createElement(Item, (0, _extends2[\"default\"])({}, props, values));\n  });\n}\n\nMenuItem.propTypes = {\n  /** Text of the menu item. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n\n  /** The variant changes the type of menu item. Accepted variants include default and header.\n   * This value defaults to default. */\n  variant: _propTypes[\"default\"].oneOf(['default', 'header']),\n\n  /** The icon to show if it is passed. It must be a svg icon or a font icon. */\n  icon: _propTypes[\"default\"].node,\n\n  /** Describes the position of the icon with respect to body. Options include left and right.\n   * This value defaults to left. */\n  iconPosition: _propTypes[\"default\"].oneOf(['left', 'right']),\n\n  /** If true the menu item is not actionable and is shown as disabled. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The action triggered when the menu item is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nMenuItem.defaultProps = {\n  label: null,\n  variant: 'default',\n  icon: null,\n  iconPosition: 'left',\n  disabled: false,\n  onClick: function onClick() {},\n  title: undefined,\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}