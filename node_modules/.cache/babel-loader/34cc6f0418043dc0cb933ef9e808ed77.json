{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _context = require(\"../Sidebar/context\");\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nrequire(\"./styles.css\");\n/* eslint-disable no-script-url, react/prop-types */\n\n/**\n * @category Layout\n */\n\n\nfunction SidebarItem(props) {\n  var label = props.label,\n      icon = props.icon,\n      name = props.name,\n      href = props.href,\n      onClick = props.onClick,\n      className = props.className,\n      style = props.style,\n      selectedItem = props.selectedItem,\n      onSelect = props.onSelect;\n  var isSelected = name === selectedItem;\n\n  var getContainerClassNames = function getContainerClassNames() {\n    return (0, _classnames[\"default\"])('rainbow-sidebar-item', {\n      'rainbow-sidebar-item--active': isSelected\n    }, className);\n  };\n\n  var getAriaCurrent = function getAriaCurrent() {\n    if (isSelected) {\n      return 'page';\n    }\n\n    return undefined;\n  };\n\n  function hanldeOnClick(event) {\n    onClick(event);\n    onSelect(event, name);\n  }\n\n  return _react[\"default\"].createElement(\"li\", {\n    className: getContainerClassNames(),\n    style: style\n  }, _react[\"default\"].createElement(\"a\", {\n    href: href,\n    onClick: hanldeOnClick,\n    className: \"rainbow-sidebar-item_action\",\n    \"aria-current\": getAriaCurrent()\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"rainbow-sidebar-item_icon\"\n  }, icon), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: !!label\n  }, _react[\"default\"].createElement(\"span\", {\n    className: \"rainbow-sidebar-item_label\"\n  }, label))));\n}\n\nSidebarItem.propTypes = {\n  /** A unique identifier for the navigation item. */\n  name: _propTypes[\"default\"].string.isRequired,\n\n  /** The text to show if it is passed. The text displayed for the SidebarItem. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The icon displayed for the SidebarItem. It must be a svg icon or a font icon. */\n  icon: _propTypes[\"default\"].node.isRequired,\n\n  /** The URL of the page that the navigation item goes to. */\n  href: _propTypes[\"default\"].string,\n\n  /** Event fired when the item is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied for the outer element. */\n  style: _propTypes[\"default\"].object\n};\nSidebarItem.defaultProps = {\n  label: '',\n  href: 'javascript:void(0);',\n  onClick: function onClick() {},\n  className: undefined,\n  style: undefined\n};\n\nvar _default = (0, _context.withContext)(SidebarItem);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}