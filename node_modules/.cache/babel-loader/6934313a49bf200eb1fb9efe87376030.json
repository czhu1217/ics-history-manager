{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withReduxForm = _interopRequireDefault(require(\"./../../libs/hocs/withReduxForm\"));\n\nvar _utils = require(\"./../../libs/utils\");\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _RequiredAsterisk = _interopRequireDefault(require(\"../RequiredAsterisk\"));\n\nvar _options = _interopRequireDefault(require(\"./options\"));\n\nrequire(\"./styles.css\");\n/**\n * Select element presents a menu of options.\n * @category Form\n */\n\n\nvar Select =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Select, _Component);\n\n  function Select(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Select);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Select).call(this, props));\n    _this.selectId = (0, _utils.uniqueId)('select');\n    _this.selectRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Select, [{\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          error = _this$props.error;\n      return (0, _classnames[\"default\"])('rainbow-select_container', {\n        'rainbow-select--error': error\n      }, className);\n    }\n  }, {\n    key: \"getLabelClassNames\",\n    value: function getLabelClassNames() {\n      var hideLabel = this.props.hideLabel;\n      return (0, _classnames[\"default\"])('rainbow-select_label', {\n        'rainbow-select_label--hide-label': hideLabel\n      });\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.selectRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.selectRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.selectRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          value = _this$props2.value,\n          onChange = _this$props2.onChange,\n          onFocus = _this$props2.onFocus,\n          onBlur = _this$props2.onBlur,\n          onClick = _this$props2.onClick,\n          error = _this$props2.error,\n          required = _this$props2.required,\n          disabled = _this$props2.disabled,\n          options = _this$props2.options,\n          style = _this$props2.style,\n          id = _this$props2.id,\n          name = _this$props2.name;\n      return _react[\"default\"].createElement(\"div\", {\n        className: this.getContainerClassNames(),\n        style: style,\n        id: id\n      }, _react[\"default\"].createElement(\"label\", {\n        className: this.getLabelClassNames(),\n        htmlFor: this.selectId\n      }, _react[\"default\"].createElement(_RequiredAsterisk[\"default\"], {\n        required: required\n      }), label), _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-select_inner-container\",\n        disabled: disabled\n      }, _react[\"default\"].createElement(\"select\", {\n        className: \"rainbow-select\",\n        id: this.selectId,\n        name: name,\n        onChange: onChange,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        value: value,\n        required: required,\n        disabled: disabled,\n        ref: this.selectRef\n      }, _react[\"default\"].createElement(_options[\"default\"], {\n        options: options\n      }))), _react[\"default\"].createElement(_RenderIf[\"default\"], {\n        isTrue: !!error\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-select_text-error\"\n      }, error)));\n    }\n  }]);\n  return Select;\n}(_react.Component);\n\nSelect.propTypes = {\n  /** Text label for the select. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n\n  /** The name of the select */\n  name: _propTypes[\"default\"].string,\n\n  /** Specifies the selected value. */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /** The action triggered when a option item is selected. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** Specifies that an input field must be filled out before submitting the form.\n   * This value defaults to false. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an input field must be filled out before submitting the form.\n   * This value defaults to false. */\n  required: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input element should be disabled. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The option items to be displayed. */\n  options: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]).isRequired,\n    value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n    disabled: _propTypes[\"default\"].bool\n  })),\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** The id of the outer element. */\n  hideLabel: _propTypes[\"default\"].bool\n};\nSelect.defaultProps = {\n  value: undefined,\n  name: undefined,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  error: null,\n  required: false,\n  disabled: false,\n  options: [],\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  hideLabel: false\n};\n\nvar _default = (0, _withReduxForm[\"default\"])(Select);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}