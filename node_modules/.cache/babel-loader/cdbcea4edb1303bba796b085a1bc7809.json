{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Row;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _columns = require(\"../helpers/columns\");\n\nvar _rows = require(\"../helpers/rows\");\n\nvar _cell = _interopRequireDefault(require(\"./cell\"));\n\nvar _loadingCells = _interopRequireDefault(require(\"./loadingCells\"));\n\nfunction isFirstAndNoSelectable(index, type) {\n  if (index === 0 && type !== _columns.SELECTABLE_CHECKBOX) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction Row(props) {\n  var rowData = props.rowData,\n      columns = props.columns,\n      isSelected = props.isSelected,\n      rest = (0, _objectWithoutProperties2[\"default\"])(props, [\"rowData\", \"columns\", \"isSelected\"]);\n\n  var getClassName = function getClassName() {\n    return (0, _classnames[\"default\"])('rainbow-table_body-row', {\n      'rainbow-table_body-row-selected': isSelected\n    });\n  };\n\n  var isFirstColumn;\n  var cells = columns.map(function (column, index) {\n    var header = column.header,\n        component = column.component,\n        field = column.field,\n        sortable = column.sortable,\n        width = column.width,\n        defaultWidth = column.defaultWidth,\n        computedWidth = column.computedWidth,\n        isResized = column.isResized,\n        columnType = column.type,\n        children = column.children,\n        restColumnProps = (0, _objectWithoutProperties2[\"default\"])(column, [\"header\", \"component\", \"field\", \"sortable\", \"width\", \"defaultWidth\", \"computedWidth\", \"isResized\", \"type\", \"children\"]);\n    var key = \"cell-\".concat(index);\n    var value = (0, _rows.getFieldValue)(rowData, field);\n    isFirstColumn = !isFirstColumn && (isFirstAndNoSelectable(index, columnType) || index === 1);\n    return _react[\"default\"].createElement(_cell[\"default\"], (0, _extends2[\"default\"])({}, rest, {\n      restColumnProps: restColumnProps,\n      key: key,\n      rowData: rowData,\n      header: header,\n      component: component,\n      value: value,\n      columnType: columnType,\n      isFirst: isFirstColumn,\n      isSelected: isSelected,\n      columnChildren: children\n    }));\n  });\n\n  if (rowData.type === 'LOADING') {\n    return _react[\"default\"].createElement(\"tr\", null, _react[\"default\"].createElement(_loadingCells[\"default\"], {\n      columns: columns,\n      value: columns.length\n    }));\n  }\n\n  return _react[\"default\"].createElement(\"tr\", {\n    tabIndex: -1,\n    \"aria-selected\": isSelected,\n    className: getClassName()\n  }, cells);\n}\n\nRow.propTypes = {\n  rowData: _propTypes[\"default\"].object,\n  columns: _propTypes[\"default\"].array,\n  isSelected: _propTypes[\"default\"].bool\n};\nRow.defaultProps = {\n  rowData: {},\n  columns: [],\n  isSelected: false\n};","map":null,"metadata":{},"sourceType":"script"}