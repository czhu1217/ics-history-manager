{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getUpdatedRowsWhenSelect;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _getStartRowKey = _interopRequireDefault(require(\"./getStartRowKey\"));\n\nvar _getCurrentSelectionLength = _interopRequireDefault(require(\"./getCurrentSelectionLength\"));\n\nvar _getRowIntervalIndexes = _interopRequireDefault(require(\"./getRowIntervalIndexes\"));\n\nvar _isSelectedRow = _interopRequireDefault(require(\"./isSelectedRow\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getUpdatedRowsWhenSelect() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var maxRowSelection = params.maxRowSelection,\n      _params$rows = params.rows,\n      rows = _params$rows === void 0 ? [] : _params$rows,\n      _params$indexes = params.indexes,\n      indexes = _params$indexes === void 0 ? {} : _params$indexes,\n      isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      lastSelectedRowKey = params.lastSelectedRowKey,\n      _params$selectedRowsK = params.selectedRowsKeys,\n      selectedRowsKeys = _params$selectedRowsK === void 0 ? {} : _params$selectedRowsK;\n\n  if (maxRowSelection > 1) {\n    var startRowKey = (0, _getStartRowKey[\"default\"])({\n      isMultiple: isMultiple,\n      rowKeyValue: rowKeyValue,\n      indexes: indexes,\n      lastSelectedRowKey: lastSelectedRowKey\n    });\n\n    var _getRowIntervalIndexe = (0, _getRowIntervalIndexes[\"default\"])({\n      indexes: indexes,\n      startRowKey: startRowKey,\n      endRowKey: rowKeyValue\n    }),\n        start = _getRowIntervalIndexe.start,\n        end = _getRowIntervalIndexe.end;\n\n    var rowsWithSelection = rows.map(function (row, index) {\n      var currentSelectionLength = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys);\n      var maxSelectionReached = currentSelectionLength >= maxRowSelection;\n\n      if (index >= start && index <= end && !maxSelectionReached) {\n        selectedRowsKeys[row.key] = true;\n        return _objectSpread({}, row, {\n          isSelected: true\n        });\n      }\n\n      return row;\n    });\n    return rowsWithSelection.map(function (row) {\n      var maxSelectionReached = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys) === maxRowSelection;\n\n      if (maxSelectionReached && !(0, _isSelectedRow[\"default\"])(selectedRowsKeys, row.key)) {\n        return _objectSpread({}, row, {\n          isDisabled: true\n        });\n      }\n\n      return row;\n    });\n  }\n\n  return rows.map(function (row) {\n    if (selectedRowsKeys[row.key]) {\n      return _objectSpread({}, row, {\n        isSelected: true\n      });\n    }\n\n    return _objectSpread({}, row, {\n      isSelected: false\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script"}