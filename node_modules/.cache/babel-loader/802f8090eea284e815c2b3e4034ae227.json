{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = SelectableCell;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\n\nvar _constants = require(\"../../../libs/constants\");\n\nfunction SelectableCell(props) {\n  var isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      tableId = props.tableId,\n      onSelectRow = props.onSelectRow,\n      onDeselectRow = props.onDeselectRow,\n      inputType = props.inputType;\n  var name = \"\".concat(tableId, \"-options\");\n  var isRadio = inputType === 'radio';\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey) {\n      event.preventDefault();\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    var isMultipleSelection = !isRadio && event.shiftKey;\n\n    if (isRadio && isSelected) {\n      return;\n    }\n\n    if (isSelected) {\n      onDeselectRow(event, isMultipleSelection);\n    } else {\n      onSelectRow(event, isMultipleSelection);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var keyCode = event.keyCode;\n\n    if (isRadio && (keyCode === _constants.LEFT_KEY || keyCode === _constants.RIGHT_KEY)) {\n      event.preventDefault();\n    }\n  };\n\n  return _react[\"default\"].createElement(\"td\", {\n    className: \"rainbow-table_cell-container\",\n    role: \"gridcell\",\n    tabIndex: -1\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"rainbow-table_cell-checkbox-container\",\n    role: \"presentation\",\n    onMouseDown: handleMouseDown\n  }, _react[\"default\"].createElement(_Input[\"default\"], {\n    className: \"rainbow-table_cell-checkbox\",\n    name: name,\n    label: \"select row\",\n    hideLabel: true,\n    type: inputType,\n    tabIndex: \"-1\",\n    checked: isSelected,\n    disabled: isDisabled,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  })));\n}\n\nSelectableCell.propTypes = {\n  isSelected: _propTypes[\"default\"].bool,\n  isDisabled: _propTypes[\"default\"].bool,\n  tableId: _propTypes[\"default\"].string.isRequired,\n  onSelectRow: _propTypes[\"default\"].func,\n  onDeselectRow: _propTypes[\"default\"].func,\n  inputType: _propTypes[\"default\"].string\n};\nSelectableCell.defaultProps = {\n  isSelected: false,\n  isDisabled: false,\n  onSelectRow: function onSelectRow() {},\n  onDeselectRow: function onDeselectRow() {},\n  inputType: 'checkbox'\n};","map":null,"metadata":{},"sourceType":"script"}