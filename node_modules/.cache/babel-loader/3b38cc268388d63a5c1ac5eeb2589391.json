{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Pagination;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _leftArrow = _interopRequireDefault(require(\"./leftArrow\"));\n\nvar _rightArrow = _interopRequireDefault(require(\"./rightArrow\"));\n\nvar _navigationButton = _interopRequireDefault(require(\"./navigationButton\"));\n\nvar _pageButtons = _interopRequireDefault(require(\"./pageButtons\"));\n\nrequire(\"./styles.css\");\n/**\n * @category Layout\n */\n\n\nfunction Pagination(props) {\n  var pages = props.pages,\n      activePage = props.activePage,\n      onChange = props.onChange,\n      className = props.className,\n      style = props.style;\n  var isFirstItemSelected = activePage === 1;\n  var isLastItemSelected = activePage === pages;\n  return _react[\"default\"].createElement(\"nav\", {\n    className: className,\n    \"aria-label\": \"pagination\",\n    style: style\n  }, _react[\"default\"].createElement(\"ul\", {\n    className: \"rainbow-pagination\"\n  }, _react[\"default\"].createElement(_navigationButton[\"default\"], {\n    dataId: \"previous-page-button\",\n    icon: _react[\"default\"].createElement(_leftArrow[\"default\"], null),\n    onClick: function onClick(event) {\n      return onChange(event, activePage - 1);\n    },\n    disabled: isFirstItemSelected,\n    ariaLabel: \"Goto Previous Page\"\n  }), _react[\"default\"].createElement(_pageButtons[\"default\"], {\n    onChange: onChange,\n    pages: pages,\n    activePage: activePage\n  }), _react[\"default\"].createElement(_navigationButton[\"default\"], {\n    dataId: \"next-page-button\",\n    icon: _react[\"default\"].createElement(_rightArrow[\"default\"], null),\n    onClick: function onClick(event) {\n      return onChange(event, activePage + 1);\n    },\n    disabled: isLastItemSelected,\n    ariaLabel: \"Goto Next Page\"\n  })));\n}\n\nPagination.propTypes = {\n  /** The total number of pages. e.g. if your collection has 120 items and the page\n  size is 50 then pages={Math.ceil(120/50)}/pages={3} */\n  pages: _propTypes[\"default\"].number.isRequired,\n\n  /** The number of the page that is selected. */\n  activePage: _propTypes[\"default\"].number,\n\n  /** The action triggered when page button is clicked. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nPagination.defaultProps = {\n  activePage: undefined,\n  onChange: function onChange() {},\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}