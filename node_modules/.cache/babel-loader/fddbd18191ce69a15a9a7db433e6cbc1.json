{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ProgressStep;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _ButtonIcon = _interopRequireDefault(require(\"../ButtonIcon\"));\n\nvar _context = require(\"../ProgressIndicator/context\");\n\nvar _doneIcon = _interopRequireDefault(require(\"./doneIcon\"));\n\nvar _errorIcon = _interopRequireDefault(require(\"./errorIcon\"));\n\nrequire(\"./styles.css\");\n/* eslint-disable react/prop-types */\n\n\nvar iconMap = {\n  Error: function Error() {\n    return _react[\"default\"].createElement(_errorIcon[\"default\"], null);\n  },\n  Completed: function Completed() {\n    return _react[\"default\"].createElement(_doneIcon[\"default\"], null);\n  },\n  Active: function Active() {\n    return _react[\"default\"].createElement(\"div\", {\n      className: \"rainbow-progress-step--is-active_icon\"\n    });\n  },\n  Inactive: function Inactive() {\n    return _react[\"default\"].createElement(\"div\", {\n      className: \"rainbow-progress-step_marker_icon\"\n    });\n  }\n};\n\nvar StepItem =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(StepItem, _Component);\n\n  function StepItem(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, StepItem);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(StepItem).call(this, props));\n    _this.handleOnClick = _this.handleOnClick.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.setStepState = _this.setStepState.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.state = {\n      stepState: 'Inactive'\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(StepItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          privateRegisterStep = _this$props.privateRegisterStep,\n          name = _this$props.name;\n      return setTimeout(function () {\n        return privateRegisterStep({\n          name: name,\n          onSetStepState: _this2.setStepState\n        });\n      }, 0);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var prevCurrentStepName = _ref.currentStepName;\n      var _this$props2 = this.props,\n          currentStepName = _this$props2.currentStepName,\n          name = _this$props2.name;\n\n      if (prevCurrentStepName !== currentStepName) {\n        this.props.setChildrenState({\n          name: name,\n          onSetStepState: this.setStepState\n        });\n      }\n    }\n  }, {\n    key: \"setStepState\",\n    value: function setStepState(stepState) {\n      var hasError = this.props.hasError;\n\n      if (hasError) {\n        return this.setState({\n          stepState: 'Error'\n        });\n      }\n\n      return this.setState({\n        stepState: stepState\n      });\n    }\n  }, {\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var className = this.props.className;\n      return (0, _classnames[\"default\"])('rainbow-progress-step', className);\n    }\n  }, {\n    key: \"getButtonClassNames\",\n    value: function getButtonClassNames() {\n      var stepState = this.state.stepState;\n      return (0, _classnames[\"default\"])({\n        'rainbow-progress-step_marker': stepState === 'Inactive',\n        'rainbow-progress-step--is-completed': stepState === 'Completed',\n        'rainbow-progress-step--is-active': stepState === 'Active',\n        'rainbow-progress-step--error': stepState === 'Error'\n      });\n    }\n  }, {\n    key: \"getAssistiveText\",\n    value: function getAssistiveText() {\n      var label = this.props.label;\n      var stepState = this.state.stepState;\n\n      if (label && stepState !== 'Inactive') {\n        return \"\".concat(label, \" - \").concat(stepState);\n      }\n\n      if (label) {\n        return label;\n      }\n\n      if (stepState !== 'Inactive') {\n        return stepState;\n      }\n\n      return '';\n    }\n  }, {\n    key: \"getIcon\",\n    value: function getIcon() {\n      var stepState = this.state.stepState;\n\n      if (iconMap[stepState]) {\n        return iconMap[stepState]();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleOnClick\",\n    value: function handleOnClick(event) {\n      var _this$props3 = this.props,\n          privateOnClick = _this$props3.privateOnClick,\n          name = _this$props3.name;\n      return privateOnClick(event, name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      return _react[\"default\"].createElement(\"li\", {\n        className: this.getContainerClassNames()\n      }, _react[\"default\"].createElement(_ButtonIcon[\"default\"], {\n        icon: this.getIcon(),\n        className: this.getButtonClassNames(),\n        onClick: this.handleOnClick,\n        assistiveText: this.getAssistiveText()\n      }), _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-progress-step_label\"\n      }, label));\n    }\n  }]);\n  return StepItem;\n}(_react.Component);\n\nfunction ProgressStep(props) {\n  return _react[\"default\"].createElement(_context.Consumer, null, function (context) {\n    return _react[\"default\"].createElement(StepItem, (0, _extends2[\"default\"])({}, props, context));\n  });\n}\n\nProgressStep.propTypes = {\n  /** The name is used to determine which ProgressStep is active. */\n  name: _propTypes[\"default\"].string,\n\n  /** Text label for the ProgressStep. */\n  label: _propTypes[\"default\"].node,\n\n  /** Indicates whether the current step is in error state and displays a warning icon\n   * on the step indicator. This value defaults to false. */\n  hasError: _propTypes[\"default\"].bool,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nProgressStep.defaultProps = {\n  name: '',\n  label: '',\n  hasError: false,\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}