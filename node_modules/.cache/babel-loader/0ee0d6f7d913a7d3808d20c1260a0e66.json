{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./../../libs/utils\");\n\nvar _AssistiveText = _interopRequireDefault(require(\"./../AssistiveText\"));\n\nvar _context = require(\"./context\");\n\nvar _getMaxHeight = _interopRequireDefault(require(\"./getMaxHeight\"));\n\nvar _description = _interopRequireDefault(require(\"./description\"));\n\nvar _rightArrow = _interopRequireDefault(require(\"./rightArrow\"));\n\nrequire(\"./styles.css\");\n/**\n * Represents an overflow of items from a preceding VerticalNavigationSection,\n * with the ability to toggle visibility.\n * @category Layout\n */\n\n\nvar VerticalSectionOverflow =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(VerticalSectionOverflow, _Component);\n\n  function VerticalSectionOverflow(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, VerticalSectionOverflow);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(VerticalSectionOverflow).call(this, props));\n    _this.searchResultsId = (0, _utils.uniqueId)('search-results');\n    _this.state = {\n      isExpanded: props.expanded\n    };\n    _this.toggleOverflow = _this.toggleOverflow.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(VerticalSectionOverflow, [{\n    key: \"getContainerClassNames\",\n    value: function getContainerClassNames() {\n      var className = this.props.className;\n      var isExpanded = this.state.isExpanded;\n      return (0, _classnames[\"default\"])('rainbow-vertical-section-overflow_container', {\n        'rainbow-vertical-section-overflow_container--expanded': isExpanded\n      }, className);\n    }\n  }, {\n    key: \"getButtonClassNames\",\n    value: function getButtonClassNames() {\n      var isExpanded = this.state.isExpanded;\n      var description = this.props.description;\n      return (0, _classnames[\"default\"])('rainbow-vertical-section-overflow_button', {\n        'rainbow-vertical-section-overflow_button--expanded': isExpanded && description\n      });\n    }\n  }, {\n    key: \"getOverflowClassName\",\n    value: function getOverflowClassName() {\n      var isExpanded = this.state.isExpanded;\n\n      if (isExpanded) {\n        return 'rainbow-vertical-section-overflow--show';\n      }\n\n      return 'rainbow-vertical-section-overflow--hide';\n    }\n  }, {\n    key: \"toggleOverflow\",\n    value: function toggleOverflow(event) {\n      var isExpanded = this.state.isExpanded;\n      var onToggleSection = this.props.onToggleSection;\n\n      if (typeof onToggleSection === 'function') {\n        return onToggleSection(event);\n      }\n\n      return this.setState({\n        isExpanded: !isExpanded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          description = _this$props.description,\n          style = _this$props.style,\n          assistiveText = _this$props.assistiveText,\n          children = _this$props.children;\n      var isExpanded = this.state.isExpanded;\n      var sectionMaxHeight = {\n        maxHeight: (0, _getMaxHeight[\"default\"])(children, isExpanded)\n      };\n      return _react[\"default\"].createElement(\"div\", {\n        \"data-id\": \"vertical-overflow-container\",\n        className: this.getContainerClassNames(),\n        style: style\n      }, _react[\"default\"].createElement(\"button\", {\n        className: this.getButtonClassNames(),\n        \"aria-controls\": this.searchResultsId,\n        \"aria-expanded\": isExpanded,\n        onClick: this.toggleOverflow\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"rainbow-vertical-section-overflow_action-text\"\n      }, _react[\"default\"].createElement(\"span\", {\n        className: \"rainbow-vertical-section-overflow_action-label\"\n      }, label), _react[\"default\"].createElement(_description[\"default\"], {\n        isExpanded: isExpanded,\n        description: description\n      }), _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n        text: assistiveText\n      })), _react[\"default\"].createElement(_rightArrow[\"default\"], {\n        isExpanded: isExpanded\n      })), _react[\"default\"].createElement(\"div\", {\n        \"data-id\": \"vertical-overflow\",\n        id: this.searchResultsId,\n        className: this.getOverflowClassName(),\n        style: sectionMaxHeight\n      }, _react[\"default\"].createElement(_context.Provider, {\n        value: isExpanded\n      }, _react[\"default\"].createElement(\"ul\", null, children))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      var expanded = nextProps.expanded,\n          onToggleSection = nextProps.onToggleSection;\n\n      if (expanded !== state.isExpanded && typeof onToggleSection === 'function') {\n        return {\n          isExpanded: expanded\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return VerticalSectionOverflow;\n}(_react.Component);\n\nexports[\"default\"] = VerticalSectionOverflow;\nVerticalSectionOverflow.propTypes = {\n  /** The label to show when the section is collapsed. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The description to show when the section is collapsed. */\n  description: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The state of the overflow. */\n  expanded: _propTypes[\"default\"].bool,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied for the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** Action fired when a component is clicked. */\n  onToggleSection: _propTypes[\"default\"].func,\n\n  /**\n   * This prop that should not be visible in the documentation.\n   * @ignore\n   */\n  children: _propTypes[\"default\"].node\n};\nVerticalSectionOverflow.defaultProps = {\n  label: '',\n  description: '',\n  expanded: false,\n  className: undefined,\n  style: undefined,\n  assistiveText: undefined,\n  children: null,\n  onToggleSection: undefined\n};","map":null,"metadata":{},"sourceType":"script"}