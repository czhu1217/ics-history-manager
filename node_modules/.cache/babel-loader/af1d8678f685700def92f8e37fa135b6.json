{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = StepTwo;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _uploadFileButton = _interopRequireDefault(require(\"./uploadFileButton\"));\n\nvar _preview = _interopRequireDefault(require(\"./preview\"));\n\nrequire(\"./styles.css\");\n\nfunction preventDefault(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nfunction StepTwo(props) {\n  var onProcessFile = props.onProcessFile,\n      isLoading = props.isLoading,\n      hasFileSelected = props.hasFileSelected,\n      columns = props.columns,\n      data = props.data,\n      onRemoveFile = props.onRemoveFile,\n      fileName = props.fileName,\n      fileType = props.fileType;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isDragOver = _useState2[0],\n      setIsDragOver = _useState2[1];\n\n  var getContainerClassNames = function getContainerClassNames() {\n    return (0, _classnames[\"default\"])('rainbow-import-records-flow_step-two-container', {\n      'rainbow-import-records-flow_step-two-container-drag-over': isDragOver\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    onProcessFile(event.target.files[0]);\n  };\n\n  var handleDragLeave = function handleDragLeave() {\n    setIsDragOver(false);\n  };\n\n  var handleDragOver = function handleDragOver(event) {\n    preventDefault(event);\n    setIsDragOver(true);\n  };\n\n  var handleDrop = function handleDrop(event) {\n    preventDefault(event);\n    setIsDragOver(false);\n    var files = event.dataTransfer.files;\n\n    if (files.length === 1 && files[0].type === 'text/csv') {\n      onProcessFile(files[0]);\n    }\n  };\n\n  if (hasFileSelected) {\n    return _react[\"default\"].createElement(_preview[\"default\"], {\n      fileName: fileName,\n      fileType: fileType,\n      columns: columns,\n      data: data,\n      isLoading: isLoading,\n      onRemoveFile: onRemoveFile\n    });\n  }\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: getContainerClassNames(),\n    onDragEnter: preventDefault,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    draggable: true\n  }, _react[\"default\"].createElement(_uploadFileButton[\"default\"], {\n    onChange: handleChange\n  }), _react[\"default\"].createElement(\"h1\", {\n    className: \"rainbow-import-records-flow_step-two-text\"\n  }, \"Find the file in your desktop.\"));\n}\n\nStepTwo.propTypes = {\n  onProcessFile: _propTypes[\"default\"].func,\n  isLoading: _propTypes[\"default\"].bool,\n  hasFileSelected: _propTypes[\"default\"].bool,\n  columns: _propTypes[\"default\"].array,\n  data: _propTypes[\"default\"].array,\n  onRemoveFile: _propTypes[\"default\"].func,\n  fileName: _propTypes[\"default\"].string,\n  fileType: _propTypes[\"default\"].string\n};\nStepTwo.defaultProps = {\n  onProcessFile: function onProcessFile() {},\n  isLoading: false,\n  hasFileSelected: false,\n  columns: [],\n  data: [],\n  onRemoveFile: function onRemoveFile() {},\n  fileName: '',\n  fileType: ''\n};","map":null,"metadata":{},"sourceType":"script"}