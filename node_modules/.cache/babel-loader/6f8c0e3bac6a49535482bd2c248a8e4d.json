{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Spinner;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _AssistiveText = _interopRequireDefault(require(\"./../AssistiveText\"));\n\nrequire(\"./styles.css\");\n/**\n * Spinners should be shown when retrieving data or performing slow,\n * help to reassure the user that the system is actively retrieving data.\n */\n\n\nfunction Spinner(props) {\n  var className = props.className,\n      style = props.style,\n      assistiveText = props.assistiveText,\n      isVisible = props.isVisible,\n      size = props.size,\n      variant = props.variant;\n\n  var getVariantClassNames = function getVariantClassNames() {\n    if (variant === 'base') {\n      return '';\n    }\n\n    return \"rainbow-spinner--\".concat(variant);\n  };\n\n  var getContainerClassNames = function getContainerClassNames() {\n    return (0, _classnames[\"default\"])('rainbow-spinner', \"rainbow-spinner--\".concat(size), getVariantClassNames(), className);\n  };\n\n  if (isVisible) {\n    return _react[\"default\"].createElement(\"div\", {\n      className: getContainerClassNames(),\n      style: style\n    }, _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(\"div\", null), _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n      text: assistiveText\n    }));\n  }\n\n  return null;\n}\n\nSpinner.propTypes = {\n  /** The variant changes the appearance of the spinner.\n   * Accepted variants are base, brand, and inverse. This value defaults to base. */\n  variant: _propTypes[\"default\"].oneOf(['base', 'brand', 'inverse', 'neutral']),\n\n  /** The size of the spinner. Accepted sizes are small, medium, and large.\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\n  /** Show/Hide the spinner. */\n  isVisible: _propTypes[\"default\"].bool,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nSpinner.defaultProps = {\n  variant: 'base',\n  size: 'medium',\n  isVisible: true,\n  assistiveText: null,\n  className: undefined,\n  style: undefined\n};","map":null,"metadata":{},"sourceType":"script"}